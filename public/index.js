(()=>{var e={303:e=>{window,e.exports=function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=19)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(4),i=t(6),o=t(3),a=function(){};n.Communication=a;var s=function(){function e(){}return e.parentMessageQueue=[],e.childMessageQueue=[],e.nextMessageId=0,e.callbacks={},e}();function l(e,n,t){var r;n instanceof Function?t=n:n instanceof Array&&(r=n);var o=a.parentWindow,l=function(e,n){return{id:s.nextMessageId++,func:e,timestamp:Date.now(),args:n||[]}}(e,r);if(i.GlobalVars.isFramelessWindow)a.currentWindow&&a.currentWindow.nativeInterface&&a.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(l));else{var d=m(o);o&&d?o.postMessage(l,d):c(o).push(l)}t&&(s.callbacks[l.id]=t)}function d(e){if(e&&e.data&&"object"==typeof e.data){var n=e.source||e.originalEvent&&e.originalEvent.source,t=e.origin||e.originalEvent&&e.originalEvent.origin;(function(e,n){return!(a.currentWindow&&e===a.currentWindow||!(a.currentWindow&&a.currentWindow.location&&n&&n===a.currentWindow.location.origin)&&!(r.validOriginRegExp.test(n.toLowerCase())||i.GlobalVars.additionalValidOriginsRegexp&&i.GlobalVars.additionalValidOriginsRegexp.test(n.toLowerCase())))})(n,t)&&(function(e,n){i.GlobalVars.isFramelessWindow||a.parentWindow&&!a.parentWindow.closed&&e!==a.parentWindow?a.childWindow&&!a.childWindow.closed&&e!==a.childWindow||(a.childWindow=e,a.childOrigin=n):(a.parentWindow=e,a.parentOrigin=n),a.parentWindow&&a.parentWindow.closed&&(a.parentWindow=null,a.parentOrigin=null),a.childWindow&&a.childWindow.closed&&(a.childWindow=null,a.childOrigin=null),f(a.parentWindow),f(a.childWindow)}(n,t),n===a.parentWindow?u(e):n===a.childWindow&&function(e){if("id"in e.data&&"func"in e.data){var n=e.data,t=o.callHandler(n.func,n.args),r=t[0],i=t[1];r&&void 0!==i?g(n.id,Array.isArray(i)?i:[i]):l(n.func,n.args,(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(a.childWindow){var r=e.pop();g(n.id,e,r)}}))}}(e))}}function u(e){if("id"in e.data&&"number"==typeof e.data.id){var n=e.data,t=s.callbacks[n.id];t&&(t.apply(null,n.args.concat([n.isPartialResponse])),function(e){return!0===e.data.isPartialResponse}(e)||delete s.callbacks[n.id])}else"func"in e.data&&"string"==typeof e.data.func&&(n=e.data,o.callHandler(n.func,n.args))}function c(e){return e===a.parentWindow?s.parentMessageQueue:e===a.childWindow?s.childMessageQueue:[]}function m(e){return e===a.parentWindow?a.parentOrigin:e===a.childWindow?a.childOrigin:null}function f(e){for(var n=m(e),t=c(e);e&&n&&t.length>0;)e.postMessage(t.shift(),n)}function g(e,n,t){var r=a.childWindow,i=function(e,n,t){return{id:e,args:n||[],isPartialResponse:t}}(e,n,t),o=m(r);r&&o&&r.postMessage(i,o)}n.initializeCommunication=function(e,n){s.messageListener=function(e){return d(e)},a.currentWindow=a.currentWindow||window,((a.parentWindow=a.currentWindow.parent!==a.currentWindow.self?a.currentWindow.parent:a.currentWindow.opener)||n)&&a.currentWindow.addEventListener("message",s.messageListener,!1),a.parentWindow||(i.GlobalVars.isFramelessWindow=!0,window.onNativeMessage=u);try{a.parentOrigin="*",l("initialize",[r.version],e)}finally{a.parentOrigin=null}},n.uninitializeCommunication=function(){a.currentWindow.removeEventListener("message",s.messageListener,!1),a.parentWindow=null,a.parentOrigin=null,a.childWindow=null,a.childOrigin=null,s.parentMessageQueue=[],s.childMessageQueue=[],s.nextMessageId=0,s.callbacks={}},n.sendMessageToParent=l,n.waitForMessageQueue=function(e,n){var t=a.currentWindow.setInterval((function(){0===c(e).length&&(clearInterval(t),n())}),100)},n.sendMessageEventToChild=function(e,n){var t=a.childWindow,r=function(e,n){return{func:e,args:n||[]}}(e,n),i=m(t);t&&i?t.postMessage(r,i):c(t).push(r)}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(4),i=t(6),o=t(5);n.ensureInitialized=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];if(!i.GlobalVars.initializeCalled)throw new Error("The library has not yet been initialized");if(i.GlobalVars.frameContext&&e&&e.length>0){for(var t=!1,r=0;r<e.length;r++)if(e[r]===i.GlobalVars.frameContext){t=!0;break}if(!t)throw new Error("This call is not allowed in the '"+i.GlobalVars.frameContext+"' context")}},n.isAPISupportedByPlatform=function(e){void 0===e&&(e=r.defaultSDKVersionForCompatCheck);var n=o.compareSDKVersions(i.GlobalVars.clientSupportedSDKVersion,e);return!isNaN(n)&&n>=0},n.processAdditionalValidOrigins=function(e){var n=i.GlobalVars.additionalValidOrigins.concat(e.filter((function(e){return"string"==typeof e&&r.userOriginUrlValidationRegExp.test(e)}))),t={};n=n.filter((function(e){return!t[e]&&(t[e]=!0,!0)})),i.GlobalVars.additionalValidOrigins=n,i.GlobalVars.additionalValidOrigins.length>0?i.GlobalVars.additionalValidOriginsRegexp=o.generateRegExpFromUrls(i.GlobalVars.additionalValidOrigins):i.GlobalVars.additionalValidOriginsRegexp=null}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.desktop="desktop",e.web="web",e.android="android",e.ios="ios",e.rigel="rigel",e.surfaceHub="surfaceHub"}(n.HostClientType||(n.HostClientType={})),function(e){e.settings="settings",e.content="content",e.authentication="authentication",e.remove="remove",e.task="task",e.sidePanel="sidePanel",e.stage="stage",e.meetingStage="meetingStage"}(n.FrameContexts||(n.FrameContexts={})),function(e){e[e.Standard=0]="Standard",e[e.Edu=1]="Edu",e[e.Class=2]="Class",e[e.Plc=3]="Plc",e[e.Staff=4]="Staff"}(n.TeamType||(n.TeamType={})),function(e){e[e.Admin=0]="Admin",e[e.User=1]="User",e[e.Guest=2]="Guest"}(n.UserTeamRole||(n.UserTeamRole={})),function(e){e.Large="large",e.Medium="medium",e.Small="small"}(n.TaskModuleDimension||(n.TaskModuleDimension={})),function(e){e.Regular="Regular",e.Private="Private",e.Shared="Shared"}(n.ChannelType||(n.ChannelType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(8),i=t(0),o=function(){function e(){}return e.handlers={},e}();function a(e){o.themeChangeHandler&&o.themeChangeHandler(e),i.Communication.childWindow&&i.sendMessageEventToChild("themeChange",[e])}function s(){o.backButtonPressHandler&&o.backButtonPressHandler()||r.navigateBack()}function l(e){o.loadHandler&&o.loadHandler(e),i.Communication.childWindow&&i.sendMessageEventToChild("load",[e])}function d(){var e=function(){i.sendMessageToParent("readyToUnload",[])};o.beforeUnloadHandler&&o.beforeUnloadHandler(e)||e()}n.initializeHandlers=function(){o.handlers.themeChange=a,o.handlers.backButtonPress=s,o.handlers.load=l,o.handlers.beforeUnload=d},n.callHandler=function(e,n){var t=o.handlers[e];return t?[!0,t.apply(this,n)]:[!1,void 0]},n.registerHandler=function(e,n,t,r){void 0===t&&(t=!0),void 0===r&&(r=[]),n?(o.handlers[e]=n,t&&i.sendMessageToParent("registerHandler",[e].concat(r))):delete o.handlers[e]},n.removeHandler=function(e){delete o.handlers[e]},n.registerOnThemeChangeHandler=function(e){o.themeChangeHandler=e,e&&i.sendMessageToParent("registerHandler",["themeChange"])},n.handleThemeChange=a,n.registerBackButtonHandler=function(e){o.backButtonPressHandler=e,e&&i.sendMessageToParent("registerHandler",["backButton"])},n.registerOnLoadHandler=function(e){o.loadHandler=e,e&&i.sendMessageToParent("registerHandler",["load"])},n.registerBeforeUnloadHandler=function(e){o.beforeUnloadHandler=e,e&&i.sendMessageToParent("registerHandler",["beforeUnload"])}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(5);n.version="1.10.0",n.defaultSDKVersionForCompatCheck="1.6.0",n.getUserJoinedTeamsSupportedAndroidClientVersion="2.0.1",n.locationAPIsRequiredVersion="1.9.0",n.peoplePickerRequiredVersion="2.0.0",n.captureImageMobileSupportVersion="1.7.0",n.mediaAPISupportVersion="1.8.0",n.getMediaCallbackSupportVersion="2.0.0",n.scanBarCodeAPIMobileSupportVersion="1.9.0",n.validOrigins=["https://teams.microsoft.com","https://teams.microsoft.us","https://gov.teams.microsoft.us","https://dod.teams.microsoft.us","https://int.teams.microsoft.com","https://teams.live.com","https://devspaces.skype.com","https://ssauth.skype.com","https://local.teams.live.com","https://local.teams.live.com:8080","https://local.teams.office.com","https://local.teams.office.com:8080","https://msft.spoppe.com","https://*.sharepoint.com","https://*.sharepoint-df.com","https://*.sharepointonline.com","https://outlook.office.com","https://outlook-sdf.office.com","https://*.teams.microsoft.com","https://www.office.com","https://word.office.com","https://excel.office.com","https://powerpoint.office.com","https://www.officeppe.com","https://*.www.office.com"],n.validOriginRegExp=r.generateRegExpFromUrls(n.validOrigins),n.userOriginUrlValidationRegExp=/^https\:\/\//},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(22);function i(e){for(var n="^",t=e.split("."),r=0;r<t.length;r++)n+=(r>0?"[.]":"")+t[r].replace("*","[^/^.]+");return n+"$"}n.generateRegExpFromUrls=function(e){for(var n="",t=0;t<e.length;t++)n+=(0===t?"":"|")+i(e[t]);return new RegExp(n)},n.getGenericOnCompleteHandler=function(e){return function(n,t){if(!n)throw new Error(e||t)}},n.compareSDKVersions=function(e,n){if("string"!=typeof e||"string"!=typeof n)return NaN;var t=e.split("."),r=n.split(".");function i(e){return/^\d+$/.test(e)}if(!t.every(i)||!r.every(i))return NaN;for(;t.length<r.length;)t.push("0");for(;r.length<t.length;)r.push("0");for(var o=0;o<t.length;++o)if(Number(t[o])!=Number(r[o]))return Number(t[o])>Number(r[o])?1:-1;return 0},n.generateGUID=function(){return r.v4()}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(){}return e.initializeCalled=!1,e.initializeCompleted=!1,e.additionalValidOrigins=[],e.additionalValidOriginsRegexp=null,e.initializeCallbacks=[],e.isFramelessWindow=!1,e.printCapabilityEnabled=!1,e}();n.GlobalVars=r},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.Inline="inline",e.Desktop="desktop",e.Web="web"}(n.FileOpenPreference||(n.FileOpenPreference={})),function(e){e[e.NOT_SUPPORTED_ON_PLATFORM=100]="NOT_SUPPORTED_ON_PLATFORM",e[e.INTERNAL_ERROR=500]="INTERNAL_ERROR",e[e.NOT_SUPPORTED_IN_CURRENT_CONTEXT=501]="NOT_SUPPORTED_IN_CURRENT_CONTEXT",e[e.PERMISSION_DENIED=1e3]="PERMISSION_DENIED",e[e.NETWORK_ERROR=2e3]="NETWORK_ERROR",e[e.NO_HW_SUPPORT=3e3]="NO_HW_SUPPORT",e[e.INVALID_ARGUMENTS=4e3]="INVALID_ARGUMENTS",e[e.UNAUTHORIZED_USER_OPERATION=5e3]="UNAUTHORIZED_USER_OPERATION",e[e.INSUFFICIENT_RESOURCES=6e3]="INSUFFICIENT_RESOURCES",e[e.THROTTLE=7e3]="THROTTLE",e[e.USER_ABORT=8e3]="USER_ABORT",e[e.OPERATION_TIMED_OUT=8001]="OPERATION_TIMED_OUT",e[e.OLD_PLATFORM=9e3]="OLD_PLATFORM",e[e.FILE_NOT_FOUND=404]="FILE_NOT_FOUND",e[e.SIZE_EXCEEDED=1e4]="SIZE_EXCEEDED"}(n.ErrorCode||(n.ErrorCode={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(25);n.appInitialization=r.appInitialization;var i=t(11);n.authentication=i.authentication;var o=t(2);n.FrameContexts=o.FrameContexts,n.HostClientType=o.HostClientType,n.TaskModuleDimension=o.TaskModuleDimension,n.TeamType=o.TeamType,n.UserTeamRole=o.UserTeamRole,n.ChannelType=o.ChannelType;var a=t(7);n.ErrorCode=a.ErrorCode,n.FileOpenPreference=a.FileOpenPreference;var s=t(26);n.enablePrintCapability=s.enablePrintCapability,n.executeDeepLink=s.executeDeepLink,n.getContext=s.getContext,n.getMruTabInstances=s.getMruTabInstances,n.getTabInstances=s.getTabInstances,n.initialize=s.initialize,n.initializeWithFrameContext=s.initializeWithFrameContext,n.print=s.print,n.registerBackButtonHandler=s.registerBackButtonHandler,n.registerBeforeUnloadHandler=s.registerBeforeUnloadHandler,n.registerChangeSettingsHandler=s.registerChangeSettingsHandler,n.registerFullScreenHandler=s.registerFullScreenHandler,n.registerOnLoadHandler=s.registerOnLoadHandler,n.registerOnThemeChangeHandler=s.registerOnThemeChangeHandler,n.registerAppButtonClickHandler=s.registerAppButtonClickHandler,n.registerAppButtonHoverEnterHandler=s.registerAppButtonHoverEnterHandler,n.registerAppButtonHoverLeaveHandler=s.registerAppButtonHoverLeaveHandler,n.setFrameContext=s.setFrameContext,n.shareDeepLink=s.shareDeepLink;var l=t(27);n.returnFocus=l.returnFocus,n.navigateBack=l.navigateBack,n.navigateCrossDomain=l.navigateCrossDomain,n.navigateToTab=l.navigateToTab;var d=t(12);n.settings=d.settings;var u=t(28);n.tasks=u.tasks;var c=t(16);n.ChildAppWindow=c.ChildAppWindow,n.ParentAppWindow=c.ParentAppWindow;var m=t(17);n.media=m.media;var f=t(29);n.location=f.location;var g=t(30);n.meeting=g.meeting;var p=t(31);n.people=p.people},function(e,n){var t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(t){var r=new Uint8Array(16);e.exports=function(){return t(r),r}}else{var i=new Array(16);e.exports=function(){for(var e,n=0;n<16;n++)0==(3&n)&&(e=4294967296*Math.random()),i[n]=e>>>((3&n)<<3)&255;return i}}},function(e,n){for(var t=[],r=0;r<256;++r)t[r]=(r+256).toString(16).substr(1);e.exports=function(e,n){var r=n||0,i=t;return[i[e[r++]],i[e[r++]],i[e[r++]],i[e[r++]],"-",i[e[r++]],i[e[r++]],"-",i[e[r++]],i[e[r++]],"-",i[e[r++]],i[e[r++]],"-",i[e[r++]],i[e[r++]],i[e[r++]],i[e[r++]],i[e[r++]],i[e[r++]]].join("")}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(6),o=t(2),a=t(0),s=t(3);!function(e){var n,t;function l(){d();try{a.Communication.childWindow&&a.Communication.childWindow.close()}finally{a.Communication.childWindow=null,a.Communication.childOrigin=null}}function d(){t&&(clearInterval(t),t=0),s.removeHandler("initialize"),s.removeHandler("navigateCrossDomain")}function u(){d(),t=a.Communication.currentWindow.setInterval((function(){if(!a.Communication.childWindow||a.Communication.childWindow.closed)m("CancelledByUser");else{var e=a.Communication.childOrigin;try{a.Communication.childOrigin="*",a.sendMessageEventToChild("ping")}finally{a.Communication.childOrigin=e}}}),100),s.registerHandler("initialize",(function(){return[o.FrameContexts.authentication,i.GlobalVars.hostClientType]})),s.registerHandler("navigateCrossDomain",(function(){return!1}))}function c(e){try{n&&n.successCallback&&n.successCallback(e)}finally{n=null,l()}}function m(e){try{n&&n.failureCallback&&n.failureCallback(e)}finally{n=null,l()}}function f(e,n,t){if(e){var r=document.createElement("a");r.href=decodeURIComponent(e),r.host&&r.host!==window.location.host&&"outlook.office.com"===r.host&&r.search.indexOf("client_type=Win32_Outlook")>-1&&(n&&"result"===n&&(t&&(r.href=g(r.href,"result",t)),a.Communication.currentWindow.location.assign(g(r.href,"authSuccess",""))),n&&"reason"===n&&(t&&(r.href=g(r.href,"reason",t)),a.Communication.currentWindow.location.assign(g(r.href,"authFailure",""))))}}function g(e,n,t){var r=e.indexOf("#"),i=-1===r?"#":e.substr(r);return i=i+"&"+n+(""!==t?"="+t:""),(e=-1===r?e:e.substr(0,r))+i}e.initialize=function(){s.registerHandler("authentication.authenticate.success",c,!1),s.registerHandler("authentication.authenticate.failure",m,!1)},e.registerAuthenticationHandlers=function(e){n=e},e.authenticate=function(e){var t=void 0!==e?e:n;if(r.ensureInitialized(o.FrameContexts.content,o.FrameContexts.sidePanel,o.FrameContexts.settings,o.FrameContexts.remove,o.FrameContexts.task,o.FrameContexts.stage,o.FrameContexts.meetingStage),i.GlobalVars.hostClientType===o.HostClientType.desktop||i.GlobalVars.hostClientType===o.HostClientType.android||i.GlobalVars.hostClientType===o.HostClientType.ios||i.GlobalVars.hostClientType===o.HostClientType.rigel){var s=document.createElement("a");s.href=t.url,a.sendMessageToParent("authentication.authenticate",[s.href,t.width,t.height],(function(e,n){e?t.successCallback(n):t.failureCallback(n)}))}else!function(e){n=e,l();var t=n.width||600,r=n.height||400;t=Math.min(t,a.Communication.currentWindow.outerWidth-400),r=Math.min(r,a.Communication.currentWindow.outerHeight-200);var i=document.createElement("a");i.href=n.url;var o=void 0!==a.Communication.currentWindow.screenLeft?a.Communication.currentWindow.screenLeft:a.Communication.currentWindow.screenX,s=void 0!==a.Communication.currentWindow.screenTop?a.Communication.currentWindow.screenTop:a.Communication.currentWindow.screenY;o+=a.Communication.currentWindow.outerWidth/2-t/2,s+=a.Communication.currentWindow.outerHeight/2-r/2,a.Communication.childWindow=a.Communication.currentWindow.open(i.href,"_blank","toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top="+s+", left="+o+", width="+t+", height="+r),a.Communication.childWindow?u():m("FailedToOpenWindow")}(t)},e.getAuthToken=function(e){r.ensureInitialized(),a.sendMessageToParent("authentication.getAuthToken",[e.resources,e.claims,e.silent],(function(n,t){n?e.successCallback(t):e.failureCallback(t)}))},e.getUser=function(e){r.ensureInitialized(),a.sendMessageToParent("authentication.getUser",(function(n,t){n?e.successCallback(t):e.failureCallback(t)}))},e.notifySuccess=function(e,n){f(n,"result",e),r.ensureInitialized(o.FrameContexts.authentication),a.sendMessageToParent("authentication.authenticate.success",[e]),a.waitForMessageQueue(a.Communication.parentWindow,(function(){return setTimeout((function(){return a.Communication.currentWindow.close()}),200)}))},e.notifyFailure=function(e,n){f(n,"reason",e),r.ensureInitialized(o.FrameContexts.authentication),a.sendMessageToParent("authentication.authenticate.failure",[e]),a.waitForMessageQueue(a.Communication.parentWindow,(function(){return setTimeout((function(){return a.Communication.currentWindow.close()}),200)}))}}(n.authentication||(n.authentication={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(2),o=t(5),a=t(0),s=t(3);!function(e){var n,t;function l(e){var t=new d(e);n?n(t):t.notifySuccess()}e.initialize=function(){s.registerHandler("settings.save",l,!1),s.registerHandler("settings.remove",u,!1)},e.setValidityState=function(e){r.ensureInitialized(i.FrameContexts.settings,i.FrameContexts.remove),a.sendMessageToParent("settings.setValidityState",[e])},e.getSettings=function(e){r.ensureInitialized(i.FrameContexts.content,i.FrameContexts.settings,i.FrameContexts.remove,i.FrameContexts.sidePanel),a.sendMessageToParent("settings.getSettings",e)},e.setSettings=function(e,n){r.ensureInitialized(i.FrameContexts.content,i.FrameContexts.settings,i.FrameContexts.sidePanel),a.sendMessageToParent("settings.setSettings",[e],n||o.getGenericOnCompleteHandler())},e.registerOnSaveHandler=function(e){r.ensureInitialized(i.FrameContexts.settings),n=e,e&&a.sendMessageToParent("registerHandler",["save"])},e.registerOnRemoveHandler=function(e){r.ensureInitialized(i.FrameContexts.remove,i.FrameContexts.settings),t=e,e&&a.sendMessageToParent("registerHandler",["remove"])};var d=function(){function e(e){this.notified=!1,this.result=e||{}}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),a.sendMessageToParent("settings.save.success"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),a.sendMessageToParent("settings.save.failure",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error("The SaveEvent may only notify success or failure once.")},e}();function u(){var e=new c;t?t(e):e.notifySuccess()}var c=function(){function e(){this.notified=!1}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),a.sendMessageToParent("settings.remove.success"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),a.sendMessageToParent("settings.remove.failure",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error("The removeEvent may only notify success or failure once.")},e}()}(n.settings||(n.settings={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(0),o=t(3);!function(e){e.registerGetLogHandler=function(e){r.ensureInitialized(),e?o.registerHandler("log.request",(function(){var n=e();i.sendMessageToParent("log.receive",[n])})):o.removeHandler("log.request")}}(n.logs||(n.logs={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(2),o=t(5),a=t(0),s=t(15),l=t(3),d=t(6),u=t(7),c=t(4);n.initializePrivateApis=function(){s.menus.initialize()},n.getUserJoinedTeams=function(e,n){if(r.ensureInitialized(),d.GlobalVars.hostClientType===i.HostClientType.android&&!r.isAPISupportedByPlatform(c.getUserJoinedTeamsSupportedAndroidClientVersion)){var t={errorCode:u.ErrorCode.OLD_PLATFORM};throw new Error(JSON.stringify(t))}a.sendMessageToParent("getUserJoinedTeams",[n],e)},n.enterFullscreen=function(){r.ensureInitialized(i.FrameContexts.content),a.sendMessageToParent("enterFullscreen",[])},n.exitFullscreen=function(){r.ensureInitialized(i.FrameContexts.content),a.sendMessageToParent("exitFullscreen",[])},n.openFilePreview=function(e){r.ensureInitialized(i.FrameContexts.content);var n=[e.entityId,e.title,e.description,e.type,e.objectUrl,e.downloadUrl,e.webPreviewUrl,e.webEditUrl,e.baseUrl,e.editFile,e.subEntityId,e.viewerAction,e.fileOpenPreference];a.sendMessageToParent("openFilePreview",n)},n.showNotification=function(e){r.ensureInitialized(i.FrameContexts.content);var n=[e.message,e.notificationType];a.sendMessageToParent("showNotification",n)},n.uploadCustomApp=function(e,n){r.ensureInitialized(),a.sendMessageToParent("uploadCustomApp",[e],n||o.getGenericOnCompleteHandler())},n.sendCustomMessage=function(e,n,t){r.ensureInitialized(),a.sendMessageToParent(e,n,t)},n.sendCustomEvent=function(e,n){if(r.ensureInitialized(),!a.Communication.childWindow)throw new Error("The child window has not yet been initialized or is not present");a.sendMessageEventToChild(e,n)},n.registerCustomHandler=function(e,n){var t=this;r.ensureInitialized(),l.registerHandler(e,(function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return n.apply(t,e)}))},n.getChatMembers=function(e){r.ensureInitialized(),a.sendMessageToParent("getChatMembers",e)},n.getConfigSetting=function(e,n){r.ensureInitialized(),a.sendMessageToParent("getConfigSetting",[n],e)},n.registerUserSettingsChangeHandler=function(e,n){r.ensureInitialized(),l.registerHandler("userSettingsChange",n,!0,[e])}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(0),o=t(3);!function(e){var n,t,a;function s(e){a&&a(e)||(r.ensureInitialized(),i.sendMessageToParent("viewConfigItemPress",[e]))}function l(e){n&&n(e)||(r.ensureInitialized(),i.sendMessageToParent("handleNavBarMenuItemPress",[e]))}function d(e){t&&t(e)||(r.ensureInitialized(),i.sendMessageToParent("handleActionMenuItemPress",[e]))}e.MenuItem=function(){this.enabled=!0,this.selected=!1},function(e){e.dropDown="dropDown",e.popOver="popOver"}(e.MenuListType||(e.MenuListType={})),e.initialize=function(){o.registerHandler("navBarMenuItemPress",l,!1),o.registerHandler("actionMenuItemPress",d,!1),o.registerHandler("setModuleView",s,!1)},e.setUpViews=function(e,n){r.ensureInitialized(),a=n,i.sendMessageToParent("setUpViews",[e])},e.setNavBarMenu=function(e,t){r.ensureInitialized(),n=t,i.sendMessageToParent("setNavBarMenu",[e])},e.showActionMenu=function(e,n){r.ensureInitialized(),t=n,i.sendMessageToParent("showActionMenu",[e])}}(n.menus||(n.menus={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(2),o=t(5),a=t(0),s=t(3),l=function(){function e(){}return e.prototype.postMessage=function(e,n){r.ensureInitialized(),a.sendMessageToParent("messageForChild",[e],n||o.getGenericOnCompleteHandler())},e.prototype.addEventListener=function(e,n){"message"===e&&s.registerHandler("messageForParent",n)},e}();n.ChildAppWindow=l;var d=function(){function e(){}return Object.defineProperty(e,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.postMessage=function(e,n){r.ensureInitialized(i.FrameContexts.task),a.sendMessageToParent("messageForParent",[e],n||o.getGenericOnCompleteHandler())},e.prototype.addEventListener=function(e,n){"message"===e&&s.registerHandler("messageForChild",n)},e}();n.ParentAppWindow=d},function(e,n,t){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();Object.defineProperty(n,"__esModule",{value:!0});var i=t(6),o=t(7),a=t(1),s=t(2),l=t(5),d=t(18),u=t(0),c=t(3),m=t(4);!function(e){!function(e){e.Base64="base64",e.ID="id"}(e.FileFormat||(e.FileFormat={}));var n=function(){};e.File=n,e.captureImage=function(e){if(!e)throw new Error("[captureImage] Callback cannot be null");a.ensureInitialized(s.FrameContexts.content,s.FrameContexts.task),i.GlobalVars.isFramelessWindow?a.isAPISupportedByPlatform(m.captureImageMobileSupportVersion)?u.sendMessageToParent("captureImage",e):e({errorCode:o.ErrorCode.OLD_PLATFORM},void 0):e({errorCode:o.ErrorCode.NOT_SUPPORTED_ON_PLATFORM},void 0)};var t=function(e){function n(n){void 0===n&&(n=null);var t=e.call(this)||this;return n&&(t.content=n.content,t.format=n.format,t.mimeType=n.mimeType,t.name=n.name,t.preview=n.preview,t.size=n.size),t}return r(n,e),n.prototype.getMedia=function(e){if(!e)throw new Error("[get Media] Callback cannot be null");a.ensureInitialized(s.FrameContexts.content,s.FrameContexts.task),a.isAPISupportedByPlatform(m.mediaAPISupportVersion)?d.validateGetMediaInputs(this.mimeType,this.format,this.content)?a.isAPISupportedByPlatform(m.getMediaCallbackSupportVersion)?this.getMediaViaCallback(e):this.getMediaViaHandler(e):e({errorCode:o.ErrorCode.INVALID_ARGUMENTS},null):e({errorCode:o.ErrorCode.OLD_PLATFORM},null)},n.prototype.getMediaViaCallback=function(e){var n={mediaMimeType:this.mimeType,assembleAttachment:[]},t=[this.content];u.sendMessageToParent("getMedia",t,(function(t){if(e)if(t&&t.error)e(t.error,null);else if(t&&t.mediaChunk)if(t.mediaChunk.chunkSequence<=0){var r=d.createFile(n.assembleAttachment,n.mediaMimeType);e(t.error,r)}else{var i=d.decodeAttachment(t.mediaChunk,n.mediaMimeType);n.assembleAttachment.push(i)}else e({errorCode:o.ErrorCode.INTERNAL_ERROR,message:"data receieved is null"},null)}))},n.prototype.getMediaViaHandler=function(e){var n=l.generateGUID(),t={mediaMimeType:this.mimeType,assembleAttachment:[]},r=[n,this.content];this.content&&e&&u.sendMessageToParent("getMedia",r),c.registerHandler("getMedia"+n,(function(r){if(e){var i=JSON.parse(r);if(i.error)e(i.error,null),c.removeHandler("getMedia"+n);else if(i.mediaChunk)if(i.mediaChunk.chunkSequence<=0){var a=d.createFile(t.assembleAttachment,t.mediaMimeType);e(i.error,a),c.removeHandler("getMedia"+n)}else{var s=d.decodeAttachment(i.mediaChunk,t.mediaMimeType);t.assembleAttachment.push(s)}else e({errorCode:o.ErrorCode.INTERNAL_ERROR,message:"data receieved is null"},null),c.removeHandler("getMedia"+n)}}))},n}(n);e.Media=t,function(e){e[e.Photo=1]="Photo",e[e.Document=2]="Document",e[e.Whiteboard=3]="Whiteboard",e[e.BusinessCard=4]="BusinessCard"}(e.CameraStartMode||(e.CameraStartMode={})),function(e){e[e.Camera=1]="Camera",e[e.Gallery=2]="Gallery"}(e.Source||(e.Source={})),function(e){e[e.Image=1]="Image",e[e.Audio=4]="Audio"}(e.MediaType||(e.MediaType={})),function(e){e[e.ID=1]="ID",e[e.URL=2]="URL"}(e.ImageUriType||(e.ImageUriType={})),e.selectMedia=function(e,n){if(!n)throw new Error("[select Media] Callback cannot be null");if(a.ensureInitialized(s.FrameContexts.content,s.FrameContexts.task),a.isAPISupportedByPlatform(m.mediaAPISupportVersion))if(d.validateSelectMediaInputs(e)){var r=[e];u.sendMessageToParent("selectMedia",r,(function(e,r){if(r){for(var i=[],o=0,a=r;o<a.length;o++){var s=a[o];i.push(new t(s))}n(e,i)}else n(e,null)}))}else{var i={errorCode:o.ErrorCode.INVALID_ARGUMENTS};n(i,null)}else{var l={errorCode:o.ErrorCode.OLD_PLATFORM};n(l,null)}},e.viewImages=function(e,n){if(!n)throw new Error("[view images] Callback cannot be null");if(a.ensureInitialized(s.FrameContexts.content,s.FrameContexts.task),a.isAPISupportedByPlatform(m.mediaAPISupportVersion))if(d.validateViewImagesInput(e)){var t=[e];u.sendMessageToParent("viewImages",t,n)}else n({errorCode:o.ErrorCode.INVALID_ARGUMENTS});else n({errorCode:o.ErrorCode.OLD_PLATFORM})},e.scanBarCode=function(e,n){if(!e)throw new Error("[media.scanBarCode] Callback cannot be null");a.ensureInitialized(s.FrameContexts.content,s.FrameContexts.task),i.GlobalVars.hostClientType!==s.HostClientType.desktop&&i.GlobalVars.hostClientType!==s.HostClientType.web&&i.GlobalVars.hostClientType!==s.HostClientType.rigel?a.isAPISupportedByPlatform(m.scanBarCodeAPIMobileSupportVersion)?d.validateScanBarCodeInput(n)?u.sendMessageToParent("media.scanBarCode",[n],e):e({errorCode:o.ErrorCode.INVALID_ARGUMENTS},null):e({errorCode:o.ErrorCode.OLD_PLATFORM},null):e({errorCode:o.ErrorCode.NOT_SUPPORTED_ON_PLATFORM},null)}}(n.media||(n.media={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(17);n.createFile=function(e,n){if(null==e||null==n||e.length<=0)return null;var t,r=1;return e.sort((function(e,n){return e.sequence>n.sequence?1:-1})),e.forEach((function(e){e.sequence==r&&(t=t?new Blob([t,e.file],{type:n}):new Blob([e.file],{type:n}),r++)})),t},n.decodeAttachment=function(e,n){if(null==e||null==n)return null;for(var t=atob(e.chunk),r=new Array(t.length),i=0;i<t.length;i++)r[i]=t.charCodeAt(i);var o=new Uint8Array(r),a=new Blob([o],{type:n});return{sequence:e.chunkSequence,file:a}},n.validateSelectMediaInputs=function(e){return!(null==e||e.maxMediaCount>10)},n.validateGetMediaInputs=function(e,n,t){return null!=e&&null!=n&&n==r.media.FileFormat.ID&&null!=t},n.validateViewImagesInput=function(e){return!(null==e||e.length<=0||e.length>10)},n.validateScanBarCodeInput=function(e){return!e||!(null===e.timeOutIntervalInSec||e.timeOutIntervalInSec<=0||e.timeOutIntervalInSec>60)},n.validatePeoplePickerInput=function(e){if(e){if(e.title&&"string"!=typeof e.title)return!1;if(e.setSelected&&"object"!=typeof e.setSelected)return!1;if(e.openOrgWideSearchInChatOrChannel&&"boolean"!=typeof e.openOrgWideSearchInChatOrChannel)return!1;if(e.singleSelect&&"boolean"!=typeof e.singleSelect)return!1}return!0}},function(e,n,t){"use strict";function r(e){for(var t in e)n.hasOwnProperty(t)||(n[t]=e[t])}Object.defineProperty(n,"__esModule",{value:!0}),r(t(20)),r(t(8))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(21);n.bot=r.bot;var i=t(15);n.menus=i.menus;var o=t(13);n.logs=o.logs;var a=t(32);n.NotificationTypes=a.NotificationTypes,n.ViewerActionTypes=a.ViewerActionTypes,n.UserSettingTypes=a.UserSettingTypes;var s=t(14);n.enterFullscreen=s.enterFullscreen,n.exitFullscreen=s.exitFullscreen,n.getChatMembers=s.getChatMembers,n.getConfigSetting=s.getConfigSetting,n.getUserJoinedTeams=s.getUserJoinedTeams,n.openFilePreview=s.openFilePreview,n.sendCustomMessage=s.sendCustomMessage,n.showNotification=s.showNotification,n.sendCustomEvent=s.sendCustomEvent,n.registerCustomHandler=s.registerCustomHandler,n.uploadCustomApp=s.uploadCustomApp,n.registerUserSettingsChangeHandler=s.registerUserSettingsChangeHandler;var l=t(33);n.conversations=l.conversations;var d=t(34);n.meetingRoom=d.meetingRoom;var u=t(35);n.remoteCamera=u.remoteCamera;var c=t(36);n.files=c.files;var m=t(37);n.appEntity=m.appEntity},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t(1);!function(e){e.sendQuery=function(e,n,t){i.ensureInitialized(),r.sendMessageToParent("bot.executeQuery",[e],(function(e,r){e?n(r):t(r)}))},e.getSupportedCommands=function(e,n){i.ensureInitialized(),r.sendMessageToParent("bot.getSupportedCommands",(function(t,r){t?e(r):n(r)}))},e.authenticate=function(e,n,t){i.ensureInitialized(),r.sendMessageToParent("bot.authenticate",[e],(function(e,r){e?n(r):t(r)}))},function(e){e.Results="Results",e.Auth="Auth"}(e.ResponseType||(e.ResponseType={}))}(n.bot||(n.bot={}))},function(e,n,t){var r=t(23),i=t(24),o=i;o.v1=r,o.v4=i,e.exports=o},function(e,n,t){var r,i,o=t(9),a=t(10),s=0,l=0;e.exports=function(e,n,t){var d=n&&t||0,u=n||[],c=(e=e||{}).node||r,m=void 0!==e.clockseq?e.clockseq:i;if(null==c||null==m){var f=o();null==c&&(c=r=[1|f[0],f[1],f[2],f[3],f[4],f[5]]),null==m&&(m=i=16383&(f[6]<<8|f[7]))}var g=void 0!==e.msecs?e.msecs:(new Date).getTime(),p=void 0!==e.nsecs?e.nsecs:l+1,C=g-s+(p-l)/1e4;if(C<0&&void 0===e.clockseq&&(m=m+1&16383),(C<0||g>s)&&void 0===e.nsecs&&(p=0),p>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");s=g,l=p,i=m;var h=(1e4*(268435455&(g+=122192928e5))+p)%4294967296;u[d++]=h>>>24&255,u[d++]=h>>>16&255,u[d++]=h>>>8&255,u[d++]=255&h;var v=g/4294967296*1e4&268435455;u[d++]=v>>>8&255,u[d++]=255&v,u[d++]=v>>>24&15|16,u[d++]=v>>>16&255,u[d++]=m>>>8|128,u[d++]=255&m;for(var b=0;b<6;++b)u[d+b]=c[b];return n||a(u)}},function(e,n,t){var r=t(9),i=t(10);e.exports=function(e,n,t){var o=n&&t||0;"string"==typeof e&&(n="binary"===e?new Array(16):null,e=null);var a=(e=e||{}).random||(e.rng||r)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,n)for(var s=0;s<16;++s)n[o+s]=a[s];return n||i(a)}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(4),o=t(0);!function(e){e.Messages={AppLoaded:"appInitialization.appLoaded",Success:"appInitialization.success",Failure:"appInitialization.failure",ExpectedFailure:"appInitialization.expectedFailure"},function(e){e.AuthFailed="AuthFailed",e.Timeout="Timeout",e.Other="Other"}(e.FailedReason||(e.FailedReason={})),function(e){e.PermissionError="PermissionError",e.NotFound="NotFound",e.Throttling="Throttling",e.Offline="Offline",e.Other="Other"}(e.ExpectedFailureReason||(e.ExpectedFailureReason={})),e.notifyAppLoaded=function(){r.ensureInitialized(),o.sendMessageToParent(e.Messages.AppLoaded,[i.version])},e.notifySuccess=function(){r.ensureInitialized(),o.sendMessageToParent(e.Messages.Success,[i.version])},e.notifyFailure=function(n){r.ensureInitialized(),o.sendMessageToParent(e.Messages.Failure,[n.reason,n.message])},e.notifyExpectedFailure=function(n){r.ensureInitialized(),o.sendMessageToParent(e.Messages.ExpectedFailure,[n.reason,n.message])}}(n.appInitialization||(n.appInitialization={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(6),o=t(4),a=t(12),s=t(5),l=t(13),d=t(2),u=t(0),c=t(11),m=t(14),f=t(3);function g(e,n){i.GlobalVars.initializeCalled||(i.GlobalVars.initializeCalled=!0,f.initializeHandlers(),u.initializeCommunication((function(e,n,t){void 0===t&&(t=o.defaultSDKVersionForCompatCheck),i.GlobalVars.frameContext=e,i.GlobalVars.hostClientType=n,i.GlobalVars.clientSupportedSDKVersion=t,i.GlobalVars.initializeCallbacks.forEach((function(e){return e()})),i.GlobalVars.initializeCallbacks=[],i.GlobalVars.initializeCompleted=!0}),n),c.authentication.initialize(),a.settings.initialize(),m.initializePrivateApis(),this._uninitialize=function(){i.GlobalVars.frameContext&&(C(null),h(null),v(null),y(null),b(null),l.logs.registerGetLogHandler(null)),i.GlobalVars.frameContext===d.FrameContexts.settings&&a.settings.registerOnSaveHandler(null),i.GlobalVars.frameContext===d.FrameContexts.remove&&a.settings.registerOnRemoveHandler(null),i.GlobalVars.initializeCalled=!1,i.GlobalVars.initializeCompleted=!1,i.GlobalVars.initializeCallbacks=[],i.GlobalVars.additionalValidOrigins=[],i.GlobalVars.frameContext=null,i.GlobalVars.hostClientType=null,i.GlobalVars.isFramelessWindow=!1,u.uninitializeCommunication()}),Array.isArray(n)&&r.processAdditionalValidOrigins(n),e&&(i.GlobalVars.initializeCompleted?e():i.GlobalVars.initializeCallbacks.push(e))}function p(){window.print()}function C(e){r.ensureInitialized(),f.registerOnThemeChangeHandler(e)}function h(e){r.ensureInitialized(),f.registerHandler("fullScreenChange",e)}function v(e){r.ensureInitialized(),f.registerBackButtonHandler(e)}function b(e){r.ensureInitialized(),f.registerOnLoadHandler(e)}function y(e){r.ensureInitialized(),f.registerBeforeUnloadHandler(e)}function T(e){r.ensureInitialized(d.FrameContexts.content),u.sendMessageToParent("setFrameContext",[e])}n.initialize=g,n._initialize=function(e){u.Communication.currentWindow=e},n._uninitialize=function(){},n.enablePrintCapability=function(){i.GlobalVars.printCapabilityEnabled||(i.GlobalVars.printCapabilityEnabled=!0,r.ensureInitialized(),document.addEventListener("keydown",(function(e){(e.ctrlKey||e.metaKey)&&80===e.keyCode&&(p(),e.cancelBubble=!0,e.preventDefault(),e.stopImmediatePropagation())})))},n.print=p,n.getContext=function(e){r.ensureInitialized(),u.sendMessageToParent("getContext",(function(n){n.frameContext||(n.frameContext=i.GlobalVars.frameContext),e(n)}))},n.registerOnThemeChangeHandler=C,n.registerFullScreenHandler=h,n.registerAppButtonClickHandler=function(e){r.ensureInitialized(d.FrameContexts.content),f.registerHandler("appButtonClick",e)},n.registerAppButtonHoverEnterHandler=function(e){r.ensureInitialized(d.FrameContexts.content),f.registerHandler("appButtonHoverEnter",e)},n.registerAppButtonHoverLeaveHandler=function(e){r.ensureInitialized(d.FrameContexts.content),f.registerHandler("appButtonHoverLeave",e)},n.registerBackButtonHandler=v,n.registerOnLoadHandler=b,n.registerBeforeUnloadHandler=y,n.registerChangeSettingsHandler=function(e){r.ensureInitialized(d.FrameContexts.content),f.registerHandler("changeSettings",e)},n.getTabInstances=function(e,n){r.ensureInitialized(),u.sendMessageToParent("getTabInstances",[n],e)},n.getMruTabInstances=function(e,n){r.ensureInitialized(),u.sendMessageToParent("getMruTabInstances",[n],e)},n.shareDeepLink=function(e){r.ensureInitialized(d.FrameContexts.content,d.FrameContexts.sidePanel,d.FrameContexts.meetingStage),u.sendMessageToParent("shareDeepLink",[e.subEntityId,e.subEntityLabel,e.subEntityWebUrl])},n.executeDeepLink=function(e,n){r.ensureInitialized(d.FrameContexts.content,d.FrameContexts.sidePanel,d.FrameContexts.settings,d.FrameContexts.task,d.FrameContexts.stage,d.FrameContexts.meetingStage),u.sendMessageToParent("executeDeepLink",[e],n||s.getGenericOnCompleteHandler())},n.setFrameContext=T,n.initializeWithFrameContext=function(e,n,t){g(n,t),T(e)}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(5),o=t(2),a=t(0);n.returnFocus=function(e){r.ensureInitialized(o.FrameContexts.content),a.sendMessageToParent("returnFocus",[e])},n.navigateToTab=function(e,n){r.ensureInitialized(),a.sendMessageToParent("navigateToTab",[e],n||i.getGenericOnCompleteHandler("Invalid internalTabInstanceId and/or channelId were/was provided"))},n.navigateCrossDomain=function(e,n){r.ensureInitialized(o.FrameContexts.content,o.FrameContexts.sidePanel,o.FrameContexts.settings,o.FrameContexts.remove,o.FrameContexts.task,o.FrameContexts.stage,o.FrameContexts.meetingStage),a.sendMessageToParent("navigateCrossDomain",[e],n||i.getGenericOnCompleteHandler("Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest."))},n.navigateBack=function(e){r.ensureInitialized(),a.sendMessageToParent("navigateBack",[],e||i.getGenericOnCompleteHandler("Back navigation is not supported in the current client or context."))}},function(e,n,t){"use strict";var r=this&&this.__rest||function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)n.indexOf(r[i])<0&&(t[r[i]]=e[r[i]])}return t};Object.defineProperty(n,"__esModule",{value:!0});var i=t(2),o=t(16),a=t(0),s=t(1);!function(e){e.startTask=function(e,n){return s.ensureInitialized(i.FrameContexts.content,i.FrameContexts.sidePanel,i.FrameContexts.meetingStage),a.sendMessageToParent("tasks.startTask",[e],n),new o.ChildAppWindow},e.updateTask=function(e){s.ensureInitialized(i.FrameContexts.content,i.FrameContexts.sidePanel,i.FrameContexts.task,i.FrameContexts.meetingStage),e.width,e.height;var n=r(e,["width","height"]);if(Object.keys(n).length)throw new Error("updateTask requires a taskInfo argument containing only width and height");a.sendMessageToParent("tasks.updateTask",[e])},e.submitTask=function(e,n){s.ensureInitialized(i.FrameContexts.content,i.FrameContexts.sidePanel,i.FrameContexts.task,i.FrameContexts.meetingStage),a.sendMessageToParent("tasks.completeTask",[e,Array.isArray(n)?n:[n]])}}(n.tasks||(n.tasks={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(7),i=t(1),o=t(2),a=t(0),s=t(4);!function(e){e.getLocation=function(e,n){if(!n)throw new Error("[location.getLocation] Callback cannot be null");i.ensureInitialized(o.FrameContexts.content,o.FrameContexts.task),i.isAPISupportedByPlatform(s.locationAPIsRequiredVersion)?e?a.sendMessageToParent("location.getLocation",[e],n):n({errorCode:r.ErrorCode.INVALID_ARGUMENTS},void 0):n({errorCode:r.ErrorCode.OLD_PLATFORM},void 0)},e.showLocation=function(e,n){if(!n)throw new Error("[location.showLocation] Callback cannot be null");i.ensureInitialized(o.FrameContexts.content,o.FrameContexts.task),i.isAPISupportedByPlatform(s.locationAPIsRequiredVersion)?e?a.sendMessageToParent("location.showLocation",[e],n):n({errorCode:r.ErrorCode.INVALID_ARGUMENTS},void 0):n({errorCode:r.ErrorCode.OLD_PLATFORM},void 0)}}(n.location||(n.location={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t(3),o=t(1),a=t(2);!function(e){!function(e){e.Unknown="Unknown",e.Adhoc="Adhoc",e.Scheduled="Scheduled",e.Recurring="Recurring",e.Broadcast="Broadcast",e.MeetNow="MeetNow"}(e.MeetingType||(e.MeetingType={})),e.getIncomingClientAudioState=function(e){if(!e)throw new Error("[get incoming client audio state] Callback cannot be null");o.ensureInitialized(),r.sendMessageToParent("getIncomingClientAudioState",e)},e.toggleIncomingClientAudio=function(e){if(!e)throw new Error("[toggle incoming client audio] Callback cannot be null");o.ensureInitialized(),r.sendMessageToParent("toggleIncomingClientAudio",e)},e.getMeetingDetails=function(e){if(!e)throw new Error("[get meeting details] Callback cannot be null");o.ensureInitialized(),r.sendMessageToParent("meeting.getMeetingDetails",e)},e.getAuthenticationTokenForAnonymousUser=function(e){if(!e)throw new Error("[get Authentication Token For AnonymousUser] Callback cannot be null");o.ensureInitialized(),r.sendMessageToParent("meeting.getAuthenticationTokenForAnonymousUser",e)},e.getLiveStreamState=function(e){if(!e)throw new Error("[get live stream state] Callback cannot be null");o.ensureInitialized(a.FrameContexts.sidePanel),r.sendMessageToParent("meeting.getLiveStreamState",e)},e.requestStartLiveStreaming=function(e,n,t){if(!e)throw new Error("[request start live streaming] Callback cannot be null");o.ensureInitialized(a.FrameContexts.sidePanel),r.sendMessageToParent("meeting.requestStartLiveStreaming",[n,t],e)},e.requestStopLiveStreaming=function(e){if(!e)throw new Error("[request stop live streaming] Callback cannot be null");o.ensureInitialized(a.FrameContexts.sidePanel),r.sendMessageToParent("meeting.requestStopLiveStreaming",e)},e.registerLiveStreamChangedHandler=function(e){if(!e)throw new Error("[register live stream changed handler] Handler cannot be null");o.ensureInitialized(a.FrameContexts.sidePanel),i.registerHandler("meeting.liveStreamChanged",e)}}(n.meeting||(n.meeting={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(2),o=t(7),a=t(18),s=t(0),l=t(4);(n.people||(n.people={})).selectPeople=function(e,n){if(!e)throw new Error("[people picker] Callback cannot be null");r.ensureInitialized(i.FrameContexts.content,i.FrameContexts.task,i.FrameContexts.settings),r.isAPISupportedByPlatform(l.peoplePickerRequiredVersion)?a.validatePeoplePickerInput(n)?s.sendMessageToParent("people.selectPeople",[n],e):e({errorCode:o.ErrorCode.INVALID_ARGUMENTS},null):e({errorCode:o.ErrorCode.OLD_PLATFORM},void 0)}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.fileDownloadStart="fileDownloadStart",e.fileDownloadComplete="fileDownloadComplete"}(n.NotificationTypes||(n.NotificationTypes={})),function(e){e.view="view",e.edit="edit",e.editNew="editNew"}(n.ViewerActionTypes||(n.ViewerActionTypes={})),function(e){e.fileOpenPreference="fileOpenPreference",e.theme="theme"}(n.UserSettingTypes||(n.UserSettingTypes={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(2),o=t(0),a=t(3);!function(e){e.openConversation=function(e){r.ensureInitialized(i.FrameContexts.content),o.sendMessageToParent("conversations.openConversation",[{title:e.title,subEntityId:e.subEntityId,conversationId:e.conversationId,channelId:e.channelId,entityId:e.entityId}],(function(e,n){if(!e)throw new Error(n)})),e.onStartConversation&&a.registerHandler("startConversation",(function(n,t,r,i){return e.onStartConversation({subEntityId:n,conversationId:t,channelId:r,entityId:i})})),e.onCloseConversation&&a.registerHandler("closeConversation",(function(n,t,r,i){return e.onCloseConversation({subEntityId:n,conversationId:t,channelId:r,entityId:i})}))},e.closeConversation=function(){r.ensureInitialized(i.FrameContexts.content),o.sendMessageToParent("conversations.closeConversation"),a.removeHandler("startConversation"),a.removeHandler("closeConversation")}}(n.conversations||(n.conversations={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(0),o=t(3);!function(e){!function(e){e.toggleMute="toggleMute",e.toggleCamera="toggleCamera",e.toggleCaptions="toggleCaptions",e.volume="volume",e.showVideoGallery="showVideoGallery",e.showContent="showContent",e.showVideoGalleryAndContent="showVideoGalleryAndContent",e.showLargeGallery="showLargeGallery",e.showTogether="showTogether",e.leaveMeeting="leaveMeeting"}(e.Capability||(e.Capability={})),e.getPairedMeetingRoomInfo=function(e){r.ensureInitialized(),i.sendMessageToParent("meetingRoom.getPairedMeetingRoomInfo",e)},e.sendCommandToPairedMeetingRoom=function(e,n){if(!e||0==e.length)throw new Error("[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty");if(!n)throw new Error("[meetingRoom.sendCommandToPairedMeetingRoom] Callback cannot be null");r.ensureInitialized(),i.sendMessageToParent("meetingRoom.sendCommandToPairedMeetingRoom",[e],n)},e.registerMeetingRoomCapabilitiesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null");r.ensureInitialized(),o.registerHandler("meetingRoom.meetingRoomCapabilitiesUpdate",(function(n){r.ensureInitialized(),e(n)}))},e.registerMeetingRoomStatesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null");r.ensureInitialized(),o.registerHandler("meetingRoom.meetingRoomStatesUpdate",(function(n){r.ensureInitialized(),e(n)}))}}(n.meetingRoom||(n.meetingRoom={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(1),i=t(2),o=t(0),a=t(3);!function(e){!function(e){e.Reset="Reset",e.ZoomIn="ZoomIn",e.ZoomOut="ZoomOut",e.PanLeft="PanLeft",e.PanRight="PanRight",e.TiltUp="TiltUp",e.TiltDown="TiltDown"}(e.ControlCommand||(e.ControlCommand={})),function(e){e[e.CommandResetError=0]="CommandResetError",e[e.CommandZoomInError=1]="CommandZoomInError",e[e.CommandZoomOutError=2]="CommandZoomOutError",e[e.CommandPanLeftError=3]="CommandPanLeftError",e[e.CommandPanRightError=4]="CommandPanRightError",e[e.CommandTiltUpError=5]="CommandTiltUpError",e[e.CommandTiltDownError=6]="CommandTiltDownError",e[e.SendDataError=7]="SendDataError"}(e.ErrorReason||(e.ErrorReason={})),function(e){e[e.None=0]="None",e[e.ControlDenied=1]="ControlDenied",e[e.ControlNoResponse=2]="ControlNoResponse",e[e.ControlBusy=3]="ControlBusy",e[e.AckTimeout=4]="AckTimeout",e[e.ControlTerminated=5]="ControlTerminated",e[e.ControllerTerminated=6]="ControllerTerminated",e[e.DataChannelError=7]="DataChannelError",e[e.ControllerCancelled=8]="ControllerCancelled",e[e.ControlDisabled=9]="ControlDisabled"}(e.SessionTerminatedReason||(e.SessionTerminatedReason={})),e.getCapableParticipants=function(e){if(!e)throw new Error("[remoteCamera.getCapableParticipants] Callback cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),o.sendMessageToParent("remoteCamera.getCapableParticipants",e)},e.requestControl=function(e,n){if(!e)throw new Error("[remoteCamera.requestControl] Participant cannot be null");if(!n)throw new Error("[remoteCamera.requestControl] Callback cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),o.sendMessageToParent("remoteCamera.requestControl",[e],n)},e.sendControlCommand=function(e,n){if(!e)throw new Error("[remoteCamera.sendControlCommand] ControlCommand cannot be null");if(!n)throw new Error("[remoteCamera.sendControlCommand] Callback cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),o.sendMessageToParent("remoteCamera.sendControlCommand",[e],n)},e.terminateSession=function(e){if(!e)throw new Error("[remoteCamera.terminateSession] Callback cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),o.sendMessageToParent("remoteCamera.terminateSession",e)},e.registerOnCapableParticipantsChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnCapableParticipantsChangeHandler] Handler cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),a.registerHandler("remoteCamera.capableParticipantsChange",e)},e.registerOnErrorHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnErrorHandler] Handler cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),a.registerHandler("remoteCamera.handlerError",e)},e.registerOnDeviceStateChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnDeviceStateChangeHandler] Handler cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),a.registerHandler("remoteCamera.deviceStateChange",e)},e.registerOnSessionStatusChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnSessionStatusChangeHandler] Handler cannot be null");r.ensureInitialized(i.FrameContexts.sidePanel),a.registerHandler("remoteCamera.sessionStatusChange",e)}}(n.remoteCamera||(n.remoteCamera={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t(1),o=t(8);!function(e){!function(e){e.Dropbox="DROPBOX",e.Box="BOX",e.Sharefile="SHAREFILE",e.GoogleDrive="GOOGLEDRIVE",e.Egnyte="EGNYTE"}(e.CloudStorageProvider||(e.CloudStorageProvider={})),function(e){e[e.Sharepoint=0]="Sharepoint",e[e.WopiIntegration=1]="WopiIntegration",e[e.Google=2]="Google"}(e.CloudStorageProviderType||(e.CloudStorageProviderType={})),e.getCloudStorageFolders=function(e,n){if(i.ensureInitialized(o.FrameContexts.content),!e||0==e.length)throw new Error("[files.getCloudStorageFolders] channelId name cannot be null or empty");if(!n)throw new Error("[files.getCloudStorageFolders] Callback cannot be null");r.sendMessageToParent("files.getCloudStorageFolders",[e],n)},e.addCloudStorageFolder=function(e,n){if(i.ensureInitialized(o.FrameContexts.content),!e||0==e.length)throw new Error("[files.addCloudStorageFolder] channelId name cannot be null or empty");if(!n)throw new Error("[files.addCloudStorageFolder] Callback cannot be null");r.sendMessageToParent("files.addCloudStorageFolder",[e],n)},e.deleteCloudStorageFolder=function(e,n,t){if(i.ensureInitialized(o.FrameContexts.content),!e)throw new Error("[files.deleteCloudStorageFolder] channelId name cannot be null or empty");if(!n)throw new Error("[files.deleteCloudStorageFolder] folderToDelete cannot be null or empty");if(!t)throw new Error("[files.deleteCloudStorageFolder] Callback cannot be null");r.sendMessageToParent("files.deleteCloudStorageFolder",[e,n],t)},e.getCloudStorageFolderContents=function(e,n,t){if(i.ensureInitialized(o.FrameContexts.content),!e||!n)throw new Error("[files.getCloudStorageFolderContents] folder/providerCode name cannot be null or empty");if(!t)throw new Error("[files.getCloudStorageFolderContents] Callback cannot be null");if("isSubdirectory"in e&&!e.isSubdirectory)throw new Error("[files.getCloudStorageFolderContents] provided folder is not a subDirectory");r.sendMessageToParent("files.getCloudStorageFolderContents",[e,n],t)},e.openCloudStorageFile=function(e,n,t){if(i.ensureInitialized(o.FrameContexts.content),!e||!n)throw new Error("[files.openCloudStorageFile] file/providerCode cannot be null or empty");if(e.isSubdirectory)throw new Error("[files.openCloudStorageFile] provided file is a subDirectory");r.sendMessageToParent("files.openCloudStorageFile",[e,n,t])}}(n.files||(n.files={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t(1),o=t(8);(n.appEntity||(n.appEntity={})).selectAppEntity=function(e,n,t){if(i.ensureInitialized(o.FrameContexts.content),!e||0==e.length)throw new Error("[appEntity.selectAppEntity] threadId name cannot be null or empty");if(!t)throw new Error("[appEntity.selectAppEntity] Callback cannot be null");r.sendMessageToParent("appEntity.selectAppEntity",[e,n],t)}}])},960:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.initializeDCP=void 0;const a=o(t(303)),s=t(974);n.initializeDCP=()=>{const e='{\n  "mediaType" : 2,\n  "maxMediaCount" : 3,\n  "videoProps" : \n  {\n    "sources" : [1,2],\n    "startMode" : 5,\n    "ink" : true,\n    "cameraSwitcher" : true,\n    "textSticker" : true,\n    "enableFilter" : false\n  }\n}';l("initializeDCP"),a.initialize();const n=document.querySelector("select#apiType"),t=document.querySelector("#mediaType"),r=document.getElementById("start"),i=document.getElementById("inputTextArea");function o(){document.getElementById("logs").innerText="",document.getElementById("blob").innerText=""}function l(e){s.printLog("DCP",e)}i.value=e,t.onchange=()=>{const n=t.options[t.selectedIndex].value;i.value="image"==n||"audio"==n?'{\n  "mediaType" : 1,\n  "maxMediaCount" : 1,\n  "imageProps" : \n  {\n    "sources" : [1,2],\n    "startMode" : 1,\n    "ink" : true,\n    "cameraSwitcher" : true,\n    "textSticker" : true,\n    "enableFilter" : false\n  }\n}':e},document.getElementById("clearLogs").onclick=()=>{o()},r.onclick=()=>{o();const e=JSON.parse(i.value),t=n.options[n.selectedIndex].value;var r;l(`${t} : ${JSON.stringify(e)}`),"getMedia"==t?(r=e,a.media.selectMedia(r,((e,n)=>{if(e)l(e.errorCode+" "+e.message);else for(let e=0;e<n.length;e++)n[e].getMedia(((n,t)=>{if(n)l(n.errorCode+" "+n.message);else{var r=document.getElementById("blob"),i=new FileReader;i.readAsDataURL(t),i.onloadend=()=>{if(i.result){if(l("MEDIA "+(e+1)+" - Received Blob "+i.result+", size - "+s.formatFileSize(t.size)+" -- "+URL.createObjectURL(t)),t.type.includes("image")){var n=document.createElement("img");n.style.width="100px",n.style.height="120px",n.src=URL.createObjectURL(t),r.appendChild(n)}if(t.type.includes("video")){var o=document.createElement("video");o.style.width="100px",o.style.height="120px",o.src=URL.createObjectURL(t),o.controls=!0,r.appendChild(o)}}}}}))}))):"viewImages"==t?function(e){a.media.selectMedia(e,((e,n)=>{if(e)return void l(e.errorCode+" "+e.message);const t=[];for(let e=0;e<n.length;e++){const r=n[e];t.push({value:r.content,type:1})}a.media.viewImages(t,(e=>{l(e?e.errorCode+" "+e.message:"Success")}))}))}(e):function(e){a.media.selectMedia(e,((e,n)=>{if(e)return void l(e.errorCode+" "+e.message);let t="";for(let e=0;e<n.length;e++){const a=n[e];let s="",d=20;a.preview&&(d=Math.min(d,a.preview.length),s=a.preview.substr(0,d)),t+="MEDIA "+(e+1)+" - [format: "+a.format+", size: "+a.size+", mimeType: "+a.mimeType+", content: "+a.content+", preview: "+s+"]";var r=document.getElementById("blob");if(a.mimeType.includes("image")){var i=document.createElement("img");i.style.width="100px",i.style.height="120px",i.src="data:"+a.mimeType+";base64,"+a.preview,r.appendChild(i)}if(a.mimeType.includes("video")){var o=document.createElement("video");o.style.width="100px",o.style.height="120px",o.src="data:"+a.mimeType+";base64,"+a.preview,o.controls=!0,r.appendChild(o)}l(t),t=""}}))}(e)}}},974:(e,n)=>{"use strict";function t(){var e=new Date;return e.getDate()+"/"+(e.getMonth()+1)+"/"+e.getFullYear()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds()}Object.defineProperty(n,"__esModule",{value:!0}),n.formatFileSize=n.printLog=n.getCurrentDateTime=void 0,n.getCurrentDateTime=t,n.printLog=function(e,n){var r="["+t()+"] "+n,i=document.getElementById("logs"),o=document.createElement("p");o.innerText=r,i.insertBefore(o,i.firstChild)},n.formatFileSize=function(e,n){if(0==e)return"0 Bytes";var t=n||2,r=Math.floor(Math.log(e)/Math.log(1e3));return parseFloat((e/Math.pow(1e3,r)).toFixed(t))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][r]}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={exports:{}};return e[r].call(o.exports,o,o.exports,t),o.exports}(()=>{"use strict";t(960).initializeDCP()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,