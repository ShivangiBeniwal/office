(()=>{var e={303:function(e){var t;"undefined"!=typeof self&&self,t=()=>(()=>{var e={302:(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let i=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(i++,"%c"===e&&(o=i))})),t.splice(o,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(65)(t);const{formatters:i}=e.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},65:(e,t,n)=>{e.exports=function(e){function t(e){let n,o,r,a=null;function s(...e){if(!s.enabled)return;const i=s,o=Number(new Date),r=o-(n||o);i.diff=r,i.prev=n,i.curr=o,n=o,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,o)=>{if("%%"===n)return"%";a++;const r=t.formatters[o];if("function"==typeof r){const t=e[a];n=r.call(i,t),e.splice(a,1),a--}return n})),t.formatArgs.call(i,e),(i.log||t.log).apply(i,e)}return s.namespace=e,s.useColors=t.useColors(),s.color=t.selectColor(e),s.extend=i,s.destroy=t.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==a?a:(o!==t.namespaces&&(o=t.namespaces,r=t.enabled(e)),r),set:e=>{a=e}}),"function"==typeof t.init&&t.init(s),s}function i(e,n){const i=t(this.namespace+(void 0===n?":":n)+e);return i.log=this.log,i}function o(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(o),...t.skips.map(o).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const i=("string"==typeof e?e:"").split(/[\s,]+/),o=i.length;for(n=0;n<o;n++)i[n]&&("-"===(e=i[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,i;for(n=0,i=t.skips.length;n<i;n++)if(t.skips[n].test(e))return!1;for(n=0,i=t.names.length;n<i;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(247),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},247:e=>{var t=1e3,n=60*t,i=60*n,o=24*i;function r(e){if(!((e=String(e)).length>100)){var r=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(r){var a=parseFloat(r[1]);switch((r[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*a;case"weeks":case"week":case"w":return 6048e5*a;case"days":case"day":case"d":return a*o;case"hours":case"hour":case"hrs":case"hr":case"h":return a*i;case"minutes":case"minute":case"mins":case"min":case"m":return a*n;case"seconds":case"second":case"secs":case"sec":case"s":return a*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}}}function a(e){var r=Math.abs(e);return r>=o?Math.round(e/o)+"d":r>=i?Math.round(e/i)+"h":r>=n?Math.round(e/n)+"m":r>=t?Math.round(e/t)+"s":e+"ms"}function s(e){var r=Math.abs(e);return r>=o?l(e,r,o,"day"):r>=i?l(e,r,i,"hour"):r>=n?l(e,r,n,"minute"):r>=t?l(e,r,t,"second"):e+" ms"}function l(e,t,n,i){var o=t>=1.5*n;return Math.round(e/n)+" "+i+(o?"s":"")}e.exports=function(e,t){t=t||{};var n=typeof e;if("string"===n&&e.length>0)return r(e);if("number"===n&&isFinite(e))return t.long?s(e):a(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}}},t={};function n(i){var o=t[i];if(void 0!==o)return o.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,n),r.exports}(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(i,o){if(1&o&&(i=this(i)),8&o)return i;if("object"==typeof i&&i){if(4&o&&i.__esModule)return i;if(16&o&&"function"==typeof i.then)return i}var r=Object.create(null);n.r(r);var a={};e=e||[null,t({}),t([]),t(t)];for(var s=2&o&&i;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach((e=>a[e]=()=>i[e]));return a.default=()=>i,n.d(r,a),r}})(),n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{"use strict";n.r(i),n.d(i,{ActionObjectType:()=>P,ChannelType:()=>z,ChildAppWindow:()=>Tn,DialogDimension:()=>U,ErrorCode:()=>O,FileOpenPreference:()=>N,FrameContexts:()=>_,HostClientType:()=>F,HostName:()=>L,LiveShareHost:()=>zi,NotificationTypes:()=>Zt,ParentAppWindow:()=>bn,SecondaryM365ContentIdName:()=>D,TaskModuleDimension:()=>H,TeamType:()=>x,UserSettingTypes:()=>Jt,UserTeamRole:()=>j,ViewerActionTypes:()=>Yt,app:()=>Ze,appEntity:()=>oo,appInitialization:()=>si,appInstallDialog:()=>sn,authentication:()=>Re,barCode:()=>mn,calendar:()=>On,call:()=>ai,chat:()=>hn,clipboard:()=>yn,conversations:()=>$t,dialog:()=>Ue,enablePrintCapability:()=>pi,executeDeepLink:()=>Ni,externalAppAuthentication:()=>$i,externalAppCardActions:()=>Xi,files:()=>Ki,geoLocation:()=>Mn,getAdaptiveCardSchemaVersion:()=>In,getContext:()=>gi,getMruTabInstances:()=>Ei,getTabInstances:()=>bi,initialize:()=>di,initializeWithFrameContext:()=>Di,liveShare:()=>Ui,location:()=>An,logs:()=>Qt,mail:()=>Rn,marketplace:()=>Ji,media:()=>un,meeting:()=>Nn,meetingRoom:()=>eo,menus:()=>ze,monetization:()=>Pn,navigateBack:()=>Li,navigateCrossDomain:()=>Fi,navigateToTab:()=>Ri,notifications:()=>to,openFilePreview:()=>on,pages:()=>ot,people:()=>Ln,print:()=>fi,profile:()=>_n,registerAppButtonClickHandler:()=>wi,registerAppButtonHoverEnterHandler:()=>Ci,registerAppButtonHoverLeaveHandler:()=>yi,registerBackButtonHandler:()=>vi,registerBeforeUnloadHandler:()=>Si,registerChangeSettingsHandler:()=>Ti,registerCustomHandler:()=>tn,registerFocusEnterHandler:()=>Ii,registerFullScreenHandler:()=>hi,registerOnLoadHandler:()=>Mi,registerOnThemeChangeHandler:()=>mi,registerUserSettingsChangeHandler:()=>nn,remoteCamera:()=>no,returnFocus:()=>ki,search:()=>Xn,secondaryBrowser:()=>Sn,sendCustomEvent:()=>en,sendCustomMessage:()=>Kt,setFrameContext:()=>Pi,settings:()=>_i,shareDeepLink:()=>Ai,sharing:()=>Kn,stageView:()=>ei,tasks:()=>ji,teams:()=>ro,teamsCore:()=>Fn,thirdPartyCloudStorage:()=>ci,uploadCustomApp:()=>Xt,version:()=>Ce,videoEffects:()=>$n,videoEffectsEx:()=>ao,visualMedia:()=>ni,webStorage:()=>ii});const e=(0,n(302).debug)("teamsJs");function t(t){return e.extend(t)}function o(e,t){return`${e}_${t}`}function r(e){return/^v\d+_[\w.]+$/.test(e)}var a,s;!function(e){e.V_0="v0",e.V_1="v1",e.V_2="v2",e.V_3="v3"}(a||(a={})),function(e){e.App_GetContext="app.getContext",e.App_Initialize="app.initialize",e.App_NotifyAppLoaded="app.notifyAppLoaded",e.App_NotifyExpectedFailure="app.notifyExpectedFailure",e.App_NotifyFailure="app.notifyFailure",e.App_NotifySuccess="app.notifySuccess",e.App_OpenLink="app.openLink",e.App_RegisterOnThemeChangeHandler="app.registerOnThemeChangeHandler",e.AppEntity_SelectAppEntity="appEntity.selectAppEntity",e.BarCode_HasPermission="barCode.hasPermission",e.BarCode_RequestPermission="barCode.requestPermission",e.BarCode_ScanBarCode="barCode.scanBarCode",e.Calendar_ComposeMeeting="calendar.composeMeeting",e.Calendar_OpenCalendarItem="calendar.openCalendarItem",e.Call_StartCall="call.startCall",e.Clipboard_Read="clipboard.read",e.Clipboard_Write="clipboard.write",e.Dialog_AdaptiveCard_Bot_Open="dialog.adaptiveCard.bot.open",e.Dialog_AdaptiveCard_Open="dialog.adaptiveCard.open",e.Dialog_Update_Resize="dialog.update.resize",e.Dialog_Url_Bot_Open="dialog.url.bot.open",e.Dialog_Url_Open="dialog.url.open",e.Dialog_Url_Submit="dialog.url.submit",e.Dialog_Url_SendMessageToParentFromDialog="dialog.url.sendMessageToParentFromDialog",e.Dialog_Url_SendMessageToDialog="dialog.url.sendMessageToDialog",e.GeoLocation_GetCurrentLocation="geoLocation.getCurrentLocation",e.GeoLocation_HasPermission="geoLocation.hasPermission",e.GeoLocation_Map_ChooseLocation="geoLocation.map.chooseLocation",e.GeoLocation_RequestPermission="geoLocation.hasPermission",e.GeoLocation_ShowLocation="geoLocation.showLocation",e.Location_GetLocation="location.getLocation",e.Location_ShowLocation="location.showLocation",e.Mail_ComposeMail="mail.composeMail",e.Mail_OpenMailItem="mail.openMailItem",e.Marketplace_AddOrUpdateCartItems="marketplace.addOrUpdateCartItems",e.Marketplace_GetCart="marketplace.getCart",e.Marketplace_RemoveCardItems="marketplace.removeCartItems",e.Marketplace_UpdateCartStatus="marketplace.updateCartStatus",e.Media_CaptureImage="media.captureImage",e.Media_Controller="media.controller",e.Media_GetMedia="media.getMedia",e.Media_HasPermission="media.hasPermission",e.Media_RequestPermission="media.requestPermission",e.Media_ScanBarCode="media.scanBarCode",e.Media_SelectMedia="media.selectMedia",e.Media_ViewImages="media.viewImages",e.Navigation_NavigateBack="navigation.navigateBack",e.Navigation_NavigateCrossDomain="navigation.navigateCrossDomain",e.Navigation_NavigateToTab="navigation.navigateToTab",e.Navigation_ReturnFocus="navigation.returnFocus",e.Pages_AppButton_OnClick="pages.appButton.onClick",e.Pages_AppButton_OnHoverEnter="pages.appButton.onHoverEnter",e.Pages_AppButton_OnHoverLeave="pages.appButton.onHoverLeave",e.Pages_BackStack_NavigateBack="pages.backStack.navigateBack",e.Pages_BackStack_RegisterBackButtonHandler="pages.backStack.registerBackButtonHandler",e.Pages_Config_RegisterChangeConfigHandler="pages.config.registerChangeConfigHandler",e.Pages_Config_RegisterOnRemoveHandlerHelper="pages.config.registerOnRemoveHandlerHelper",e.Pages_Config_RegisterOnSaveHandlerHelper="pages.config.registerOnSaveHandlerHelper",e.Pages_Config_SetConfig="pages.config.setConfig",e.Pages_Config_SetValidityState="pages.config.setValidityState",e.Pages_CurrentApp_NavigateTo="pages.currentApp.navigateTo",e.Pages_CurrentApp_NavigateToDefaultPage="pages.currentApp.navigateToDefaultPage",e.Pages_FullTrust_EnterFullscreen="pages.fullTrust.enterFullscreen",e.Pages_FullTrust_ExitFullscreen="pages.fullTrust.exitFullscreen",e.Pages_GetConfig="pages.getConfig.",e.Pages_NavigateCrossDomain="pages.navigateCrossDomain",e.Pages_NavigateToApp="pages.navigateToApp",e.Pages_RegisterFocusEnterHandler="pages.registerFocusEnterHandler",e.Pages_RegisterFullScreenHandler="pages.registerFullScreenHandler",e.Pages_ReturnFocus="pages.returnFocus",e.Pages_SetCurrentFrame="pages.setCurrentFrame",e.Pages_ShareDeepLink="pages.shareDeepLink",e.Pages_Tabs_GetMruTabInstances="pages.tabs.getMruTabInstances",e.Pages_Tabs_GetTabInstances="pages.tabs.getTabInstances",e.Pages_Tabs_NavigateToTab="pages.tabs.navigateToTab",e.PublicAPIs_ExecuteDeepLink="executeDeepLink",e.PublicAPIs_GetContext="getContext",e.PublicAPIs_GetMruTabInstances="getMruTabInstances",e.PublicAPIs_GetTabInstances="getTabInstances",e.PublicAPIs_Initialize="initialize",e.PublicAPIs_RegisterAppButtonClickHandler="registerAppButtonClickHandler",e.PublicAPIs_RegisterAppButtonHoverEnterHandler="registerAppButtonHoverEnterHandler",e.PublicAPIs_RegisterAppButtonHoverLeaveHandler="registerAppButtonHoverLeaveHandler",e.PublicAPIs_RegisterBackButtonHandler="registerBackButtonHandler",e.PublicAPIs_RegisterChangeSettingsHandler="registerChangeSettingsHandler",e.PublicAPIs_RegisterFocusEnterHandler="registerFocusEnterHandler",e.PublicAPIs_RegisterFullScreenHandler="registerFullScreenHandler",e.PublicAPIs_RegisterOnLoadHandler="registerOnLoadHandler",e.PublicAPIs_RegisterOnThemeChangeHandlerHelper="registerOnThemeChangeHandlerHelper",e.PublicAPIs_SetFrameContext="setFrameContext",e.PublicAPIs_ShareDeepLink="shareDeepLink",e.RegisterHandler="registerHandler",e.RegisterOnThemeChangeHandler="registerOnThemeChangeHandler",e.Settings_Remove_Failure="settings.remove.failure",e.Settings_Remove_Success="settings.remove.success",e.Settings_Save_Failure="settings.save.failure",e.Settings_Save_Success="settings.save.success",e.Tasks_StartTask="tasks.startTask",e.Tasks_SubmitTask="tasks.submitTask",e.Tasks_UpdateTask="tasks.updateTask"}(s||(s={}));const l=JSON.parse('{"validOrigins":["teams.microsoft.com","teams.microsoft.us","gov.teams.microsoft.us","dod.teams.microsoft.us","int.teams.microsoft.com","teams.live.com","devspaces.skype.com","ssauth.skype.com","local.teams.live.com","local.teams.live.com:8080","local.teams.office.com","local.teams.office.com:8080","outlook.office.com","outlook-sdf.office.com","outlook.office365.com","outlook-sdf.office365.com","outlook.live.com","outlook-sdf.live.com","*.teams.microsoft.com","*.www.office.com","www.office.com","word.office.com","excel.office.com","powerpoint.office.com","www.officeppe.com","*.www.microsoft365.com","www.microsoft365.com","bing.com","edgeservices.bing.com","www.bing.com","www.staging-bing-int.com","teams.cloud.microsoft","outlook.cloud.microsoft","m365.cloud.microsoft","copilot.microsoft.com"]}'),c="2.0.1",u="2.0.3",d="1.9.0",p="1.8.0",f=n.t(l,2).validOrigins,g=new URL("https://res.cdn.office.net/teams-js/validDomains/json/validDomains.json"),m=/^https:\/\//,h="https",w="teams.microsoft.com",C="The library has not yet been initialized",y="The runtime has not yet been initialized",v="The runtime version is not supported";class M{}M.initializeCalled=!1,M.initializeCompleted=!1,M.additionalValidOrigins=[],M.initializePromise=void 0,M.isFramelessWindow=!1,M.frameContext=void 0,M.hostClientType=void 0,M.printCapabilityEnabled=!1;const S={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let I;const T=new Uint8Array(16);function b(){if(!I&&(I="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!I))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return I(T)}const E=[];for(let e=0;e<256;++e)E.push((e+256).toString(16).slice(1));const A=function(e,t,n){if(S.randomUUID&&!t&&!e)return S.randomUUID();const i=(e=e||{}).random||(e.rng||b)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=i[e];return t}return function(e,t=0){return(E[e[t+0]]+E[e[t+1]]+E[e[t+2]]+E[e[t+3]]+"-"+E[e[t+4]]+E[e[t+5]]+"-"+E[e[t+6]]+E[e[t+7]]+"-"+E[e[t+8]]+E[e[t+9]]+"-"+E[e[t+10]]+E[e[t+11]]+E[e[t+12]]+E[e[t+13]]+E[e[t+14]]+E[e[t+15]]).toLowerCase()}(i)};var N,P,D,O,k,R,F,L,_,x,j,U;!function(e){e.Inline="inline",e.Desktop="desktop",e.Web="web"}(N||(N={})),function(e){e.M365Content="m365content"}(P||(P={})),function(e){e.DriveId="driveId",e.GroupId="groupId",e.SiteId="siteId",e.UserId="userId"}(D||(D={})),function(e){e[e.NOT_SUPPORTED_ON_PLATFORM=100]="NOT_SUPPORTED_ON_PLATFORM",e[e.INTERNAL_ERROR=500]="INTERNAL_ERROR",e[e.NOT_SUPPORTED_IN_CURRENT_CONTEXT=501]="NOT_SUPPORTED_IN_CURRENT_CONTEXT",e[e.PERMISSION_DENIED=1e3]="PERMISSION_DENIED",e[e.NETWORK_ERROR=2e3]="NETWORK_ERROR",e[e.NO_HW_SUPPORT=3e3]="NO_HW_SUPPORT",e[e.INVALID_ARGUMENTS=4e3]="INVALID_ARGUMENTS",e[e.UNAUTHORIZED_USER_OPERATION=5e3]="UNAUTHORIZED_USER_OPERATION",e[e.INSUFFICIENT_RESOURCES=6e3]="INSUFFICIENT_RESOURCES",e[e.THROTTLE=7e3]="THROTTLE",e[e.USER_ABORT=8e3]="USER_ABORT",e[e.OPERATION_TIMED_OUT=8001]="OPERATION_TIMED_OUT",e[e.OLD_PLATFORM=9e3]="OLD_PLATFORM",e[e.FILE_NOT_FOUND=404]="FILE_NOT_FOUND",e[e.SIZE_EXCEEDED=1e4]="SIZE_EXCEEDED"}(O||(O={})),function(e){e.GeoLocation="geolocation",e.Media="media"}(k||(k={})),function(e){e.TextPlain="text/plain",e.TextHtml="text/html",e.ImagePNG="image/png",e.ImageJPEG="image/jpeg"}(R||(R={})),function(e){e.desktop="desktop",e.web="web",e.android="android",e.ios="ios",e.ipados="ipados",e.macos="macos",e.rigel="rigel",e.surfaceHub="surfaceHub",e.teamsRoomsWindows="teamsRoomsWindows",e.teamsRoomsAndroid="teamsRoomsAndroid",e.teamsPhones="teamsPhones",e.teamsDisplays="teamsDisplays"}(F||(F={})),function(e){e.office="Office",e.outlook="Outlook",e.outlookWin32="OutlookWin32",e.orange="Orange",e.places="Places",e.teams="Teams",e.teamsModern="TeamsModern"}(L||(L={})),function(e){e.settings="settings",e.content="content",e.authentication="authentication",e.remove="remove",e.task="task",e.sidePanel="sidePanel",e.stage="stage",e.meetingStage="meetingStage"}(_||(_={})),function(e){e[e.Standard=0]="Standard",e[e.Edu=1]="Edu",e[e.Class=2]="Class",e[e.Plc=3]="Plc",e[e.Staff=4]="Staff"}(x||(x={})),function(e){e[e.Admin=0]="Admin",e[e.User=1]="User",e[e.Guest=2]="Guest"}(j||(j={})),function(e){e.Large="large",e.Medium="medium",e.Small="small"}(U||(U={}));var z,H=U;!function(e){e.Regular="Regular",e.Private="Private",e.Shared="Shared"}(z||(z={}));const V={errorCode:O.NOT_SUPPORTED_ON_PLATFORM},B={adaptiveCardSchemaVersion:{majorVersion:1,minorVersion:5}},W=new Error("Invalid input count: Must supply a valid image count (limit of 10)."),G=new Error("Invalid response: Received more images than the specified max limit in the response.");function q(e){return(t,n)=>{if(!t)throw new Error(e||n)}}function Q(e,t){if("string"!=typeof e||"string"!=typeof t)return NaN;const n=e.split("."),i=t.split(".");function o(e){return/^\d+$/.test(e)}if(!n.every(o)||!i.every(o))return NaN;for(;n.length<i.length;)n.push("0");for(;i.length<n.length;)i.push("0");for(let e=0;e<n.length;++e)if(Number(n[e])!=Number(i[e]))return Number(n[e])>Number(i[e])?1:-1;return 0}function Z(){return A()}function Y(e){return Object.keys(e).forEach((t=>{"object"==typeof e[t]&&Y(e[t])})),Object.freeze(e)}function J(e,t,...n){const i=e(...n);return i.then((()=>{t&&t(null)})).catch((e=>{t&&t(e)})),i}function $(e){return!(Q(`${e.majorVersion}.${e.minorVersion}`,"1.5")>=0)}function X(e){return"https:"===e.protocol}function K(){if(ee())throw new Error("window object undefined at SSR check");return window}function ee(){return"undefined"==typeof window}const te=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function ne(e){if(!te.test(e))throw new Error("App ID is not valid. Must be GUID format. App ID: "+e)}const ie=t("runtime"),oe=3;function re(e){return e.apiVersion===oe}let ae={apiVersion:-1,supports:{}};const se={apiVersion:3,hostVersionsInfo:B,isLegacyTeams:!0,supports:{appInstallDialog:{},appEntity:{},call:{},chat:{},conversations:{},dialog:{card:{bot:{}},url:{bot:{}},update:{}},interactive:{},logs:{},meetingRoom:{},menus:{},monetization:{},notifications:{},pages:{config:{},backStack:{},fullTrust:{}},remoteCamera:{},teams:{fullTrust:{}},teamsCore:{},video:{sharedFrame:{}}}},le=[F.desktop,F.web,F.rigel,F.surfaceHub,F.teamsRoomsWindows,F.teamsRoomsAndroid,F.teamsPhones,F.teamsDisplays],ce=[F.android,F.ios,F.ipados],ue=[...le,...ce],de=[{versionToUpgradeFrom:1,upgradeToNextVersion:e=>{var t;return{apiVersion:2,hostVersionsInfo:void 0,isLegacyTeams:e.isLegacyTeams,supports:Object.assign(Object.assign({},e.supports),{dialog:e.supports.dialog?{card:void 0,url:e.supports.dialog,update:null===(t=e.supports.dialog)||void 0===t?void 0:t.update}:void 0})}}},{versionToUpgradeFrom:2,upgradeToNextVersion:e=>{const t=e.supports,{appNotification:n}=t,i=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(e);o<i.length;o++)t.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(e,i[o])&&(n[i[o]]=e[i[o]])}return n}(t,["appNotification"]);return Object.assign(Object.assign({},e),{apiVersion:3,supports:i})}}],pe={"1.0.0":[{capability:{pages:{appButton:{},tabs:{}},stageView:{}},hostClientTypes:le}],"1.9.0":[{capability:{location:{}},hostClientTypes:ue}],"2.0.0":[{capability:{people:{}},hostClientTypes:ue},{capability:{sharing:{}},hostClientTypes:[F.desktop,F.web]}],"2.0.1":[{capability:{teams:{fullTrust:{joinedTeams:{}}}},hostClientTypes:[F.android,F.desktop,F.ios,F.teamsRoomsAndroid,F.teamsPhones,F.teamsDisplays,F.web]},{capability:{webStorage:{}},hostClientTypes:[F.desktop]}],"2.0.5":[{capability:{webStorage:{}},hostClientTypes:[F.android,F.ios]}],"2.0.8":[{capability:{sharing:{}},hostClientTypes:[F.android,F.ios]}]},fe=ie.extend("generateBackCompatRuntimeConfig");function ge(e,t){const n=Object.assign({},e);for(const i in t)Object.prototype.hasOwnProperty.call(t,i)&&("object"!=typeof t[i]||Array.isArray(t[i])?i in e||(n[i]=t[i]):n[i]=ge(e[i]||{},t[i]));return n}function me(e,t,n){fe("generating back compat runtime config for %s",e);let i=Object.assign({},t.supports);fe("Supported capabilities in config before updating based on highestSupportedVersion: %o",i),Object.keys(n).forEach((t=>{Q(e,t)>=0&&n[t].forEach((e=>{void 0!==M.hostClientType&&e.hostClientTypes.includes(M.hostClientType)&&(i=ge(i,e.capability))}))}));const o={apiVersion:oe,hostVersionsInfo:B,isLegacyTeams:!0,supports:i};return fe("Runtime config after updating based on highestSupportedVersion: %o",o),o}const he=ie.extend("applyRuntimeConfig");function we(e){"string"==typeof e.apiVersion&&(he("Trying to apply runtime with string apiVersion, processing as v1: %o",e),e=Object.assign(Object.assign({},e),{apiVersion:1})),he("Fast-forwarding runtime %o",e);const t=function(e){let t=e;if(t.apiVersion<oe&&de.forEach((e=>{t.apiVersion===e.versionToUpgradeFrom&&(t=e.upgradeToNextVersion(t))})),re(t))return t;throw new Error("Received a runtime that could not be upgraded to the latest version")}(e);he("Applying runtime %o",t),ae=Y(t)}const Ce="2.19.0",ye=t("internal"),ve=ye.extend("ensureInitializeCalled"),Me=ye.extend("ensureInitialized");function Se(){if(!M.initializeCalled)throw ve(C),new Error(C)}function Ie(e,...t){if(!M.initializeCompleted)throw Me("%s. initializeCalled: %s",C,M.initializeCalled.toString()),new Error(C);if(t&&t.length>0){let e=!1;for(let n=0;n<t.length;n++)if(t[n]===M.frameContext){e=!0;break}if(!e)throw new Error(`This call is only allowed in following contexts: ${JSON.stringify(t)}. Current context: "${M.frameContext}".`)}return function(e){if(re(e))return!0;throw-1===e.apiVersion?new Error(y):new Error(v)}(e)}function Te(e=c){const t=Q(M.clientSupportedSDKVersion,e);return!isNaN(t)&&t>=0}function be(){return M.hostClientType==F.android||M.hostClientType==F.ios||M.hostClientType==F.ipados}function Ee(e=c){if(!be())throw{errorCode:O.NOT_SUPPORTED_ON_PLATFORM};if(!Te(e))throw{errorCode:O.OLD_PLATFORM}}function Ae(e){return null==e}var Ne=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};let Pe=[];const De=t("validateOrigin");function Oe(){return Ne(this,void 0,void 0,(function*(){return 0!==Pe.length?Pe:ee()?(Pe=f,f):fetch(g).then((e=>{if(!e.ok)throw new Error("Invalid Response from Fetch Call");return e.json().then((e=>{if(function(e){let t=JSON.parse(e);try{t=JSON.parse(e)}catch(e){return!1}if(!t.validOrigins)return!1;for(const e of t.validOrigins)try{new URL("https://"+e)}catch(t){return De("isValidOriginsFromCDN call failed to validate origin: %s",e),!1}return!0}(JSON.stringify(e)))return Pe=e.validOrigins,Pe;throw new Error("Valid Origins List Is Invalid")}))})).catch((e=>(De("validOrigins fetch call to CDN failed with error: %s. Defaulting to fallback list",e),Pe=f,Pe)))}))}function ke(e,t){if("*."===e.substring(0,2)){const n=e.substring(1);if(t.length>n.length&&t.split(".").length===n.split(".").length&&t.substring(t.length-n.length)===n)return!0}else if(e===t)return!0;return!1}var Re;!function(e){let t,n,i,o;function r(e){return new Promise(((n,i)=>{if(M.hostClientType===F.desktop||M.hostClientType===F.android||M.hostClientType===F.ios||M.hostClientType===F.ipados||M.hostClientType===F.macos||M.hostClientType===F.rigel||M.hostClientType===F.teamsRoomsWindows||M.hostClientType===F.teamsRoomsAndroid||M.hostClientType===F.teamsPhones||M.hostClientType===F.teamsDisplays||M.hostClientType===F.surfaceHub){const t=document.createElement("a");t.href=e.url,n(Dt("authentication.authenticate",[t.href,e.width,e.height,e.isExternal]).then((([e,t])=>{if(e)return t;throw new Error(t)})))}else t={success:n,fail:i},function(e){a();let t=e.width||600,n=e.height||400;t=Math.min(t,vt.currentWindow.outerWidth-400),n=Math.min(n,vt.currentWindow.outerHeight-200);const i=document.createElement("a");i.href=e.url.replace("{oauthRedirectMethod}","web");let o=void 0!==vt.currentWindow.screenLeft?vt.currentWindow.screenLeft:vt.currentWindow.screenX,r=void 0!==vt.currentWindow.screenTop?vt.currentWindow.screenTop:vt.currentWindow.screenY;o+=vt.currentWindow.outerWidth/2-t/2,r+=vt.currentWindow.outerHeight/2-n/2,vt.childWindow=vt.currentWindow.open(i.href,"_blank","toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top="+r+", left="+o+", width="+t+", height="+n),vt.childWindow?l():u("FailedToOpenWindow")}(e)}))}function a(){s();try{vt.childWindow&&vt.childWindow.close()}finally{vt.childWindow=null,vt.childOrigin=null}}function s(){n&&(clearInterval(n),n=0),ut("initialize"),ut("navigateCrossDomain")}function l(){s(),n=vt.currentWindow.setInterval((()=>{if(!vt.childWindow||vt.childWindow.closed)u("CancelledByUser");else{const e=vt.childOrigin;try{vt.childOrigin="*",qt("ping")}finally{vt.childOrigin=e}}}),100),ct("initialize",(()=>[_.authentication,M.hostClientType])),ct("navigateCrossDomain",(()=>!1))}function c(e){try{t&&t.success(e)}finally{t=void 0,a()}}function u(e){try{t&&t.fail(new Error(e))}finally{t=void 0,a()}}function d(e,t,n){if(e){const i=document.createElement("a");i.href=decodeURIComponent(e),i.host&&i.host!==K().location.host&&"outlook.office.com"===i.host&&i.search.indexOf("client_type=Win32_Outlook")>-1&&(t&&"result"===t&&(n&&(i.href=p(i.href,"result",n)),vt.currentWindow.location.assign(p(i.href,"authSuccess",""))),t&&"reason"===t&&(n&&(i.href=p(i.href,"reason",n)),vt.currentWindow.location.assign(p(i.href,"authFailure",""))))}}function p(e,t,n){const i=e.indexOf("#");let o=-1===i?"#":e.substr(i);return o=o+"&"+t+(""!==n?"="+n:""),(e=-1===i?e:e.substr(0,i))+o}e.initialize=function(){ct("authentication.authenticate.success",c,!1),ct("authentication.authenticate.failure",u,!1)},e.registerAuthenticationHandlers=function(e){i=e},e.authenticate=function(e){const t=void 0!==e,n=t?e:i;if(!n)throw new Error("No parameters are provided for authentication");return Ie(ae,_.content,_.sidePanel,_.settings,_.remove,_.task,_.stage,_.meetingStage),r(n).then((e=>{try{return n&&n.successCallback?(n.successCallback(e),""):e}finally{t||(i=void 0)}})).catch((e=>{try{if(n&&n.failureCallback)return n.failureCallback(e.message),"";throw e}finally{t||(i=void 0)}}))},e.getAuthToken=function(e){return Se(),function(e){return new Promise((t=>{t(Dt("authentication.getAuthToken",[null==e?void 0:e.resources,null==e?void 0:e.claims,null==e?void 0:e.silent]))})).then((([e,t])=>{if(e)return t;throw new Error(t)}))}(e).then((t=>e&&e.successCallback?(e.successCallback(t),""):t)).catch((t=>{if(e&&e.failureCallback)return e.failureCallback(t.message),"";throw t}))},e.getUser=function(e){return Se(),new Promise((e=>{e(Dt("authentication.getUser"))})).then((([e,t])=>{if(e)return t;throw new Error(t)})).then((t=>e&&e.successCallback?(e.successCallback(t),null):t)).catch((t=>{if(e&&e.failureCallback)return e.failureCallback(t.message),null;throw t}))},e.notifySuccess=function(e,t){d(t,"result",e),Ie(ae,_.authentication),Rt("authentication.authenticate.success",[e]),Wt(vt.parentWindow,(()=>setTimeout((()=>vt.currentWindow.close()),200)))},e.notifyFailure=function(e,t){d(t,"reason",e),Ie(ae,_.authentication),Rt("authentication.authenticate.failure",[e]),Wt(vt.parentWindow,(()=>setTimeout((()=>vt.currentWindow.close()),200)))},function(e){e.Public="public",e.EUDB="eudb",e.Other="other"}(o=e.DataResidency||(e.DataResidency={}))}(Re||(Re={}));const Fe=a.V_2;function Le(e,t){if(Ie(ae,_.content,_.sidePanel,_.task,_.meetingStage),!Ue.update.isSupported())throw V;kt(e,"tasks.updateTask",[t])}function _e(e,t,n,i){if(Ie(ae,_.content,_.sidePanel,_.meetingStage),!Ue.url.isSupported())throw V;i&&ct("messageForParent",i),kt(e,"tasks.startTask",[Ue.url.getDialogInfoFromUrlDialogInfo(t)],((e,t)=>{null==n||n({err:e,result:t}),ut("messageForParent")}))}function xe(e,t,n,i){if(Ie(ae,_.content,_.sidePanel,_.meetingStage),!Ue.url.bot.isSupported())throw V;i&&ct("messageForParent",i),kt(e,"tasks.startTask",[Ue.url.getDialogInfoFromBotUrlDialogInfo(t)],((e,t)=>{null==n||n({err:e,result:t}),ut("messageForParent")}))}function je(e,t,n){if(Ie(ae,_.content,_.task),!Ue.url.isSupported())throw V;kt(e,"tasks.completeTask",[t,n?Array.isArray(n)?n:[n]:[]])}var Ue,ze;!function(e){const t=[];function n(e){M.frameContext&&(M.frameContext===_.task?t.push(e):ut("messageForChild"))}let i,r,a;e.initialize=function(){ct("messageForChild",n,!1)},function(e){function n(){return Ie(ae)&&void 0!==(ae.supports.dialog&&ae.supports.dialog.url)}let i;function r(e){return{url:e.url,height:e.size?e.size.height:U.Small,width:e.size?e.size.width:U.Small,title:e.title,fallbackUrl:e.fallbackUrl}}e.open=function(e,t,n){_e(o(Fe,s.Dialog_Url_Open),e,t,n)},e.submit=function(e,t){je(o(Fe,s.Dialog_Url_Submit),e,t)},e.sendMessageToParentFromDialog=function(e){if(Ie(ae,_.task),!n())throw V;kt(o(Fe,s.Dialog_Url_SendMessageToParentFromDialog),"messageForParent",[e])},e.sendMessageToDialog=function(e){if(Ie(ae,_.content,_.sidePanel,_.meetingStage),!n())throw V;kt(o(Fe,s.Dialog_Url_SendMessageToDialog),"messageForChild",[e])},e.registerOnMessageFromParent=function(e){if(Ie(ae,_.task),!n())throw V;for(ut("messageForChild"),ct("messageForChild",e),t.reverse();t.length>0;)e(t.pop())},e.isSupported=n,function(e){e.open=function(e,t,n){xe(o(Fe,s.Dialog_Url_Bot_Open),e,t,n)},e.isSupported=function(){return Ie(ae)&&void 0!==(ae.supports.dialog&&ae.supports.dialog.url&&ae.supports.dialog.url.bot)}}(i=e.bot||(e.bot={})),e.getDialogInfoFromUrlDialogInfo=r,e.getDialogInfoFromBotUrlDialogInfo=function(e){const t=r(e);return t.completionBotId=e.completionBotId,t}}(i=e.url||(e.url={})),e.isSupported=function(){return!(!Ie(ae)||!ae.supports.dialog)},function(e){e.resize=function(e){Le(o(Fe,s.Dialog_Update_Resize),e)},e.isSupported=function(){return!(!Ie(ae)||!ae.supports.dialog||!ae.supports.dialog.update)}}(r=e.update||(e.update={})),function(e){function t(){const e=ae.hostVersionsInfo&&ae.hostVersionsInfo.adaptiveCardSchemaVersion&&!$(ae.hostVersionsInfo.adaptiveCardSchemaVersion);return Ie(ae)&&void 0!==(e&&ae.supports.dialog&&ae.supports.dialog.card)}let n;function i(e){return{card:e.card,height:e.size?e.size.height:U.Small,width:e.size?e.size.width:U.Small,title:e.title}}function r(e){const t=i(e);return t.completionBotId=e.completionBotId,t}e.open=function(e,n){if(Ie(ae,_.content,_.sidePanel,_.meetingStage),!t())throw V;const r=i(e);kt(o(Fe,s.Dialog_AdaptiveCard_Open),"tasks.startTask",[r],((e,t)=>{null==n||n({err:e,result:t})}))},e.isSupported=t,function(e){function t(){const e=ae.hostVersionsInfo&&ae.hostVersionsInfo.adaptiveCardSchemaVersion&&!$(ae.hostVersionsInfo.adaptiveCardSchemaVersion);return Ie(ae)&&void 0!==(e&&ae.supports.dialog&&ae.supports.dialog.card&&ae.supports.dialog.card.bot)}e.open=function(e,n){if(Ie(ae,_.content,_.sidePanel,_.meetingStage),!t())throw V;const i=r(e);kt(o(Fe,s.Dialog_AdaptiveCard_Bot_Open),"tasks.startTask",[i],((e,t)=>{null==n||n({err:e,result:t})}))},e.isSupported=t}(n=e.bot||(e.bot={}))}(a=e.adaptiveCard||(e.adaptiveCard={}))}(Ue||(Ue={})),function(e){let t,n,i,o,r;function a(e){r&&r(e)||(Ie(ae),Rt("viewConfigItemPress",[e]))}function s(e){i&&i(e)||(Ie(ae),Rt("handleNavBarMenuItemPress",[e]))}function l(e){o&&o(e)||(Ie(ae),Rt("handleActionMenuItemPress",[e]))}function c(){return!(!Ie(ae)||!ae.supports.menus)}!function(e){e[e.ifRoom=0]="ifRoom",e[e.overflowOnly=1]="overflowOnly"}(t=e.DisplayMode||(e.DisplayMode={})),e.MenuItem=class{constructor(){this.enabled=!0,this.selected=!1}},function(e){e.dropDown="dropDown",e.popOver="popOver"}(n=e.MenuListType||(e.MenuListType={})),e.initialize=function(){ct("navBarMenuItemPress",s,!1),ct("actionMenuItemPress",l,!1),ct("setModuleView",a,!1)},e.setUpViews=function(e,t){if(Ie(ae),!c())throw V;r=t,Rt("setUpViews",[e])},e.setNavBarMenu=function(e,t){if(Ie(ae),!c())throw V;i=t,Rt("setNavBarMenu",[e])},e.showActionMenu=function(e,t){if(Ie(ae),!c())throw V;o=t,Rt("showActionMenu",[e])},e.isSupported=c}(ze||(ze={}));const He=a.V_2,Ve=5e3,Be=t("app");function We(e,t){return ee()?(Be.extend("initialize")("window object undefined at initialization"),Promise.resolve()):function(e,t,n){return new Promise(((i,o)=>{const r=setTimeout(o,t,n);e().then((e=>{clearTimeout(r),i(e)})).catch((e=>{clearTimeout(r),o(e)}))}))}((()=>function(e,t){return new Promise((n=>{M.initializeCalled||(M.initializeCalled=!0,at.initializeHandlers(),M.initializePromise=function(e,t){if(Mt.messageListener=e=>Ct(this,void 0,void 0,(function*(){return yield function(e){return Ct(this,void 0,void 0,(function*(){if(!e||!e.data||"object"!=typeof e.data)return void _t("Unrecognized message format received by app, message being ignored. Message: %o",e);const t=e.source||e.originalEvent&&e.originalEvent.source,n=e.origin||e.originalEvent&&e.originalEvent.origin;return function(e,t){return Ct(this,void 0,void 0,(function*(){if(vt.currentWindow&&e===vt.currentWindow)return xt("Should not process message because it is coming from the current window"),!1;if(vt.currentWindow&&vt.currentWindow.location&&t&&t===vt.currentWindow.location.origin)return!0;{const e=yield function(e){return Oe().then((t=>{if(!X(e))return De("Origin %s is invalid because it is not using https protocol. Protocol being used: %s",e,e.protocol),!1;const n=e.host;if(t.some((e=>ke(e,n))))return!0;for(const e of M.additionalValidOrigins)if(ke("https://"===e.substring(0,8)?e.substring(8):e,n))return!0;return De("Origin %s is invalid because it is not an origin approved by this library or included in the call to app.initialize.\nOrigins approved by this library: %o\nOrigins included in app.initialize: %o",e,t,M.additionalValidOrigins),!1}))}(new URL(t));return e||xt("Message has an invalid origin of %s",t),e}}))}(t,n).then((i=>{i?(function(e,t){M.isFramelessWindow||vt.parentWindow&&!vt.parentWindow.closed&&e!==vt.parentWindow?vt.childWindow&&!vt.childWindow.closed&&e!==vt.childWindow||(vt.childWindow=e,vt.childOrigin=t):(vt.parentWindow=e,vt.parentOrigin=t),vt.parentWindow&&vt.parentWindow.closed&&(vt.parentWindow=null,vt.parentOrigin=null),vt.childWindow&&vt.childWindow.closed&&(vt.childWindow=null,vt.childOrigin=null),Bt(vt.parentWindow),Bt(vt.childWindow)}(t,n),t===vt.parentWindow?Ut(e):t===vt.childWindow&&function(e){if("id"in e.data&&"func"in e.data){const t=e.data,[n,i]=lt(t.func,t.args);n&&void 0!==i?Gt(t.id,Array.isArray(i)?i:[i]):Rt(t.func,t.args,((...e)=>{if(vt.childWindow){const n=e.pop();Gt(t.id,e,n)}}))}}(e)):_t("Message being ignored by app because it is either coming from the current window or a different window with an invalid origin")}))}))}(e)})),vt.currentWindow=vt.currentWindow||K(),vt.parentWindow=vt.currentWindow.parent!==vt.currentWindow.self?vt.currentWindow.parent:vt.currentWindow.opener,(vt.parentWindow||e)&&vt.currentWindow.addEventListener("message",Mt.messageListener,!1),!vt.parentWindow){const e=vt.currentWindow;if(!e.nativeInterface)return Promise.reject(new Error("Initialization Failed. No Parent window found."));M.isFramelessWindow=!0,e.onNativeMessage=Ut}try{return vt.parentOrigin="*",Pt(t,"initialize",[Ce,oe]).then((([e,t,n,i])=>({context:e,clientType:t,runtimeConfig:n,clientSupportedSDKVersion:i})))}finally{vt.parentOrigin=null}}(t,e).then((({context:e,clientType:t,runtimeConfig:n,clientSupportedSDKVersion:i=c})=>{M.frameContext=e,M.hostClientType=t,M.clientSupportedSDKVersion=i;try{Ge("Parsing %s",n);const e=JSON.parse(n);if(Ge("Checking if %o is a valid runtime object",null!=e?e:"null"),!e||!e.apiVersion)throw new Error("Received runtime config is invalid");n&&we(e)}catch(e){if(!(e instanceof SyntaxError))throw e;try{Ge("Attempting to parse %s as an SDK version",n),isNaN(Q(n,c))||(M.clientSupportedSDKVersion=n);const e=JSON.parse(i);if(Ge("givenRuntimeConfig parsed to %o",null!=e?e:"null"),!e)throw new Error("givenRuntimeConfig string was successfully parsed. However, it parsed to value of null");we(e)}catch(e){if(!(e instanceof SyntaxError))throw e;we(me(M.clientSupportedSDKVersion,se,pe))}}M.initializeCompleted=!0})),Re.initialize(),ze.initialize(),ot.config.initialize(),Ue.initialize()),Array.isArray(t)&&function(e){let t=M.additionalValidOrigins.concat(e.filter((e=>"string"==typeof e&&m.test(e))));const n={};t=t.filter((e=>!n[e]&&(n[e]=!0,!0))),M.additionalValidOrigins=t}(t),void 0!==M.initializePromise?n(M.initializePromise):Ge("GlobalVars.initializePromise is unexpectedly undefined")}))}(e,t)),Ve,new Error("SDK initialization timed out."))}const Ge=Be.extend("initializeHelper");function qe(e,t){!Ae(t)&&Se(),function(e,t){at.themeChangeHandler=t,!Ae(t)&&kt(e,"registerHandler",["themeChange"])}(e,t)}function Qe(e,t){return new Promise((n=>{Ie(ae,_.content,_.sidePanel,_.settings,_.task,_.stage,_.meetingStage),n(Tt(e,"executeDeepLink",t))}))}var Ze;!function(e){const n=t("app");let i,r,a;e.Messages={AppLoaded:"appInitialization.appLoaded",Success:"appInitialization.success",Failure:"appInitialization.failure",ExpectedFailure:"appInitialization.expectedFailure"},function(e){e.AuthFailed="AuthFailed",e.Timeout="Timeout",e.Other="Other"}(i=e.FailedReason||(e.FailedReason={})),function(e){e.PermissionError="PermissionError",e.NotFound="NotFound",e.Throttling="Throttling",e.Offline="Offline",e.Other="Other"}(r=e.ExpectedFailureReason||(e.ExpectedFailureReason={})),e.isInitialized=function(){return M.initializeCompleted},e.getFrameContext=function(){return M.frameContext},function(){if(ee())return;const e=document.getElementsByTagName("script"),t=e&&e[e.length-1]&&e[e.length-1].src,i="Today, teamsjs can only be used from a single script or you may see undefined behavior. This log line is used to help detect cases where teamsjs is loaded multiple times -- it is always written. The presence of the log itself does not indicate a multi-load situation, but multiples of these log lines will. If you would like to use teamjs from more than one script at the same time, please open an issue at https://github.com/OfficeDev/microsoft-teams-library-js/issues";t&&0!==t.length?n("teamsjs is being used from %s. %s",t,i):n("teamsjs is being used from a script tag embedded directly in your html. %s",i)}(),e.initialize=function(e){return function(){Ne(this,void 0,void 0,(function*(){yield Oe()}))}(),We(o(He,s.App_Initialize),e)},e._initialize=function(e){vt.currentWindow=e},e._uninitialize=function(){M.initializeCalled&&(at.uninitializeHandlers(),M.initializeCalled=!1,M.initializeCompleted=!1,M.initializePromise=void 0,M.additionalValidOrigins=[],M.frameContext=void 0,M.hostClientType=void 0,M.isFramelessWindow=!1,vt.currentWindow&&vt.currentWindow.removeEventListener("message",Mt.messageListener,!1),vt.currentWindow=null,vt.parentWindow=null,vt.parentOrigin=null,vt.childWindow=null,vt.childOrigin=null,Mt.parentMessageQueue=[],Mt.childMessageQueue=[],Mt.nextMessageId=0,Mt.callbacks={},Mt.promiseCallbacks={})},e.getContext=function(){return new Promise((e=>{Se(),e(St(o(He,s.App_GetContext),"getContext"))})).then((e=>function(e){var t;return{actionInfo:e.actionInfo,app:{locale:e.locale,sessionId:e.appSessionId?e.appSessionId:"",theme:e.theme?e.theme:"default",iconPositionVertical:e.appIconPosition,osLocaleInfo:e.osLocaleInfo,parentMessageId:e.parentMessageId,userClickTime:e.userClickTime,userFileOpenPreference:e.userFileOpenPreference,host:{name:e.hostName?e.hostName:L.teams,clientType:e.hostClientType?e.hostClientType:F.web,sessionId:e.sessionId?e.sessionId:"",ringId:e.ringId},appLaunchId:e.appLaunchId},page:{id:e.entityId,frameContext:e.frameContext?e.frameContext:M.frameContext,subPageId:e.subEntityId,isFullScreen:e.isFullScreen,isMultiWindow:e.isMultiWindow,sourceOrigin:e.sourceOrigin},user:{id:null!==(t=e.userObjectId)&&void 0!==t?t:"",displayName:e.userDisplayName,isCallingAllowed:e.isCallingAllowed,isPSTNCallingAllowed:e.isPSTNCallingAllowed,licenseType:e.userLicenseType,loginHint:e.loginHint,userPrincipalName:e.userPrincipalName,tenant:e.tid?{id:e.tid,teamsSku:e.tenantSKU}:void 0},channel:e.channelId?{id:e.channelId,displayName:e.channelName,relativeUrl:e.channelRelativeUrl,membershipType:e.channelType,defaultOneNoteSectionId:e.defaultOneNoteSectionId,ownerGroupId:e.hostTeamGroupId,ownerTenantId:e.hostTeamTenantId}:void 0,chat:e.chatId?{id:e.chatId}:void 0,meeting:e.meetingId?{id:e.meetingId}:void 0,sharepoint:e.sharepoint,team:e.teamId?{internalId:e.teamId,displayName:e.teamName,type:e.teamType,groupId:e.groupId,templateId:e.teamTemplateId,isArchived:e.isTeamArchived,userRole:e.userTeamRole}:void 0,sharePointSite:e.teamSiteUrl||e.teamSiteDomain||e.teamSitePath||e.mySitePath||e.mySiteDomain?{teamSiteUrl:e.teamSiteUrl,teamSiteDomain:e.teamSiteDomain,teamSitePath:e.teamSitePath,teamSiteId:e.teamSiteId,mySitePath:e.mySitePath,mySiteDomain:e.mySiteDomain}:void 0}}(e)))},e.notifyAppLoaded=function(){Se(),kt(o(He,s.App_NotifyAppLoaded),e.Messages.AppLoaded,[Ce])},e.notifySuccess=function(){Se(),kt(o(He,s.App_NotifySuccess),e.Messages.Success,[Ce])},e.notifyFailure=function(t){Se(),kt(o(He,s.App_NotifyFailure),e.Messages.Failure,[t.reason,t.message])},e.notifyExpectedFailure=function(t){Se(),kt(o(He,s.App_NotifyExpectedFailure),e.Messages.ExpectedFailure,[t.reason,t.message])},e.registerOnThemeChangeHandler=function(e){qe(o(He,s.App_RegisterOnThemeChangeHandler),e)},e.openLink=function(e){return Qe(o(He,s.App_OpenLink),e)},function(e){e.registerBeforeSuspendOrTerminateHandler=function(e){if(!e)throw new Error("[app.lifecycle.registerBeforeSuspendOrTerminateHandler] Handler cannot be null");Ie(ae),function(e){at.beforeSuspendOrTerminateHandler=e,!Ae(e)&&Rt("registerHandler",["beforeUnload"])}(e)},e.registerOnResumeHandler=function(e){if(!e)throw new Error("[app.lifecycle.registerOnResumeHandler] Handler cannot be null");Ie(ae),function(e){at.resumeHandler=e,!Ae(e)&&Rt("registerHandler",["load"])}(e)}}(a=e.lifecycle||(e.lifecycle={}))}(Ze||(Ze={}));const Ye=a.V_2;function Je(e,t){return new Promise((n=>{if(Ie(ae,_.content,_.sidePanel,_.settings,_.remove,_.task,_.stage,_.meetingStage),!ot.isSupported())throw V;n(Et(e,"navigateCrossDomain","Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.",t))}))}function $e(e){return new Promise((t=>{if(Ie(ae),!ot.backStack.isSupported())throw V;t(Et(e,"navigateBack","Back navigation is not supported in the current client or context."))}))}function Xe(e,t){return new Promise((n=>{if(Ie(ae),!ot.tabs.isSupported())throw V;n(Et(e,"navigateToTab","Invalid internalTabInstanceId and/or channelId were/was provided",t))}))}function Ke(e,t){if(Ie(ae),!ot.isSupported())throw V;kt(e,"returnFocus",[t])}function et(e,t){return new Promise((n=>{if(Ie(ae),!ot.tabs.isSupported())throw V;n(St(e,"getTabInstances",t))}))}function tt(e,t){return new Promise((n=>{if(Ie(ae),!ot.tabs.isSupported())throw V;n(St(e,"getMruTabInstances",t))}))}function nt(e,t){if(Ie(ae,_.content,_.sidePanel,_.meetingStage),!ot.isSupported())throw V;kt(e,"shareDeepLink",[t.subPageId,t.subPageLabel,t.subPageWebUrl])}function it(e,t){if(Ie(ae,_.content),!ot.isSupported())throw V;kt(e,"setFrameContext",[t])}var ot;!function(e){function t(e){it(o(Ye,s.Pages_SetCurrentFrame),e)}function n(){return!(!Ie(ae)||!ae.supports.pages)}let i,r,a,l,c,u;e.returnFocus=function(e){Ke(o(Ye,s.Pages_ReturnFocus),e)},e.registerFocusEnterHandler=function(e){pt(o(Ye,s.Pages_RegisterFocusEnterHandler),"focusEnter",e,[],(()=>{if(!n())throw V}))},e.setCurrentFrame=t,e.initializeWithFrameContext=function(e,n,i){Ze.initialize(i).then((()=>n&&n())),t(e)},e.getConfig=function(){return new Promise((e=>{if(Ie(ae,_.content,_.settings,_.remove,_.sidePanel),!n())throw V;e(St(o(Ye,s.Pages_GetConfig),"settings.getSettings"))}))},e.navigateCrossDomain=function(e){return Je(o(Ye,s.Pages_NavigateCrossDomain),e)},e.navigateToApp=function(e){return new Promise((t=>{if(Ie(ae,_.content,_.sidePanel,_.settings,_.task,_.stage,_.meetingStage),!n())throw V;const i=o(Ye,s.Pages_NavigateCrossDomain);ae.isLegacyTeams?t(Tt(i,"executeDeepLink",function(e){const t=new URL("https://teams.microsoft.com/l/entity/"+encodeURIComponent(e.appId)+"/"+encodeURIComponent(e.pageId));return e.webUrl&&t.searchParams.append("webUrl",e.webUrl),(e.channelId||e.subPageId)&&t.searchParams.append("context",JSON.stringify({channelId:e.channelId,subEntityId:e.subPageId})),t.toString()}(e))):t(Tt(i,"pages.navigateToApp",e))}))},e.shareDeepLink=function(e){return nt(o(Ye,s.Pages_ShareDeepLink),e)},e.registerFullScreenHandler=function(e){pt(o(Ye,s.Pages_RegisterFullScreenHandler),"fullScreenChange",e,[],(()=>{if(!Ae(e)&&!n())throw V}))},e.isSupported=n,function(e){e.navigateToTab=function(e){return Xe(o(Ye,s.Pages_Tabs_NavigateToTab),e)},e.getTabInstances=function(e){return et(o(Ye,s.Pages_Tabs_GetTabInstances),e)},e.getMruTabInstances=function(e){return tt(o(Ye,s.Pages_Tabs_GetMruTabInstances),e)},e.isSupported=function(){return!(!Ie(ae)||!ae.supports.pages||!ae.supports.pages.tabs)}}(i=e.tabs||(e.tabs={})),function(e){let t,n;function i(e,n){!Ae(e)&&Ie(ae,_.settings),n&&n(),t=e,!Ae(e)&&kt(o(Ye,s.Pages_Config_RegisterOnSaveHandlerHelper),"registerHandler",["save"])}function r(e,t){!Ae(e)&&Ie(ae,_.remove,_.settings),t&&t(),n=e,!Ae(e)&&kt(o(Ye,s.Pages_Config_RegisterOnRemoveHandlerHelper),"registerHandler",["remove"])}function a(e){const n=new l(e);t?t(n):vt.childWindow?qt("settings.save",[e]):n.notifySuccess()}e.initialize=function(){ct("settings.save",a,!1),ct("settings.remove",c,!1)},e.setValidityState=function(e){if(Ie(ae,_.settings,_.remove),!d())throw V;kt(o(Ye,s.Pages_Config_SetValidityState),"settings.setValidityState",[e])},e.setConfig=function(e){return new Promise((t=>{if(Ie(ae,_.content,_.settings,_.sidePanel),!d())throw V;t(Tt(o(Ye,s.Pages_Config_SetConfig),"settings.setSettings",e))}))},e.registerOnSaveHandler=function(e){i(e,(()=>{if(!Ae(e)&&!d())throw V}))},e.registerOnSaveHandlerHelper=i,e.registerOnRemoveHandler=function(e){r(e,(()=>{if(!Ae(e)&&!d())throw V}))},e.registerOnRemoveHandlerHelper=r,e.registerChangeConfigHandler=function(e){pt(o(Ye,s.Pages_Config_RegisterChangeConfigHandler),"changeSettings",e,[_.content],(()=>{if(!d())throw V}))};class l{constructor(e){this.notified=!1,this.result=e||{}}notifySuccess(){this.ensureNotNotified(),kt(o(Ye,s.Settings_Save_Success),"settings.save.success"),this.notified=!0}notifyFailure(e){this.ensureNotNotified(),kt(o(Ye,s.Settings_Save_Failure),"settings.save.failure",[e]),this.notified=!0}ensureNotNotified(){if(this.notified)throw new Error("The SaveEvent may only notify success or failure once.")}}function c(){const e=new u;n?n(e):vt.childWindow?qt("settings.remove",[]):e.notifySuccess()}class u{constructor(){this.notified=!1}notifySuccess(){this.ensureNotNotified(),kt(o(Ye,s.Settings_Remove_Success),"settings.remove.success"),this.notified=!0}notifyFailure(e){this.ensureNotNotified(),kt(o(Ye,s.Settings_Remove_Failure),"settings.remove.failure",[e]),this.notified=!0}ensureNotNotified(){if(this.notified)throw new Error("The removeEventType may only notify success or failure once.")}}function d(){return!(!Ie(ae)||!ae.supports.pages||!ae.supports.pages.config)}e.isSupported=d}(r=e.config||(e.config={})),function(e){let t;function n(){return $e(o(Ye,s.Pages_BackStack_NavigateBack))}function i(e,n,i){!Ae(n)&&Ie(ae),i&&i(),t=n,!Ae(n)&&kt(e,"registerHandler",["backButton"])}function r(){t&&t()||(vt.childWindow?qt("backButtonPress",[]):n())}function a(){return!(!Ie(ae)||!ae.supports.pages||!ae.supports.pages.backStack)}e._initialize=function(){ct("backButtonPress",r,!1)},e.navigateBack=n,e.registerBackButtonHandler=function(e){i(o(Ye,s.Pages_BackStack_RegisterBackButtonHandler),e,(()=>{if(!Ae(e)&&!a())throw V}))},e.registerBackButtonHandlerHelper=i,e.isSupported=a}(a=e.backStack||(e.backStack={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.pages||!ae.supports.pages.fullTrust)}e.enterFullscreen=function(){if(Ie(ae,_.content),!t())throw V;kt(o(Ye,s.Pages_FullTrust_EnterFullscreen),"enterFullscreen",[])},e.exitFullscreen=function(){if(Ie(ae,_.content),!t())throw V;kt(o(Ye,s.Pages_FullTrust_ExitFullscreen),"exitFullscreen",[])},e.isSupported=t}(l=e.fullTrust||(e.fullTrust={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.pages||!ae.supports.pages.appButton)}e.onClick=function(e){pt(o(Ye,s.Pages_AppButton_OnClick),"appButtonClick",e,[_.content],(()=>{if(!t())throw V}))},e.onHoverEnter=function(e){pt(o(Ye,s.Pages_AppButton_OnHoverEnter),"appButtonHoverEnter",e,[_.content],(()=>{if(!t())throw V}))},e.onHoverLeave=function(e){pt(o(Ye,s.Pages_AppButton_OnHoverLeave),"appButtonHoverLeave",e,[_.content],(()=>{if(!t())throw V}))},e.isSupported=t}(c=e.appButton||(e.appButton={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.pages||!ae.supports.pages.currentApp)}e.navigateTo=function(e){return new Promise((n=>{if(Ie(ae,_.content,_.sidePanel,_.settings,_.task,_.stage,_.meetingStage),!t())throw V;n(At(o(Ye,s.Pages_CurrentApp_NavigateTo),"pages.currentApp.navigateTo",e))}))},e.navigateToDefaultPage=function(){return new Promise((e=>{if(Ie(ae,_.content,_.sidePanel,_.settings,_.task,_.stage,_.meetingStage),!t())throw V;e(At(o(Ye,s.Pages_CurrentApp_NavigateToDefaultPage),"pages.currentApp.navigateToDefaultPage"))}))},e.isSupported=t}(u=e.currentApp||(e.currentApp={}))}(ot||(ot={}));const rt=t("handlers");class at{static initializeHandlers(){at.handlers.themeChange=ft,at.handlers.load=mt,at.handlers.beforeUnload=wt,ot.backStack._initialize()}static uninitializeHandlers(){at.handlers={},at.themeChangeHandler=null,at.loadHandler=null,at.beforeUnloadHandler=null,at.beforeSuspendOrTerminateHandler=null,at.resumeHandler=null}}at.handlers={},at.themeChangeHandler=null,at.loadHandler=null,at.beforeUnloadHandler=null,at.beforeSuspendOrTerminateHandler=null,at.resumeHandler=null;const st=rt.extend("callHandler");function lt(e,t){const n=at.handlers[e];return n?(st("Invoking the registered handler for message %s with arguments %o",e,t),[!0,n.apply(this,t)]):vt.childWindow?(qt(e,t),[!1,void 0]):(st("Handler for action message %s not found.",e),[!1,void 0])}function ct(e,t,n=!0,i=[]){t?(at.handlers[e]=t,n&&kt(o(a.V_0,s.RegisterHandler),"registerHandler",[e,...i])):delete at.handlers[e]}function ut(e){delete at.handlers[e]}function dt(e){return null!=at.handlers[e]}function pt(e,t,n,i,o){n&&Ie(ae,...i),o&&o(),ct(t,n)}function ft(e){at.themeChangeHandler&&at.themeChangeHandler(e),vt.childWindow&&qt("themeChange",[e])}function gt(e){at.loadHandler=e,!Ae(e)&&kt(o(a.V_2,s.RegisterHandler),"registerHandler",["load"])}function mt(e){at.resumeHandler?at.resumeHandler(e):at.loadHandler&&at.loadHandler(e),vt.childWindow&&qt("load",[e])}function ht(e){at.beforeUnloadHandler=e,!Ae(e)&&kt(o(a.V_2,s.RegisterHandler),"registerHandler",["beforeUnload"])}function wt(){const e=()=>{Rt("readyToUnload",[])};at.beforeSuspendOrTerminateHandler?(at.beforeSuspendOrTerminateHandler(),vt.childWindow?qt("beforeUnload"):e()):at.beforeUnloadHandler&&at.beforeUnloadHandler(e)||(vt.childWindow?qt("beforeUnload"):e())}var Ct=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};const yt=t("communication");class vt{}class Mt{}function St(e,t,...n){return Pt(e,t,n).then((([e])=>e))}function It(e,...t){return Dt(e,t).then((([e])=>e))}function Tt(e,t,...n){return Pt(e,t,n).then((([e,t])=>{if(!e)throw new Error(t)}))}function bt(e,...t){return Dt(e,t).then((([e,t])=>{if(!e)throw new Error(t)}))}function Et(e,t,n,...i){return Pt(e,t,i).then((([e,t])=>{if(!e)throw new Error(t||n)}))}function At(e,t,...n){return Pt(e,t,n).then((([e,t])=>{if(e)throw e;return t}))}function Nt(e,...t){return Dt(e,t).then((([e,t])=>{if(e)throw e;return t}))}function Pt(e,t,n=void 0){if(!r(e))throw Error(`apiVersionTag: ${e} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`);return new Promise((i=>{i(Ot(Lt(e,t,n).id))}))}function Dt(e,t=void 0){return new Promise((n=>{n(Ot(Lt(o(a.V_0,"testing"),e,t).id))}))}function Ot(e){return new Promise((t=>{Mt.promiseCallbacks[e]=t}))}function kt(e,t,n,i){let o;if(n instanceof Function?i=n:n instanceof Array&&(o=n),!r(e))throw Error(`apiVersionTag: ${e} passed in doesn't follow the pattern starting with 'v' followed by digits, then underscore with words, please check.`);const a=Lt(e,t,o);i&&(Mt.callbacks[a.id]=i)}function Rt(e,t,n){let i;t instanceof Function?n=t:t instanceof Array&&(i=t);const r=Lt(o(a.V_0,"testing"),e,i);n&&(Mt.callbacks[r.id]=n)}Mt.parentMessageQueue=[],Mt.childMessageQueue=[],Mt.nextMessageId=0,Mt.callbacks={},Mt.promiseCallbacks={};const Ft=yt.extend("sendMessageToParentHelper");function Lt(e,t,n){const i=Ft,o=vt.parentWindow,r=function(e,t,n){return{id:Mt.nextMessageId++,func:t,timestamp:Date.now(),args:n||[],apiversiontag:e}}(e,t,n);if(i("Message %i information: %o",r.id,{actionName:t,args:n}),M.isFramelessWindow)vt.currentWindow&&vt.currentWindow.nativeInterface&&(i("Sending message %i to parent via framelessPostMessage interface",r.id),vt.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(r)));else{const e=Ht(o);o&&e?(i("Sending message %i to parent via postMessage",r.id),o.postMessage(r,e)):(i("Adding message %i to parent message queue",r.id),zt(o).push(r))}return r}const _t=yt.extend("processMessage"),xt=yt.extend("shouldProcessMessage"),jt=yt.extend("handleParentMessage");function Ut(e){const t=jt;if("id"in e.data&&"number"==typeof e.data.id){const n=e.data,i=Mt.callbacks[n.id];t("Received a response from parent for message %i",n.id),i&&(t("Invoking the registered callback for message %i with arguments %o",n.id,n.args),i.apply(null,[...n.args,n.isPartialResponse]),function(e){return!0===e.data.isPartialResponse}(e)||(t("Removing registered callback for message %i",n.id),delete Mt.callbacks[n.id]));const o=Mt.promiseCallbacks[n.id];o&&(t("Invoking the registered promise callback for message %i with arguments %o",n.id,n.args),o(n.args),t("Removing registered promise callback for message %i",n.id),delete Mt.promiseCallbacks[n.id])}else if("func"in e.data&&"string"==typeof e.data.func){const n=e.data;t("Received an action message %s from parent",n.func),lt(n.func,n.args)}else t("Received an unknown message: %O",e)}function zt(e){return e===vt.parentWindow?Mt.parentMessageQueue:e===vt.childWindow?Mt.childMessageQueue:[]}function Ht(e){return e===vt.parentWindow?vt.parentOrigin:e===vt.childWindow?vt.childOrigin:null}const Vt=yt.extend("flushMessageQueue");function Bt(e){const t=Ht(e),n=zt(e),i=e==vt.parentWindow?"parent":"child";for(;e&&t&&n.length>0;){const o=n.shift();Vt("Flushing message %i from "+i+" message queue via postMessage.",null==o?void 0:o.id),e.postMessage(o,t)}}function Wt(e,t){let n;n=vt.currentWindow.setInterval((()=>{0===zt(e).length&&(clearInterval(n),t())}),100)}function Gt(e,t,n){const i=vt.childWindow,o=function(e,t,n){return{id:e,args:t||[],isPartialResponse:n}}(e,t,n),r=Ht(i);i&&r&&i.postMessage(o,r)}function qt(e,t){const n=vt.childWindow,i=function(e,t){return{func:e,args:t||[]}}(e,t),o=Ht(n);n&&o?n.postMessage(i,o):zt(n).push(i)}var Qt,Zt,Yt,Jt,$t;function Xt(e,t){Ie(ae),Rt("uploadCustomApp",[e],t||q())}function Kt(e,t,n){Ie(ae),Rt(e,t,n)}function en(e,t){if(Ie(ae),!vt.childWindow)throw new Error("The child window has not yet been initialized or is not present");qt(e,t)}function tn(e,t){Ie(ae),ct(e,((...e)=>t.apply(this,e)))}function nn(e,t){Ie(ae),ct("userSettingsChange",t,!0,[e])}function on(e){Ie(ae,_.content,_.task),Rt("openFilePreview",[e.entityId,e.title,e.description,e.type,e.objectUrl,e.downloadUrl,e.webPreviewUrl,e.webEditUrl,e.baseUrl,e.editFile,e.subEntityId,e.viewerAction,e.fileOpenPreference,e.conversationId,e.sizeInBytes])}!function(e){function t(){return!(!Ie(ae)||!ae.supports.logs)}e.registerGetLogHandler=function(e){if(!Ae(e)&&Ie(ae),!Ae(e)&&!t())throw V;e?ct("log.request",(()=>{Rt("log.receive",[e()])})):ut("log.request")},e.isSupported=t}(Qt||(Qt={})),function(e){e.fileDownloadStart="fileDownloadStart",e.fileDownloadComplete="fileDownloadComplete"}(Zt||(Zt={})),function(e){e.view="view",e.edit="edit",e.editNew="editNew"}(Yt||(Yt={})),function(e){e.fileOpenPreference="fileOpenPreference",e.theme="theme"}(Jt||(Jt={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.conversations)}e.openConversation=function(e){return new Promise((n=>{if(Ie(ae,_.content),!t())throw V;const i=bt("conversations.openConversation",{title:e.title,subEntityId:e.subEntityId,conversationId:e.conversationId,channelId:e.channelId,entityId:e.entityId});e.onStartConversation&&ct("startConversation",((t,n,i,o)=>{var r;return null===(r=e.onStartConversation)||void 0===r?void 0:r.call(e,{subEntityId:t,conversationId:n,channelId:i,entityId:o})})),e.onCloseConversation&&ct("closeConversation",((t,n,i,o)=>{var r;return null===(r=e.onCloseConversation)||void 0===r?void 0:r.call(e,{subEntityId:t,conversationId:n,channelId:i,entityId:o})})),n(i)}))},e.closeConversation=function(){if(Ie(ae,_.content),!t())throw V;Rt("conversations.closeConversation"),ut("startConversation"),ut("closeConversation")},e.getChatMembers=function(){return new Promise((e=>{if(Ie(ae),!t())throw V;e(It("getChatMembers"))}))},e.isSupported=t}($t||($t={}));const rn="users";function an(e,t,n){if(0===e.length)throw new Error("Must have at least one user when creating a chat deep link");const i=`${rn}=`+e.map((e=>encodeURIComponent(e))).join(","),o=void 0===t?"":`&topicName=${encodeURIComponent(t)}`,r=void 0===n?"":`&message=${encodeURIComponent(n)}`;return`${h}://${w}/l/chat/0/0?${i}${o}${r}`}var sn;!function(e){function t(){return!(!Ie(ae)||!ae.supports.appInstallDialog)}e.openAppInstallDialog=function(e){return new Promise((n=>{if(Ie(ae,_.content,_.sidePanel,_.settings,_.task,_.stage,_.meetingStage),!t())throw new Error("Not supported");ae.isLegacyTeams?n(bt("executeDeepLink",function(e){if(!e)throw new Error("App ID must be set when creating an app install dialog deep link");return`${h}://${w}/l/app/${encodeURIComponent(e)}`}(e.appId))):(Rt("appInstallDialog.openAppInstallDialog",[e]),n())}))},e.isSupported=t}(sn||(sn={}));const ln=a.V_1,cn=t("media");var un;function dn(e,t){if(null==e||null==t||e.length<=0)return null;let n=null,i=1;return e.sort(((e,t)=>e.sequence>t.sequence?1:-1)),e.forEach((e=>{e.sequence==i&&(n=n?new Blob([n,e.file],{type:t}):new Blob([e.file],{type:t}),i++)})),n}function pn(e,t){if(null==e||null==t)return null;const n=atob(e.chunk),i=new Array(n.length);for(let e=0;e<n.length;e++)i[e]=n.charCodeAt(e);const o=new Uint8Array(i),r=new Blob([o],{type:t});return{sequence:e.chunkSequence,file:r}}function fn(e){return!e||!(null===e.timeOutIntervalInSec||null!=e.timeOutIntervalInSec&&e.timeOutIntervalInSec<=0||null!=e.timeOutIntervalInSec&&e.timeOutIntervalInSec>60)}!function(e){let t,n,i,r,a,l,c;!function(e){e.Base64="base64",e.ID="id"}(t=e.FileFormat||(e.FileFormat={}));class d{}function f(){return!(!Ie(ae)||!ae.supports.permissions)}e.File=d,e.captureImage=function(e){if(!e)throw new Error("[captureImage] Callback cannot be null");Ie(ae,_.content,_.task),M.isFramelessWindow?Te("1.7.0")?kt(o(ln,s.Media_CaptureImage),"captureImage",e):e({errorCode:O.OLD_PLATFORM},[]):e({errorCode:O.NOT_SUPPORTED_ON_PLATFORM},[])},e.hasPermission=function(){if(Ie(ae,_.content,_.task),!f())throw V;const e=k.Media;return new Promise((t=>{t(At(o(ln,s.Media_HasPermission),"permissions.has",e))}))},e.requestPermission=function(){if(Ie(ae,_.content,_.task),!f())throw V;const e=k.Media;return new Promise((t=>{t(At(o(ln,s.Media_RequestPermission),"permissions.request",e))}))};class g extends d{constructor(e){super(),e&&(this.content=e.content,this.format=e.format,this.mimeType=e.mimeType,this.name=e.name,this.preview=e.preview,this.size=e.size)}getMedia(e){if(!e)throw new Error("[get Media] Callback cannot be null");Ie(ae,_.content,_.task),Te(p)?function(e,t,n){return null!=e&&null!=t&&t==un.FileFormat.ID&&null!=n}(this.mimeType,this.format,this.content)?Te("2.0.0")?this.getMediaViaCallback(e):this.getMediaViaHandler(e):e({errorCode:O.INVALID_ARGUMENTS},new Blob):e({errorCode:O.OLD_PLATFORM},new Blob)}getMediaViaCallback(e){const t={mediaMimeType:this.mimeType,assembleAttachment:[]},n=[this.content];kt(o(ln,s.Media_GetMedia),"getMedia",n,(function(n){if(e)if(n&&n.error)e(n.error,new Blob);else if(n&&n.mediaChunk)if(n.mediaChunk.chunkSequence<=0){const i=dn(t.assembleAttachment,t.mediaMimeType);e(n.error,null!=i?i:new Blob)}else{const e=pn(n.mediaChunk,t.mediaMimeType);e?t.assembleAttachment.push(e):cn(`Received a null assemble attachment for when decoding chunk sequence ${n.mediaChunk.chunkSequence}; not including the chunk in the assembled file.`)}else e({errorCode:O.INTERNAL_ERROR,message:"data received is null"},new Blob)}))}getMediaViaHandler(e){const t=Z(),n={mediaMimeType:this.mimeType,assembleAttachment:[]},i=[t,this.content];this.content&&!Ae(e)&&kt(o(ln,s.Media_GetMedia),"getMedia",i),ct("getMedia"+t,(function(i){if(e){const o=JSON.parse(i);if(o.error)e(o.error,new Blob),ut("getMedia"+t);else if(o.mediaChunk)if(o.mediaChunk.chunkSequence<=0){const i=dn(n.assembleAttachment,n.mediaMimeType);e(o.error,null!=i?i:new Blob),ut("getMedia"+t)}else{const e=pn(o.mediaChunk,n.mediaMimeType);e&&n.assembleAttachment.push(e)}else e({errorCode:O.INTERNAL_ERROR,message:"data received is null"},new Blob),ut("getMedia"+t)}}))}}e.Media=g;class m{constructor(e){this.controllerCallback=e}notifyEventToHost(e,t){Ie(ae,_.content,_.task);try{Ee(u)}catch(e){return void(t&&t(e))}const n={mediaType:this.getMediaType(),mediaControllerEvent:e};kt(o(ln,s.Media_Controller),"media.controller",[n],(e=>{t&&t(e)}))}stop(e){this.notifyEventToHost(n.StopRecording,e)}}e.VideoController=class extends m{getMediaType(){return a.Video}notifyEventToApp(e){if(this.controllerCallback)switch(e){case n.StartRecording:if(this.controllerCallback.onRecordingStarted){this.controllerCallback.onRecordingStarted();break}}}},function(e){e[e.StartRecording=1]="StartRecording",e[e.StopRecording=2]="StopRecording"}(n=e.MediaControllerEvent||(e.MediaControllerEvent={})),function(e){e[e.Photo=1]="Photo",e[e.Document=2]="Document",e[e.Whiteboard=3]="Whiteboard",e[e.BusinessCard=4]="BusinessCard"}(i=e.CameraStartMode||(e.CameraStartMode={})),function(e){e[e.Camera=1]="Camera",e[e.Gallery=2]="Gallery"}(r=e.Source||(e.Source={})),function(e){e[e.Image=1]="Image",e[e.Video=2]="Video",e[e.VideoAndImage=3]="VideoAndImage",e[e.Audio=4]="Audio"}(a=e.MediaType||(e.MediaType={})),function(e){e[e.ID=1]="ID",e[e.URL=2]="URL"}(l=e.ImageUriType||(e.ImageUriType={})),function(e){e[e.IMAGE=1]="IMAGE",e[e.PDF=2]="PDF"}(c=e.ImageOutputFormats||(e.ImageOutputFormats={})),e.selectMedia=function(e,t){if(!t)throw new Error("[select Media] Callback cannot be null");if(Ie(ae,_.content,_.task),!Te(p)){const e={errorCode:O.OLD_PLATFORM};return void t(e,[])}try{!function(e){!function(e){return!(!e||e.mediaType!=un.MediaType.VideoAndImage&&!e.videoAndImageProps)}(e)?function(e){return!(!e||e.mediaType!=un.MediaType.Video||!e.videoProps||e.videoProps.isFullScreenMode)}(e)?Ee(u):function(e){var t;return!((null==e?void 0:e.mediaType)!=un.MediaType.Image||!(null===(t=null==e?void 0:e.imageProps)||void 0===t?void 0:t.imageOutputFormats))}(e)&&Ee("2.0.4"):Ee("2.0.2")}(e)}catch(e){return void t(e,[])}if(!function(e){return!(null==e||e.maxMediaCount>10)}(e)){const e={errorCode:O.INVALID_ARGUMENTS};return void t(e,[])}const n=[e];kt(o(ln,s.Media_SelectMedia),"selectMedia",n,((n,i,o)=>{var r,a;if(o)return void(function(e){return!(e.mediaType!=un.MediaType.Video||!e.videoProps||!e.videoProps.videoController)}(e)&&(null===(a=null===(r=null==e?void 0:e.videoProps)||void 0===r?void 0:r.videoController)||void 0===a||a.notifyEventToApp(o)));if(!i)return void t(n,[]);const s=[];for(const e of i)s.push(new g(e));t(n,s)}))},e.viewImages=function(e,t){if(!t)throw new Error("[view images] Callback cannot be null");if(Ie(ae,_.content,_.task),!Te(p))return void t({errorCode:O.OLD_PLATFORM});if(!function(e){return!(null==e||e.length<=0||e.length>10)}(e))return void t({errorCode:O.INVALID_ARGUMENTS});const n=[e];kt(o(ln,s.Media_ViewImages),"viewImages",n,t)},e.scanBarCode=function(e,t){if(!e)throw new Error("[media.scanBarCode] Callback cannot be null");Ie(ae,_.content,_.task),M.hostClientType!==F.desktop&&M.hostClientType!==F.web&&M.hostClientType!==F.rigel&&M.hostClientType!==F.teamsRoomsWindows&&M.hostClientType!==F.teamsRoomsAndroid&&M.hostClientType!==F.teamsPhones&&M.hostClientType!==F.teamsDisplays?Te("1.9.0")?fn(t)?kt(o(ln,s.Media_ScanBarCode),"media.scanBarCode",[t],e):e({errorCode:O.INVALID_ARGUMENTS},""):e({errorCode:O.OLD_PLATFORM},""):e({errorCode:O.NOT_SUPPORTED_ON_PLATFORM},"")}}(un||(un={}));const gn=a.V_2;var mn,hn;!function(e){function t(){return!!(Ie(ae)&&ae.supports.barCode&&ae.supports.permissions)}e.scanBarCode=function(e){return new Promise((n=>{if(Ie(ae,_.content,_.task),!t())throw V;if(!fn(e))throw{errorCode:O.INVALID_ARGUMENTS};n(At(o(gn,s.BarCode_ScanBarCode),"media.scanBarCode",e))}))},e.hasPermission=function(){if(Ie(ae,_.content,_.task),!t())throw V;const e=k.Media;return new Promise((t=>{t(At(o(gn,s.BarCode_HasPermission),"permissions.has",e))}))},e.requestPermission=function(){if(Ie(ae,_.content,_.task),!t())throw V;const e=k.Media;return new Promise((t=>{t(At(o(gn,s.BarCode_RequestPermission),"permissions.request",e))}))},e.isSupported=t}(mn||(mn={})),function(e){function t(e){return new Promise((t=>{if(Ie(ae,_.content,_.task),!n())throw V;ae.isLegacyTeams?t(bt("executeDeepLink",an([e.user],void 0,e.message))):t(bt("chat.openChat",{members:[e.user],message:e.message}))}))}function n(){return!(!Ie(ae)||!ae.supports.chat)}e.openChat=t,e.openGroupChat=function(e){return new Promise((i=>{if(e.users.length<1)throw Error("OpenGroupChat Failed: No users specified");if(1===e.users.length)i(t({user:e.users[0],message:e.message}));else{if(Ie(ae,_.content,_.task),!n())throw V;ae.isLegacyTeams?i(bt("executeDeepLink",an(e.users,e.topic,e.message))):i(bt("chat.openChat",{members:e.users,message:e.message,topic:e.topic}))}}))},e.isSupported=n}(hn||(hn={}));var wn=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};const Cn=a.V_2;var yn;!function(e){function t(){return!!(Ie(ae)&&navigator&&navigator.clipboard&&ae.supports.clipboard)}e.write=function(e){return wn(this,void 0,void 0,(function*(){if(Ie(ae,_.content,_.meetingStage,_.task,_.settings,_.stage,_.sidePanel),!t())throw V;if(!e.type||!Object.values(R).includes(e.type))throw new Error(`Blob type ${e.type} is not supported. Supported blob types are ${Object.values(R)}`);const n=yield function(e){return new Promise(((t,n)=>{0===e.size&&n(new Error("Blob cannot be empty."));const i=new FileReader;i.onloadend=()=>{i.result?t(i.result.toString().split(",")[1]):n(new Error("Failed to read the blob"))},i.onerror=()=>{n(i.error)},i.readAsDataURL(e)}))}(e),i={mimeType:e.type,content:n};return At(o(Cn,s.Clipboard_Write),"clipboard.writeToClipboard",i)}))},e.read=function(){return wn(this,void 0,void 0,(function*(){if(Ie(ae,_.content,_.meetingStage,_.task,_.settings,_.stage,_.sidePanel),!t())throw V;if(be()||M.hostClientType===F.macos){const e=JSON.parse(yield Nt("clipboard.readFromClipboard"));return function(e,t){return new Promise(((n,i)=>{e||i("MimeType cannot be null or empty."),t||i("Base64 string cannot be null or empty.");const o=atob(t);if(e.startsWith("image/")){const t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o.charCodeAt(e);n(new Blob([t],{type:e}))}n(new Blob([o],{type:e}))}))}(e.mimeType,e.content)}return At(o(Cn,s.Clipboard_Read),"clipboard.readFromClipboard")}))},e.isSupported=t}(yn||(yn={}));const vn=a.V_2;var Mn,Sn;function In(){return ae.hostVersionsInfo?ae.hostVersionsInfo.adaptiveCardSchemaVersion:void 0}!function(e){function t(){return!!(Ie(ae)&&ae.supports.geoLocation&&ae.supports.permissions)}let n;e.getCurrentLocation=function(){if(Ie(ae,_.content,_.task),!t())throw V;return At(o(vn,s.GeoLocation_GetCurrentLocation),"location.getLocation",{allowChooseLocation:!1,showMap:!1})},e.hasPermission=function(){if(Ie(ae,_.content,_.task),!t())throw V;const e=k.GeoLocation;return new Promise((t=>{t(At(o(vn,s.GeoLocation_HasPermission),"permissions.has",e))}))},e.requestPermission=function(){if(Ie(ae,_.content,_.task),!t())throw V;const e=k.GeoLocation;return new Promise((t=>{t(At(o(vn,s.GeoLocation_RequestPermission),"permissions.request",e))}))},e.isSupported=t,function(e){function t(){return!!(Ie(ae)&&ae.supports.geoLocation&&ae.supports.geoLocation.map&&ae.supports.permissions)}e.chooseLocation=function(){if(Ie(ae,_.content,_.task),!t())throw V;return At(o(vn,s.GeoLocation_Map_ChooseLocation),"location.getLocation",{allowChooseLocation:!0,showMap:!0})},e.showLocation=function(e){if(Ie(ae,_.content,_.task),!t())throw V;if(!e)throw{errorCode:O.INVALID_ARGUMENTS};return At(o(vn,s.GeoLocation_ShowLocation),"location.showLocation",e)},e.isSupported=t}(n=e.map||(e.map={}))}(Mn||(Mn={}));class Tn{postMessage(e,t){Ie(ae),Rt("messageForChild",[e],t||q())}addEventListener(e,t){Ie(ae),"message"===e&&ct("messageForParent",t)}}class bn{static get Instance(){return this._instance||(this._instance=new this)}postMessage(e,t){Ie(ae,_.task),Rt("messageForParent",[e],t||q())}addEventListener(e,t){Ie(ae,_.task),"message"===e&&ct("messageForChild",t)}}!function(e){function t(){return!(!Ie(ae)||!ae.supports.secondaryBrowser)}e.open=function(e){if(Ie(ae,_.content),!t())throw V;if(!e||!X(e))throw{errorCode:O.INVALID_ARGUMENTS,message:"Invalid Url: Only https URL is allowed"};return Nt("secondaryBrowser.open",e.toString())},e.isSupported=t}(Sn||(Sn={}));const En=a.V_1;var An,Nn,Pn;!function(e){function t(){return!(!Ie(ae)||!ae.supports.location)}e.getLocation=function(e,n){if(!n)throw new Error("[location.getLocation] Callback cannot be null");if(Ie(ae,_.content,_.task),!Te(d))throw{errorCode:O.OLD_PLATFORM};if(!e)throw{errorCode:O.INVALID_ARGUMENTS};if(!t())throw V;kt(o(En,s.Location_GetLocation),"location.getLocation",[e],n)},e.showLocation=function(e,n){if(!n)throw new Error("[location.showLocation] Callback cannot be null");if(Ie(ae,_.content,_.task),!Te(d))throw{errorCode:O.OLD_PLATFORM};if(!e)throw{errorCode:O.INVALID_ARGUMENTS};if(!t())throw V;kt(o(En,s.Location_ShowLocation),"location.showLocation",[e],n)},e.isSupported=t}(An||(An={})),function(e){let t,n,i,o,r,a;function s(e,n){Rt("meeting.requestAppAudioHandling",[e.isAppHandlingAudio],((i,o)=>{if(i&&null!=o)throw new Error("[requestAppAudioHandling] Callback response - both parameters cannot be set");if(i)throw new Error(`[requestAppAudioHandling] Callback response - SDK error ${i.errorCode} ${i.message}`);if("boolean"!=typeof o)throw new Error("[requestAppAudioHandling] Callback response - isHostAudioless must be a boolean");ct("meeting.micStateChanged",(n=>function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(t,n){function r(e){try{s(i.next(e))}catch(e){n(e)}}function a(e){try{s(i.throw(e))}catch(e){n(e)}}function s(e){e.done?t(e.value):o(e.value).then(r,a)}s((i=i.apply(e,[])).next())}))}(this,0,void 0,(function*(){try{const i=yield e.micMuteStateChangedCallback(n);l(i,i.isMicMuted===n.isMicMuted?t.HostInitiated:t.AppDeclinedToChange)}catch(e){l(n,t.AppFailedToChange)}})))),ct("meeting.audioDeviceSelectionChanged",(t=>{var n;null===(n=e.audioDeviceSelectionChangedCallback)||void 0===n||n.call(e,t)})),n(o)}))}function l(e,t){Ie(ae,_.sidePanel,_.meetingStage),Rt("meeting.updateMicState",[e,t])}!function(e){e[e.HostInitiated=0]="HostInitiated",e[e.AppInitiated=1]="AppInitiated",e[e.AppDeclinedToChange=2]="AppDeclinedToChange",e[e.AppFailedToChange=3]="AppFailedToChange"}(t||(t={})),function(e){e.like="like",e.heart="heart",e.laugh="laugh",e.surprised="surprised",e.applause="applause"}(n=e.MeetingReactionType||(e.MeetingReactionType={})),function(e){e.Unknown="Unknown",e.Adhoc="Adhoc",e.Scheduled="Scheduled",e.Recurring="Recurring",e.Broadcast="Broadcast",e.MeetNow="MeetNow"}(i=e.MeetingType||(e.MeetingType={})),function(e){e.OneOnOneCall="oneOnOneCall",e.GroupCall="groupCall"}(o=e.CallType||(e.CallType={})),function(e){e.Collaborative="Collaborative",e.ScreenShare="ScreenShare"}(r=e.SharingProtocol||(e.SharingProtocol={})),e.getIncomingClientAudioState=function(e){if(!e)throw new Error("[get incoming client audio state] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage),Rt("getIncomingClientAudioState",e)},e.toggleIncomingClientAudio=function(e){if(!e)throw new Error("[toggle incoming client audio] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage),Rt("toggleIncomingClientAudio",e)},e.getMeetingDetails=function(e){if(!e)throw new Error("[get meeting details] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage,_.settings,_.content),Rt("meeting.getMeetingDetails",e)},e.getAuthenticationTokenForAnonymousUser=function(e){if(!e)throw new Error("[get Authentication Token For AnonymousUser] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage,_.task),Rt("meeting.getAuthenticationTokenForAnonymousUser",e)},e.getLiveStreamState=function(e){if(!e)throw new Error("[get live stream state] Callback cannot be null");Ie(ae,_.sidePanel),Rt("meeting.getLiveStreamState",e)},e.requestStartLiveStreaming=function(e,t,n){if(!e)throw new Error("[request start live streaming] Callback cannot be null");Ie(ae,_.sidePanel),Rt("meeting.requestStartLiveStreaming",[t,n],e)},e.requestStopLiveStreaming=function(e){if(!e)throw new Error("[request stop live streaming] Callback cannot be null");Ie(ae,_.sidePanel),Rt("meeting.requestStopLiveStreaming",e)},e.registerLiveStreamChangedHandler=function(e){if(!e)throw new Error("[register live stream changed handler] Handler cannot be null");Ie(ae,_.sidePanel),ct("meeting.liveStreamChanged",e)},e.shareAppContentToStage=function(e,t,n={sharingProtocol:r.Collaborative}){if(!e)throw new Error("[share app content to stage] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage),Rt("meeting.shareAppContentToStage",[t,n],e)},e.getAppContentStageSharingCapabilities=function(e){if(!e)throw new Error("[get app content stage sharing capabilities] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage),Rt("meeting.getAppContentStageSharingCapabilities",e)},e.stopSharingAppContentToStage=function(e){if(!e)throw new Error("[stop sharing app content to stage] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage),Rt("meeting.stopSharingAppContentToStage",e)},e.getAppContentStageSharingState=function(e){if(!e)throw new Error("[get app content stage sharing state] Callback cannot be null");Ie(ae,_.sidePanel,_.meetingStage),Rt("meeting.getAppContentStageSharingState",e)},e.registerSpeakingStateChangeHandler=function(e){if(!e)throw new Error("[registerSpeakingStateChangeHandler] Handler cannot be null");Ie(ae,_.sidePanel,_.meetingStage),ct("meeting.speakingStateChanged",e)},e.registerRaiseHandStateChangedHandler=function(e){if(!e)throw new Error("[registerRaiseHandStateChangedHandler] Handler cannot be null");Ie(ae,_.sidePanel,_.meetingStage),ct("meeting.raiseHandStateChanged",e)},e.registerMeetingReactionReceivedHandler=function(e){if(!e)throw new Error("[registerMeetingReactionReceivedHandler] Handler cannot be null");Ie(ae,_.sidePanel,_.meetingStage),ct("meeting.meetingReactionReceived",e)},function(e){e.setOptions=function(e){Ie(ae,_.sidePanel),e.contentUrl&&new URL(e.contentUrl),Rt("meeting.appShareButton.setOptions",[e])}}(a=e.appShareButton||(e.appShareButton={})),e.requestAppAudioHandling=function(e,t){if(!t)throw new Error("[requestAppAudioHandling] Callback response cannot be null");if(!e.micMuteStateChangedCallback)throw new Error("[requestAppAudioHandling] Callback Mic mute state handler cannot be null");Ie(ae,_.sidePanel,_.meetingStage),e.isAppHandlingAudio?s(e,t):function(e,t){Rt("meeting.requestAppAudioHandling",[e.isAppHandlingAudio],((e,n)=>{if(e&&null!=n)throw new Error("[requestAppAudioHandling] Callback response - both parameters cannot be set");if(e)throw new Error(`[requestAppAudioHandling] Callback response - SDK error ${e.errorCode} ${e.message}`);if("boolean"!=typeof n)throw new Error("[requestAppAudioHandling] Callback response - isHostAudioless must be a boolean");dt("meeting.micStateChanged")&&ut("meeting.micStateChanged"),dt("meeting.audioDeviceSelectionChanged")&&ut("meeting.audioDeviceSelectionChanged"),t(n)}))}(e,t)},e.updateMicState=function(e){l(e,t.AppInitiated)}}(Nn||(Nn={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.monetization)}e.openPurchaseExperience=function(e,n){let i,o;return"function"==typeof e?(i=e,o=n):o=e,Ie(ae,_.content),function(e,t,...n){const i=e(...[]);return i.then((e=>{t&&t(null,e)})).catch((e=>{t&&t(e,null)})),i}((()=>new Promise((e=>{if(!t())throw V;e(Nt("monetization.openPurchaseExperience",o))}))),i)},e.isSupported=t}(Pn||(Pn={}));const Dn=a.V_2;var On;!function(e){function t(){return!(!Ie(ae)||!ae.supports.calendar)}e.openCalendarItem=function(e){return new Promise((n=>{if(Ie(ae,_.content),!t())throw new Error("Not supported");if(!e.itemId||!e.itemId.trim())throw new Error("Must supply an itemId to openCalendarItem");n(Tt(o(Dn,s.Calendar_OpenCalendarItem),"calendar.openCalendarItem",e))}))},e.composeMeeting=function(e){return new Promise((n=>{if(Ie(ae,_.content),!t())throw new Error("Not supported");ae.isLegacyTeams?n(bt("executeDeepLink",function(e,t,n,i,o){const r=void 0===e?"":"attendees="+e.map((e=>encodeURIComponent(e))).join(","),a=void 0===t?"":`&startTime=${encodeURIComponent(t)}`,s=void 0===n?"":`&endTime=${encodeURIComponent(n)}`,l=void 0===i?"":`&subject=${encodeURIComponent(i)}`,c=void 0===o?"":`&content=${encodeURIComponent(o)}`;return`${h}://${w}/l/meeting/new?${r}${a}${s}${l}${c}`}(e.attendees,e.startTime,e.endTime,e.subject,e.content))):n(Tt(o(Dn,s.Calendar_ComposeMeeting),"calendar.composeMeeting",e))}))},e.isSupported=t}(On||(On={}));const kn=a.V_2;var Rn,Fn,Ln,_n;!function(e){function t(){return!(!Ie(ae)||!ae.supports.mail)}let n;e.openMailItem=function(e){return new Promise((n=>{if(Ie(ae,_.content),!t())throw new Error("Not supported");if(!e.itemId||!e.itemId.trim())throw new Error("Must supply an itemId to openMailItem");n(Tt(o(kn,s.Mail_OpenMailItem),"mail.openMailItem",e))}))},e.composeMail=function(e){return new Promise((n=>{if(Ie(ae,_.content),!t())throw new Error("Not supported");n(Tt(o(kn,s.Mail_ComposeMail),"mail.composeMail",e))}))},e.isSupported=t,function(e){e.New="new",e.Reply="reply",e.ReplyAll="replyAll",e.Forward="forward"}(n=e.ComposeMailType||(e.ComposeMailType={}))}(Rn||(Rn={})),function(e){function t(){K().print()}function n(e,t){!Ae(e)&&Ie(ae),!Ae(e)&&t&&t(),gt(e)}function i(e,t){!Ae(e)&&Ie(ae),!Ae(e)&&t&&t(),ht(e)}function o(){return!(!Ie(ae)||!ae.supports.teamsCore)}e.enablePrintCapability=function(){if(!M.printCapabilityEnabled){if(Ie(ae),!o())throw V;M.printCapabilityEnabled=!0,document.addEventListener("keydown",(e=>{(e.ctrlKey||e.metaKey)&&80===e.keyCode&&(t(),e.cancelBubble=!0,e.preventDefault(),e.stopImmediatePropagation())}))}},e.print=t,e.registerOnLoadHandler=function(e){n(e,(()=>{if(!Ae(e)&&!o())throw V}))},e.registerOnLoadHandlerHelper=n,e.registerBeforeUnloadHandler=function(e){i(e,(()=>{if(!Ae(e)&&!o())throw V}))},e.registerBeforeUnloadHandlerHelper=i,e.isSupported=o}(Fn||(Fn={})),function(e){function t(e){return new Promise((t=>{if(!Te("2.0.0"))throw{errorCode:O.OLD_PLATFORM};if(!function(e){if(e){if(e.title&&"string"!=typeof e.title)return!1;if(e.setSelected&&"object"!=typeof e.setSelected)return!1;if(e.openOrgWideSearchInChatOrChannel&&"boolean"!=typeof e.openOrgWideSearchInChatOrChannel)return!1;if(e.singleSelect&&"boolean"!=typeof e.singleSelect)return!1}return!0}(e))throw{errorCode:O.INVALID_ARGUMENTS};if(!n())throw V;t(Nt("people.selectPeople",e))}))}function n(){return!(!Ie(ae)||!ae.supports.people)}e.selectPeople=function(e,n){let i,o;return Ie(ae,_.content,_.task,_.settings),"function"==typeof e?[i,o]=[e,n]:o=e,function(e,t,...n){const i=e(...n);return i.then((e=>{t&&t(void 0,e)})).catch((e=>{t&&t(e)})),i}(t,i,o)},e.isSupported=n}(Ln||(Ln={})),function(e){e.showProfile=function(e){return Ie(ae,_.content),new Promise((t=>{const[n,i]=function(e){return e?e.modality&&"string"!=typeof e.modality?[!1,"modality must be a string"]:e.targetElementBoundingRect&&"object"==typeof e.targetElementBoundingRect?e.triggerType&&"string"==typeof e.triggerType?function(e){return e?e.displayName&&"string"!=typeof e.displayName?[!1,"displayName must be a string"]:e.identifiers&&"object"==typeof e.identifiers?e.identifiers.AadObjectId||e.identifiers.Smtp||e.identifiers.Upn?e.identifiers.AadObjectId&&"string"!=typeof e.identifiers.AadObjectId?[!1,"AadObjectId identifier must be a string"]:e.identifiers.Smtp&&"string"!=typeof e.identifiers.Smtp?[!1,"Smtp identifier must be a string"]:e.identifiers.Upn&&"string"!=typeof e.identifiers.Upn?[!1,"Upn identifier must be a string"]:[!0,void 0]:[!1,"at least one valid identifier must be provided"]:[!1,"persona identifiers object must be provided"]:[!1,"persona object must be provided"]}(e.persona):[!1,"triggerType must be a valid string"]:[!1,"targetElementBoundingRect must be a DOMRect"]:[!1,"A request object is required"]}(e);if(!n)throw{errorCode:O.INVALID_ARGUMENTS,message:i};t(Nt("profile.showProfile",{modality:e.modality,persona:e.persona,triggerType:e.triggerType,targetRectangle:{x:e.targetElementBoundingRect.x,y:e.targetElementBoundingRect.y,width:e.targetElementBoundingRect.width,height:e.targetElementBoundingRect.height}}))}))},e.isSupported=function(){return!(!Ie(ae)||!ae.supports.profile)}}(_n||(_n={}));var xn,jn=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};function Un(e,t,n,i){var o,r;return jn(this,void 0,void 0,(function*(){const a=Hn();!ee()&&(null===(r=null===(o=window.chrome)||void 0===o?void 0:o.webview)||void 0===r||r.registerTextureStream(e,a)),Vn(yield zn(e,n,i),new Bn(n,t),a.writable)}))}function zn(e,t,n){return jn(this,void 0,void 0,(function*(){if(ee())throw V;const i=K().chrome;try{null==n||n.reportGettingTextureStream(e);const t=(yield i.webview.getTextureStream(e)).getVideoTracks();if(0===t.length)throw new Error(`No video track in stream ${e}`);return null==n||n.reportTextureStreamAcquired(),t[0]}catch(n){throw t(`Failed to get video track from stream ${e}, error: ${n}`),new Error(`Internal error: can't get video track from stream ${e}`)}}))}function Hn(){if(ee())throw V;const e=window.MediaStreamTrackGenerator;if(!e)throw V;return new e({kind:"video"})}function Vn(e,t,n){new(0,K().MediaStreamTrackProcessor)({track:e}).readable.pipeThrough(new TransformStream(t)).pipeTo(n)}!function(e){e.TimestampIsNull="timestamp of the original video frame is null",e.UnsupportedVideoFramePixelFormat="Unsupported video frame pixel format"}(xn||(xn={}));class Bn{constructor(e,t){this.notifyError=e,this.videoFrameHandler=t,this.transform=(e,t)=>jn(this,void 0,void 0,(function*(){const n=e.timestamp;if(null!==n)try{const i=yield this.videoFrameHandler({videoFrame:e}),o=new VideoFrame(i,{timestamp:n});t.enqueue(o),e.close(),i.close()}catch(t){e.close(),this.notifyError(t)}else this.notifyError(xn.TimestampIsNull)}))}}class Wn{constructor(e,t){if(this.headerBuffer=e,this.notifyError=t,this.ONE_TEXTURE_INPUT_ID=1869900081,this.INVALID_HEADER_ERROR="Invalid video frame header",this.UNSUPPORTED_LAYOUT_ERROR="Unsupported texture layout",this.headerDataView=new Uint32Array(e),this.headerDataView.length<8)throw this.notifyError(this.INVALID_HEADER_ERROR),new Error(this.INVALID_HEADER_ERROR);if(this.headerDataView[0]!==this.ONE_TEXTURE_INPUT_ID)throw this.notifyError(this.UNSUPPORTED_LAYOUT_ERROR),new Error(this.UNSUPPORTED_LAYOUT_ERROR)}get oneTextureLayoutId(){return this.headerDataView[0]}get version(){return this.headerDataView[1]}get frameRowOffset(){return this.headerDataView[2]}get frameFormat(){return this.headerDataView[3]}get frameWidth(){return this.headerDataView[4]}get frameHeight(){return this.headerDataView[5]}get multiStreamHeaderRowOffset(){return this.headerDataView[6]}get multiStreamCount(){return this.headerDataView[7]}}class Gn{constructor(e,t){this.metadataMap=new Map,this.AUDIO_INFERENCE_RESULT_STREAM_ID=828664161;const n=new Uint32Array(e);for(let i=0,o=0;i<t;i++){const t=n[o++],i=n[o++],r=n[o++],a=new Uint8Array(e,i,r);this.metadataMap.set(t,a)}}get audioInferenceResult(){return this.metadataMap.get(this.AUDIO_INFERENCE_RESULT_STREAM_ID)}}class qn{constructor(e,t){this.notifyError=e,this.videoFrameHandler=t,this.shouldDiscardAudioInferenceResult=!1,this.transform=(e,t)=>jn(this,void 0,void 0,(function*(){const n=e.timestamp;if(null!==n)try{const{videoFrame:i,metadata:{audioInferenceResult:o}={}}=yield this.extractVideoFrameAndMetadata(e),r=yield this.videoFrameHandler({videoFrame:i,audioInferenceResult:o}),a=new VideoFrame(r,{timestamp:n});t.enqueue(a),i.close(),e.close(),r.close()}catch(t){e.close(),this.notifyError(t)}else this.notifyError(xn.TimestampIsNull)})),this.extractVideoFrameAndMetadata=e=>jn(this,void 0,void 0,(function*(){if(ee())throw V;if("NV12"!==e.format)throw this.notifyError(xn.UnsupportedVideoFramePixelFormat),new Error(xn.UnsupportedVideoFramePixelFormat);const t={x:0,y:0,width:e.codedWidth,height:2},n=new ArrayBuffer(t.width*t.height*3/2);yield e.copyTo(n,{rect:t});const i=new Wn(n,this.notifyError),o={x:0,y:i.multiStreamHeaderRowOffset,width:e.codedWidth,height:e.codedHeight-i.multiStreamHeaderRowOffset},r=new ArrayBuffer(o.width*o.height*3/2);yield e.copyTo(r,{rect:o});const a=new Gn(r,i.multiStreamCount);return{videoFrame:new VideoFrame(e,{timestamp:e.timestamp,visibleRect:{x:0,y:i.frameRowOffset,width:i.frameWidth,height:i.frameHeight}}),metadata:{audioInferenceResult:this.shouldDiscardAudioInferenceResult?void 0:a.audioInferenceResult}}})),ct("video.mediaStream.audioInferenceDiscardStatusChange",(({discardAudioInferenceResult:e})=>{this.shouldDiscardAudioInferenceResult=e}))}}function Qn(e,t){return(n,i)=>{null==t||t.reportApplyingVideoEffect(n||"",i),e(n,i).then((()=>{null==t||t.reportVideoEffectChanged(n||"",i),Rt("video.videoEffectReadiness",[!0,n,void 0,i])})).catch((e=>{const t=e in $n.EffectFailureReason?e:$n.EffectFailureReason.InitializationFailure;Rt("video.videoEffectReadiness",[!1,n,t,i])}))}}class Zn{static setTimeout(e,t){const n=performance.now(),i=Z();return Zn.setTimeoutCallbacks[i]={callback:e,timeoutInMs:t,startedAtInMs:n},i}static clearTimeout(e){delete Zn.setTimeoutCallbacks[e]}static setInterval(e,t){Zn.setTimeout((function n(){e(),Zn.setTimeout(n,t)}),t)}static tick(){const e=performance.now(),t=[];for(const n in Zn.setTimeoutCallbacks){const i=Zn.setTimeoutCallbacks[n];e-i.startedAtInMs>=i.timeoutInMs&&t.push(n)}for(const e of t)Zn.setTimeoutCallbacks[e].callback(),delete Zn.setTimeoutCallbacks[e]}}Zn.setTimeoutCallbacks={};class Yn{constructor(e,t){this.reportStatisticsResult=t,this.sampleCount=0,this.distributionBins=new Uint32Array(e)}processStarts(e,t,n,i){Zn.tick(),this.suitableForThisSession(e,t,n,i)||this.reportAndResetSession(this.getStatistics(),e,i,t,n),this.start()}processEnds(){const e=performance.now()-this.frameProcessingStartedAt,t=Math.floor(Math.max(0,Math.min(this.distributionBins.length-1,e)));this.distributionBins[t]+=1,this.sampleCount+=1}getStatistics(){return this.currentSession?{effectId:this.currentSession.effectId,effectParam:this.currentSession.effectParam,frameHeight:this.currentSession.frameHeight,frameWidth:this.currentSession.frameWidth,duration:performance.now()-this.currentSession.startedAtInMs,sampleCount:this.sampleCount,distributionBins:this.distributionBins.slice()}:null}start(){this.frameProcessingStartedAt=performance.now()}suitableForThisSession(e,t,n,i){return this.currentSession&&this.currentSession.effectId===e&&this.currentSession.effectParam===i&&this.currentSession.frameWidth===t&&this.currentSession.frameHeight===n}reportAndResetSession(e,t,n,i,o){e&&this.reportStatisticsResult(e),this.resetCurrentSession(this.getNextTimeout(t,this.currentSession),t,n,i,o),this.timeoutId&&Zn.clearTimeout(this.timeoutId),this.timeoutId=Zn.setTimeout((()=>this.reportAndResetSession(this.getStatistics(),t,n,i,o)).bind(this),this.currentSession.timeoutInMs)}resetCurrentSession(e,t,n,i,o){this.currentSession={startedAtInMs:performance.now(),timeoutInMs:e,effectId:t,effectParam:n,frameWidth:i,frameHeight:o},this.sampleCount=0,this.distributionBins.fill(0)}getNextTimeout(e,t){return t&&t.effectId===e?Math.min(Yn.maxSessionTimeoutInMs,2*t.timeoutInMs):Yn.initialSessionTimeoutInMs}}Yn.initialSessionTimeoutInMs=1e3,Yn.maxSessionTimeoutInMs=3e4;class Jn{constructor(e){this.reportPerformanceEvent=e,this.isFirstFrameProcessed=!1,this.frameProcessTimeLimit=100,this.frameProcessingStartedAt=0,this.frameProcessingTimeCost=0,this.processedFrameCount=0,this.performanceStatistics=new Yn(Jn.distributionBinSize,(e=>this.reportPerformanceEvent("video.performance.performanceDataGenerated",[e])))}startMonitorSlowFrameProcessing(){Zn.setInterval((()=>{if(0===this.processedFrameCount)return;const e=this.frameProcessingTimeCost/this.processedFrameCount;e>this.frameProcessTimeLimit&&this.reportPerformanceEvent("video.performance.frameProcessingSlow",[e]),this.frameProcessingTimeCost=0,this.processedFrameCount=0}),Jn.calculateFPSInterval)}setFrameProcessTimeLimit(e){this.frameProcessTimeLimit=e}reportApplyingVideoEffect(e,t){var n,i;(null===(n=this.applyingEffect)||void 0===n?void 0:n.effectId)===e&&(null===(i=this.applyingEffect)||void 0===i?void 0:i.effectParam)===t||(this.applyingEffect={effectId:e,effectParam:t},this.appliedEffect=void 0)}reportVideoEffectChanged(e,t){void 0===this.applyingEffect||this.applyingEffect.effectId!==e&&this.applyingEffect.effectParam!==t||(this.appliedEffect={effectId:e,effectParam:t},this.applyingEffect=void 0,this.isFirstFrameProcessed=!1)}reportStartFrameProcessing(e,t){Zn.tick(),this.appliedEffect&&(this.frameProcessingStartedAt=performance.now(),this.performanceStatistics.processStarts(this.appliedEffect.effectId,e,t,this.appliedEffect.effectParam))}reportFrameProcessed(){var e;this.appliedEffect&&(this.processedFrameCount++,this.frameProcessingTimeCost+=performance.now()-this.frameProcessingStartedAt,this.performanceStatistics.processEnds(),this.isFirstFrameProcessed||(this.isFirstFrameProcessed=!0,this.reportPerformanceEvent("video.performance.firstFrameProcessed",[Date.now(),this.appliedEffect.effectId,null===(e=this.appliedEffect)||void 0===e?void 0:e.effectParam])))}reportGettingTextureStream(e){this.gettingTextureStreamStartedAt=performance.now(),this.currentStreamId=e}reportTextureStreamAcquired(){if(void 0!==this.gettingTextureStreamStartedAt){const e=performance.now()-this.gettingTextureStreamStartedAt;this.reportPerformanceEvent("video.performance.textureStreamAcquired",[this.currentStreamId,e])}}}Jn.distributionBinSize=1e3,Jn.calculateFPSInterval=1e3;var $n,Xn,Kn,ei,ti=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};!function(e){const t=ee()?void 0:new Jn(Rt);let n,i,o;function r(e){Rt("video.notifyError",[e])}function a(){return Ie(ae)&&!!ae.supports.video&&(!!ae.supports.video.mediaStream||!!ae.supports.video.sharedFrame)}function s(){var e;return Ie(ae,_.sidePanel)&&function(){var e,t,n,i;return!(!(null===(t=null===(e=K().chrome)||void 0===e?void 0:e.webview)||void 0===t?void 0:t.getTextureStream)||!(null===(i=null===(n=K().chrome)||void 0===n?void 0:n.webview)||void 0===i?void 0:i.registerTextureStream))}()&&!!(null===(e=ae.supports.video)||void 0===e?void 0:e.mediaStream)}function l(){var e;return Ie(ae,_.sidePanel)&&!!(null===(e=ae.supports.video)||void 0===e?void 0:e.sharedFrame)}!function(e){e.NV12="NV12"}(n=e.VideoFrameFormat||(e.VideoFrameFormat={})),function(e){e.EffectChanged="EffectChanged",e.EffectDisabled="EffectDisabled"}(i=e.EffectChangeType||(e.EffectChangeType={})),function(e){e.InvalidEffectId="InvalidEffectId",e.InitializationFailure="InitializationFailure"}(o=e.EffectFailureReason||(e.EffectFailureReason={})),e.registerForVideoFrame=function(e){if(Ie(ae,_.sidePanel),!a())throw V;if(!e.videoFrameHandler||!e.videoBufferHandler)throw new Error("Both videoFrameHandler and videoBufferHandler must be provided");if(ct("video.setFrameProcessTimeLimit",(e=>null==t?void 0:t.setFrameProcessTimeLimit(e.timeLimit)),!1),s())!function(e,n){if(Ie(ae,_.sidePanel),!a()||!s())throw V;ct("video.startVideoExtensibilityVideoStream",(n=>ti(this,void 0,void 0,(function*(){const{streamId:i}=n,o=function(e,t){return n=>ti(this,void 0,void 0,(function*(){const i=n.videoFrame;null==t||t.reportStartFrameProcessing(i.codedWidth,i.codedHeight);const o=yield e(n);return null==t||t.reportFrameProcessed(),o}))}(e,t);yield Un(i,o,r,t)}))),!1),Rt("video.mediaStream.registerForVideoFrame",[n])}(e.videoFrameHandler,e.config);else{if(!l())throw V;!function(e,n){if(Ie(ae,_.sidePanel),!a()||!l())throw V;ct("video.newVideoFrame",(n=>{if(n){const i=n.timestamp;null==t||t.reportStartFrameProcessing(n.width,n.height),e(function(e){if("videoFrameBuffer"in e)return e;{const{data:t}=e,n=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(e);o<i.length;o++)t.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(e,i[o])&&(n[i[o]]=e[i[o]])}return n}(e,["data"]);return Object.assign(Object.assign({},n),{videoFrameBuffer:t})}}(n),(()=>{null==t||t.reportFrameProcessed(),function(e){Rt("video.videoFrameProcessed",[e])}(i)}),r)}}),!1),Rt("video.registerForVideoFrame",[n])}(e.videoBufferHandler,e.config)}null==t||t.startMonitorSlowFrameProcessing()},e.notifySelectedVideoEffectChanged=function(e,t){if(Ie(ae,_.sidePanel),!a())throw V;Rt("video.videoEffectChanged",[e,t])},e.registerForVideoEffect=function(e){if(Ie(ae,_.sidePanel),!a())throw V;ct("video.effectParameterChange",Qn(e,t),!1),Rt("video.registerForVideoEffect")},e.isSupported=a}($n||($n={})),function(e){const t="search.queryChange",n="search.queryClose",i="search.queryExecute";function o(){return!(!Ie(ae)||!ae.supports.search)}e.registerHandlers=function(e,r,a){if(Ie(ae,_.content),!o())throw V;ct(n,e),ct(i,r),a&&ct(t,a)},e.unregisterHandlers=function(){if(Ie(ae,_.content),!o())throw V;Rt("search.unregister"),ut(t),ut(n),ut(i)},e.isSupported=o,e.closeSearch=function(){return new Promise((e=>{if(Ie(ae,_.content),!o())throw new Error("Not supported");e(bt("search.closeSearch"))}))}}(Xn||(Xn={})),function(e){function t(t){return new Promise((i=>{if(!n())throw V;i(Nt(e.SharingAPIMessages.shareWebContent,t))}))}function n(){return!(!Ie(ae)||!ae.supports.sharing)}e.SharingAPIMessages={shareWebContent:"sharing.shareWebContent"},e.shareWebContent=function(e,n){try{(function(e){if(!(e&&e.content&&e.content.length))throw{errorCode:O.INVALID_ARGUMENTS,message:"Shared content is missing"}})(e),function(e){let t;if(e.content.some((e=>!e.type)))throw t={errorCode:O.INVALID_ARGUMENTS,message:"Shared content type cannot be undefined"},t;if(e.content.some((t=>t.type!==e.content[0].type)))throw t={errorCode:O.INVALID_ARGUMENTS,message:"Shared content must be of the same type"},t}(e),function(e){let t;if("URL"!==e.content[0].type)throw t={errorCode:O.INVALID_ARGUMENTS,message:"Content type is unsupported"},t;if(e.content.some((e=>!e.url)))throw t={errorCode:O.INVALID_ARGUMENTS,message:"URLs are required for URL content types"},t}(e)}catch(e){return J((()=>Promise.reject(e)),n)}return Ie(ae,_.content,_.sidePanel,_.task,_.stage,_.meetingStage),J(t,n,e)},e.isSupported=n}(Kn||(Kn={})),function(e){let t;function n(){return!(!Ie(ae)||!ae.supports.stageView)}!function(e){e.modal="modal",e.popout="popout",e.popoutWithChat="popoutWithChat"}(t=e.StageViewOpenMode||(e.StageViewOpenMode={})),e.open=function(e){return new Promise((t=>{if(Ie(ae,_.content),!n())throw V;if(!e)throw new Error("[stageView.open] Stage view params cannot be null");t(Nt("stageView.open",e))}))},e.isSupported=n}(ei||(ei={}));var ni,ii,oi=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};!function(e){let t,n,i;!function(e){e[e.FrontOrRear=1]="FrontOrRear",e[e.FrontOnly=2]="FrontOnly",e[e.RearOnly=3]="RearOnly"}(t=e.CameraRestriction||(e.CameraRestriction={})),function(e){e[e.Camera=1]="Camera",e[e.Gallery=2]="Gallery"}(n=e.Source||(e.Source={})),e.hasPermission=function(){if(Ie(ae,_.content,_.task),!i.isSupported())throw V;return Nt("permissions.has",k.Media)},e.requestPermission=function(){if(Ie(ae,_.content,_.task),!i.isSupported())throw V;return Nt("permissions.request",k.Media)},function(e){function t(){return!!(Ie(ae)&&ae.supports.visualMedia&&ae.supports.visualMedia.image&&ae.supports.permissions)}function n(){if(!t())throw V}function i(e){if(!e||e.maxVisualMediaCount>10||e.maxVisualMediaCount<1)throw W}function o(e,t){if(t.length>e)throw G}e.captureImages=function(e){return oi(this,void 0,void 0,(function*(){Ie(ae,_.content,_.task),n(),i(e);const t=yield Nt("visualMedia.image.captureImages",e);return o(e.maxVisualMediaCount,t),t}))},e.retrieveImages=function(e){return oi(this,void 0,void 0,(function*(){Ie(ae,_.content,_.task),n(),i(e);const t=yield Nt("visualMedia.image.retrieveImages",e);return o(e.maxVisualMediaCount,t),t}))},e.isSupported=t}(i=e.image||(e.image={}))}(ni||(ni={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.webStorage)}e.isWebStorageClearedOnUserLogOut=function(){return Ie(ae),t()},e.isSupported=t}(ii||(ii={}));const ri=a.V_2;var ai,si;!function(e){let t;function n(){return!(!Ie(ae)||!ae.supports.call)}!function(e){e.Unknown="unknown",e.Audio="audio",e.Video="video",e.VideoBasedScreenSharing="videoBasedScreenSharing",e.Data="data"}(t=e.CallModalities||(e.CallModalities={})),e.startCall=function(e){const i=o(ri,s.Call_StartCall);return new Promise((o=>{var r;if(Ie(ae,_.content,_.task),!n())throw V;if(!ae.isLegacyTeams)return kt(i,"call.startCall",[e],o);o(St(i,"executeDeepLink",function(e,t,n){if(0===e.length)throw new Error("Must have at least one target when creating a call deep link");const i=`${rn}=`+e.map((e=>encodeURIComponent(e))).join(","),o=void 0===t?"":`&withVideo=${encodeURIComponent(t)}`,r=void 0===n?"":`&source=${encodeURIComponent(n)}`;return`${h}://${w}/l/call/0/0?${i}${o}${r}`}(e.targets,null===(r=e.requestedModalities)||void 0===r?void 0:r.includes(t.Video),e.source)).then((e=>{if(!e)throw new Error("The call was not properly started");return e})))}))},e.isSupported=n}(ai||(ai={})),function(e){e.Messages=Ze.Messages,e.FailedReason=Ze.FailedReason,e.ExpectedFailureReason=Ze.ExpectedFailureReason,e.notifyAppLoaded=function(){Ze.notifyAppLoaded()},e.notifySuccess=function(){Ze.notifySuccess()},e.notifyFailure=function(e){Ze.notifyFailure(e)},e.notifyExpectedFailure=function(e){Ze.notifyExpectedFailure(e)}}(si||(si={}));const li=t("thirdPartyCloudStorage");var ci;!function(e){let t=[],n={fileType:"",assembleAttachment:[]},i=!0,o=null;function r(e){if(o)if(e&&e.error)o([],e.error),o=null;else if(e&&e.fileChunk)try{i||0!==e.fileChunk.chunkSequence||(li("Last chunk is not received or 'endOfFile' value for previous chunk was not set to true"),i=!0,o([],{errorCode:O.INTERNAL_ERROR,message:"error occurred while receiving data"}),t=[],o=null);const r=pn(e.fileChunk,e.fileType);if(r?n.assembleAttachment.push(r):(li(`Received a null assemble attachment for when decoding chunk sequence ${e.fileChunk.chunkSequence}; not including the chunk in the assembled file.`),o?o([],{errorCode:O.INTERNAL_ERROR,message:"error occurred while receiving data"}):o=null,t=[],o=null,i=!0),i=e.fileChunk.endOfFile,e.fileChunk.endOfFile){const r=dn(n.assembleAttachment,n.fileType);if(r){const n=new File([r],e.fileName,{type:r.type});t.push(n)}e.isLastFile&&o&&(o(t,e.error),t=[],o=null,i=!0),n={fileType:"",assembleAttachment:[]}}}catch(e){o&&(o([],{errorCode:O.INTERNAL_ERROR,message:e}),t=[],o=null,i=!0)}else o([],{errorCode:O.INTERNAL_ERROR,message:"data received is null"}),t=[],o=null,i=!0}function a(){return!(!Ie(ae)||!ae.supports.thirdPartyCloudStorage)}e.getDragAndDropFiles=function(e,t){if(!t)throw new Error("[getDragAndDropFiles] Callback cannot be null");if(e&&""!==e){if(Ie(ae,_.content,_.task),!a())throw V;if(o)throw o=null,new Error("getDragAndDropFiles cannot be called twice");o=t,i=!0,Rt("thirdPartyCloudStorage.getDragAndDropFiles",[e],r)}else t([],{errorCode:O.INVALID_ARGUMENTS})},e.isSupported=a}(ci||(ci={}));const ui=a.V_1;function di(e,t){We(o(ui,s.PublicAPIs_Initialize),t).then((()=>{e&&e()}))}function pi(){Fn.enablePrintCapability()}function fi(){Fn.print()}function gi(e){Se(),kt(o(ui,s.PublicAPIs_GetContext),"getContext",(t=>{t.frameContext||(t.frameContext=M.frameContext),e(t)}))}function mi(e){qe(o(ui,s.PublicAPIs_RegisterOnThemeChangeHandlerHelper),e)}function hi(e){pt(o(ui,s.PublicAPIs_RegisterFullScreenHandler),"fullScreenChange",e,[])}function wi(e){pt(o(ui,s.PublicAPIs_RegisterAppButtonClickHandler),"appButtonClick",e,[_.content])}function Ci(e){pt(o(ui,s.PublicAPIs_RegisterAppButtonHoverEnterHandler),"appButtonHoverEnter",e,[_.content])}function yi(e){pt(o(ui,s.PublicAPIs_RegisterAppButtonHoverLeaveHandler),"appButtonHoverLeave",e,[_.content])}function vi(e){ot.backStack.registerBackButtonHandlerHelper(o(ui,s.PublicAPIs_RegisterBackButtonHandler),e)}function Mi(e){Fn.registerOnLoadHandlerHelper(e)}function Si(e){Fn.registerBeforeUnloadHandlerHelper(e)}function Ii(e){pt(o(ui,s.PublicAPIs_RegisterFocusEnterHandler),"focusEnter",e,[])}function Ti(e){pt(o(ui,s.PublicAPIs_RegisterChangeSettingsHandler),"changeSettings",e,[_.content])}function bi(e,t){Ie(ae),et(o(ui,s.PublicAPIs_GetTabInstances),t).then((t=>{e(t)}))}function Ei(e,t){Ie(ae),tt(o(ui,s.PublicAPIs_GetMruTabInstances),t).then((t=>{e(t)}))}function Ai(e){nt(o(ui,s.PublicAPIs_ShareDeepLink),{subPageId:e.subEntityId,subPageLabel:e.subEntityLabel,subPageWebUrl:e.subEntityWebUrl})}function Ni(e,t){Ie(ae,_.content,_.sidePanel,_.settings,_.task,_.stage,_.meetingStage);const n=null!=t?t:q();Qe(o(ui,s.PublicAPIs_ExecuteDeepLink),e).then((()=>{n(!0)})).catch((e=>{n(!1,e.message)}))}function Pi(e){it(o(ui,s.PublicAPIs_SetFrameContext),e)}function Di(e,t,n){We(o(ui,s.PublicAPIs_Initialize),n).then((()=>t&&t())),it(o(ui,s.PublicAPIs_SetFrameContext),e)}const Oi=a.V_1;function ki(e){Ke(o(Oi,s.Navigation_ReturnFocus),e)}function Ri(e,t){Ie(ae);const n=null!=t?t:q();Xe(o(Oi,s.Navigation_NavigateToTab),e).then((()=>{n(!0)})).catch((e=>{n(!1,e.message)}))}function Fi(e,t){Ie(ae,_.content,_.sidePanel,_.settings,_.remove,_.task,_.stage,_.meetingStage);const n=null!=t?t:q();Je(o(Oi,s.Navigation_NavigateCrossDomain),e).then((()=>{n(!0)})).catch((e=>{n(!1,e.message)}))}function Li(e){Ie(ae);const t=null!=e?e:q();$e(o(Oi,s.Navigation_NavigateBack)).then((()=>{t(!0)})).catch((e=>{t(!1,e.message)}))}var _i;!function(e){e.setValidityState=function(e){ot.config.setValidityState(e)},e.getSettings=function(e){Ie(ae,_.content,_.settings,_.remove,_.sidePanel),ot.getConfig().then((t=>{e(t)}))},e.setSettings=function(e,t){Ie(ae,_.content,_.settings,_.sidePanel);const n=null!=t?t:q();ot.config.setConfig(e).then((()=>{n(!0)})).catch((e=>{n(!1,e.message)}))},e.registerOnSaveHandler=function(e){ot.config.registerOnSaveHandlerHelper(e)},e.registerOnRemoveHandler=function(e){ot.config.registerOnRemoveHandlerHelper(e)}}(_i||(_i={}));const xi=a.V_1;var ji,Ui;!function(e){function t(e){return e.height=e.height?e.height:H.Small,e.width=e.width?e.width:H.Small,e}e.startTask=function(e,t){const n=o(xi,s.Tasks_StartTask),i=t?e=>{var n,i;return t(null!==(n=e.err)&&void 0!==n?n:"",null!==(i=e.result)&&void 0!==i?i:"")}:void 0;return void 0===e.card&&void 0===e.url||e.card?(Ie(ae,_.content,_.sidePanel,_.meetingStage),kt(n,"tasks.startTask",[e],t)):void 0!==e.completionBotId?xe(n,function(e){if(void 0===e.url||void 0===e.completionBotId)throw new Error(`Both url ${e.url} and completionBotId ${e.completionBotId} are required for bot url dialog. At least one is undefined.`);return{url:e.url,size:{height:e.height?e.height:H.Small,width:e.width?e.width:H.Small},title:e.title,fallbackUrl:e.fallbackUrl,completionBotId:e.completionBotId}}(e),i):_e(n,function(e){if(void 0===e.url)throw new Error("url property of taskInfo object can't be undefined");return{url:e.url,size:{height:e.height?e.height:H.Small,width:e.width?e.width:H.Small},title:e.title,fallbackUrl:e.fallbackUrl}}(e),i),new Tn},e.updateTask=function(e){e=t(e);const{width:n,height:i}=e,r=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(e);o<i.length;o++)t.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(e,i[o])&&(n[i[o]]=e[i[o]])}return n}(e,["width","height"]);if(Object.keys(r).length)throw new Error("resize requires a TaskInfo argument containing only width and height");Le(o(xi,s.Tasks_UpdateTask),e)},e.submitTask=function(e,t){je(o(xi,s.Tasks_SubmitTask),e,t)},e.getDefaultSizeIfNotProvided=t}(ji||(ji={})),function(e){let t,n;!function(e){e.guest="Guest",e.attendee="Attendee",e.presenter="Presenter",e.organizer="Organizer"}(t=e.UserMeetingRole||(e.UserMeetingRole={})),function(e){e.added="Added",e.alreadyExists="AlreadyExists",e.conflict="Conflict",e.notFound="NotFound"}(n=e.ContainerState||(e.ContainerState={})),e.isSupported=function(){return!(!Ie(ae,_.meetingStage,_.sidePanel)||!ae.supports.interactive)}}(Ui||(Ui={}));class zi{getFluidTenantInfo(){return Hi(),new Promise((e=>{e(Nt("interactive.getFluidTenantInfo"))}))}getFluidToken(e){return Hi(),new Promise((t=>{t(Nt("interactive.getFluidToken",e))}))}getFluidContainerId(){return Hi(),new Promise((e=>{e(Nt("interactive.getFluidContainerId"))}))}setFluidContainerId(e){return Hi(),new Promise((t=>{t(Nt("interactive.setFluidContainerId",e))}))}getNtpTime(){return Hi(),new Promise((e=>{e(Nt("interactive.getNtpTime"))}))}registerClientId(e){return Hi(),new Promise((t=>{t(Nt("interactive.registerClientId",e))}))}getClientRoles(e){return Hi(),new Promise((t=>{t(Nt("interactive.getClientRoles",e))}))}getClientInfo(e){return Hi(),new Promise((t=>{t(Nt("interactive.getClientInfo",e))}))}static create(){return Hi(),new zi}}function Hi(){if(!Ui.isSupported())throw new Error("LiveShareHost Not supported")}const Vi=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function Bi(e){try{return e.cartItems=Wi(e.cartItems),e}catch(e){throw new Error("Error deserializing cart")}}function Wi(e){return e.map((e=>{if(e.imageURL){const t=new URL(e.imageURL);e.imageURL=t}return e.accessories&&(e.accessories=Wi(e.accessories)),e}))}const Gi=e=>{try{return e.map((e=>{const{imageURL:t,accessories:n}=e,i=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(e);o<i.length;o++)t.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(e,i[o])&&(n[i[o]]=e[i[o]])}return n}(e,["imageURL","accessories"]),o=Object.assign({},i);return t&&(o.imageURL=t.href),n&&(o.accessories=Gi(n)),o}))}catch(e){throw new Error("Error serializing cart items")}};function qi(e){if(null!=e){if(!Array.isArray(e)||0===e.length)throw new Error("CartItem.accessories must be a non-empty array");for(const t of e){if(t.accessories)throw new Error("Item in CartItem.accessories cannot have accessories");Qi(t)}}}function Qi(e){if(!e.id)throw new Error("cartItem.id must not be empty");if(!e.name)throw new Error("cartItem.name must not be empty");(function(e){if("number"!=typeof e||e<0)throw new Error(`price ${e} must be a number not less than 0`);if(parseFloat(e.toFixed(3))!==e)throw new Error(`price ${e} must have at most 3 decimal places`)})(e.price),function(e){if("number"!=typeof e||e<=0||parseInt(e.toString())!==e)throw new Error(`quantity ${e} must be an integer greater than 0`)}(e.quantity)}function Zi(e){if(null!=e){if(!e)throw new Error("id must not be empty");if(!1===function(e){return"string"==typeof e&&Vi.test(e)}(e))throw new Error("id must be a valid UUID")}}const Yi=a.V_2;var Ji,$i,Xi,Ki,eo,to,no;!function(e){let t,n;function i(){return!(!Ie(ae)||!ae.supports.marketplace)}e.cartVersion={majorVersion:1,minorVersion:1},function(e){e.TACAdminUser="TACAdminUser",e.TeamsAdminUser="TeamsAdminUser",e.TeamsEndUser="TeamsEndUser"}(t=e.Intent||(e.Intent={})),function(e){e.Open="Open",e.Processing="Processing",e.Processed="Processed",e.Closed="Closed",e.Error="Error"}(n=e.CartStatus||(e.CartStatus={})),e.getCart=function(){if(Ie(ae,_.content,_.task),!i())throw V;return At(o(Yi,s.Marketplace_GetCart),"marketplace.getCart",e.cartVersion).then(Bi)},e.addOrUpdateCartItems=function(t){if(Ie(ae,_.content,_.task),!i())throw V;if(!t)throw new Error("addOrUpdateCartItemsParams must be provided");return Zi(null==t?void 0:t.cartId),function(e){if(!Array.isArray(e)||0===e.length)throw new Error("cartItems must be a non-empty array");for(const t of e)Qi(t),qi(t.accessories)}(null==t?void 0:t.cartItems),At(o(Yi,s.Marketplace_AddOrUpdateCartItems),"marketplace.addOrUpdateCartItems",Object.assign(Object.assign({},t),{cartItems:Gi(t.cartItems),cartVersion:e.cartVersion})).then(Bi)},e.removeCartItems=function(t){if(Ie(ae,_.content,_.task),!i())throw V;if(!t)throw new Error("removeCartItemsParams must be provided");if(Zi(null==t?void 0:t.cartId),!Array.isArray(null==t?void 0:t.cartItemIds)||0===(null==t?void 0:t.cartItemIds.length))throw new Error("cartItemIds must be a non-empty array");return At(o(Yi,s.Marketplace_RemoveCardItems),"marketplace.removeCartItems",Object.assign(Object.assign({},t),{cartVersion:e.cartVersion})).then(Bi)},e.updateCartStatus=function(t){if(Ie(ae,_.content,_.task),!i())throw V;if(!t)throw new Error("updateCartStatusParams must be provided");return Zi(null==t?void 0:t.cartId),function(e){if(!Object.values(Ji.CartStatus).includes(e))throw new Error(`cartStatus ${e} is not valid`)}(null==t?void 0:t.cartStatus),At(o(Yi,s.Marketplace_UpdateCartStatus),"marketplace.updateCartStatus",Object.assign(Object.assign({},t),{cartVersion:e.cartVersion})).then(Bi)},e.isSupported=i}(Ji||(Ji={})),function(e){const t="Action.Execute";let n,i,o;function r(e){if(e.requestType===n.ActionExecuteInvokeRequest){const n=e;if(n.type!==t)throw{errorCode:o.INTERNAL_ERROR,message:`Invalid action type ${n.type}. Action type must be "${t}"`}}else if(e.requestType===n.QueryMessageExtensionRequest){if(e.commandId.length>64)throw new Error("originalRequestInfo.commandId exceeds the maximum size of 64 characters");if(e.parameters.length>5)throw new Error("originalRequestInfo.parameters exceeds the maximum size of 5");for(const t of e.parameters){if(t.name.length>64)throw new Error("originalRequestInfo.parameters.name exceeds the maximum size of 64 characters");if(t.value.length>512)throw new Error("originalRequestInfo.parameters.value exceeds the maximum size of 512 characters")}}}function a(){return!(!Ie(ae)||!ae.supports.externalAppAuthentication)}!function(e){e.ActionExecuteInvokeRequest="ActionExecuteInvokeRequest",e.QueryMessageExtensionRequest="QueryMessageExtensionRequest"}(n=e.OriginalRequestType||(e.OriginalRequestType={})),function(e){e.ActionExecuteInvokeResponse="ActionExecuteInvokeResponse",e.QueryMessageExtensionResponse="QueryMessageExtensionResponse"}(i=e.InvokeResponseType||(e.InvokeResponseType={})),function(e){e.INTERNAL_ERROR="INTERNAL_ERROR"}(o=e.InvokeErrorCode||(e.InvokeErrorCode={})),e.authenticateAndResendRequest=function(e,t,n){if(Ie(ae,_.content),!a())throw V;return ne(e),r(n),Dt("externalAppAuthentication.authenticateAndResendRequest",[e,n,t.url.href,t.width,t.height,t.isExternal]).then((([e,t])=>{if(e&&null!=t.responseType)return t;throw t}))},e.authenticateWithSSO=function(e,t){if(Ie(ae,_.content),!a())throw V;return ne(e),Dt("externalAppAuthentication.authenticateWithSSO",[e,t.claims,t.silent]).then((([e,t])=>{if(!e)throw t}))},e.authenticateWithSSOAndResendRequest=function(e,t,n){if(Ie(ae,_.content),!a())throw V;return ne(e),r(n),Dt("externalAppAuthentication.authenticateWithSSOAndResendRequest",[e,n,t.claims,t.silent]).then((([e,t])=>{if(e&&null!=t.responseType)return t;throw t}))},e.isSupported=a}($i||($i={})),function(e){let t,n,i;function o(){return!(!Ie(ae)||!ae.supports.externalAppCardActions)}!function(e){e.DeepLinkDialog="DeepLinkDialog",e.DeepLinkOther="DeepLinkOther",e.DeepLinkStageView="DeepLinkStageView",e.GenericUrl="GenericUrl"}(t=e.ActionOpenUrlType||(e.ActionOpenUrlType={})),function(e){e.INTERNAL_ERROR="INTERNAL_ERROR",e.INVALID_LINK="INVALID_LINK",e.NOT_SUPPORTED="NOT_SUPPORTED"}(n=e.ActionOpenUrlErrorCode||(e.ActionOpenUrlErrorCode={})),function(e){e.INTERNAL_ERROR="INTERNAL_ERROR"}(i=e.ActionSubmitErrorCode||(e.ActionSubmitErrorCode={})),e.processActionSubmit=function(e,t){if(Ie(ae,_.content),!o())throw V;return ne(e),Dt("externalAppCardActions.processActionSubmit",[e,t]).then((([e,t])=>{if(!e)throw t}))},e.processActionOpenUrl=function(e,t){if(Ie(ae,_.content),!o())throw V;return ne(e),Dt("externalAppCardActions.processActionOpenUrl",[e,t.href]).then((([e,t])=>{if(e)throw e;return t}))},e.isSupported=o}(Xi||(Xi={})),function(e){let t,n,i,o,r,a;function s(e,t){return{errorCode:e,message:t}}!function(e){e.Dropbox="DROPBOX",e.Box="BOX",e.Sharefile="SHAREFILE",e.GoogleDrive="GOOGLEDRIVE",e.Egnyte="EGNYTE",e.SharePoint="SharePoint"}(t=e.CloudStorageProvider||(e.CloudStorageProvider={})),function(e){e[e.Sharepoint=0]="Sharepoint",e[e.WopiIntegration=1]="WopiIntegration",e[e.Google=2]="Google",e[e.OneDrive=3]="OneDrive",e[e.Recent=4]="Recent",e[e.Aggregate=5]="Aggregate",e[e.FileSystem=6]="FileSystem",e[e.Search=7]="Search",e[e.AllFiles=8]="AllFiles",e[e.SharedWithMe=9]="SharedWithMe"}(n=e.CloudStorageProviderType||(e.CloudStorageProviderType={})),function(e){e.ClassMaterials="classMaterials"}(i=e.SpecialDocumentLibraryType||(e.SpecialDocumentLibraryType={})),function(e){e.Readonly="readonly"}(o=e.DocumentLibraryAccessType||(e.DocumentLibraryAccessType={})),function(e){e.Downloaded="Downloaded",e.Downloading="Downloading",e.Failed="Failed"}(r=e.FileDownloadStatus||(e.FileDownloadStatus={})),function(e){e.Download="DOWNLOAD",e.Upload="UPLOAD",e.Delete="DELETE"}(a=e.CloudStorageProviderFileAction||(e.CloudStorageProviderFileAction={})),e.getCloudStorageFolders=function(e,t){if(Ie(ae,_.content),!e||0===e.length)throw new Error("[files.getCloudStorageFolders] channelId name cannot be null or empty");if(!t)throw new Error("[files.getCloudStorageFolders] Callback cannot be null");Rt("files.getCloudStorageFolders",[e],t)},e.addCloudStorageFolder=function(e,t){if(Ie(ae,_.content),!e||0===e.length)throw new Error("[files.addCloudStorageFolder] channelId name cannot be null or empty");if(!t)throw new Error("[files.addCloudStorageFolder] Callback cannot be null");Rt("files.addCloudStorageFolder",[e],t)},e.deleteCloudStorageFolder=function(e,t,n){if(Ie(ae,_.content),!e)throw new Error("[files.deleteCloudStorageFolder] channelId name cannot be null or empty");if(!t)throw new Error("[files.deleteCloudStorageFolder] folderToDelete cannot be null or empty");if(!n)throw new Error("[files.deleteCloudStorageFolder] Callback cannot be null");Rt("files.deleteCloudStorageFolder",[e,t],n)},e.getCloudStorageFolderContents=function(e,t,n){if(Ie(ae,_.content),!e||!t)throw new Error("[files.getCloudStorageFolderContents] folder/providerCode name cannot be null or empty");if(!n)throw new Error("[files.getCloudStorageFolderContents] Callback cannot be null");if("isSubdirectory"in e&&!e.isSubdirectory)throw new Error("[files.getCloudStorageFolderContents] provided folder is not a subDirectory");Rt("files.getCloudStorageFolderContents",[e,t],n)},e.openCloudStorageFile=function(e,t,n){if(Ie(ae,_.content),!e||!t)throw new Error("[files.openCloudStorageFile] file/providerCode cannot be null or empty");if(e.isSubdirectory)throw new Error("[files.openCloudStorageFile] provided file is a subDirectory");Rt("files.openCloudStorageFile",[e,t,n])},e.getExternalProviders=function(e=!1,t){if(Ie(ae,_.content),!t)throw new Error("[files.getExternalProviders] Callback cannot be null");Rt("files.getExternalProviders",[e],t)},e.copyMoveFiles=function(e,t,n,i,o=!1,r){if(Ie(ae,_.content),!e||0===e.length)throw new Error("[files.copyMoveFiles] selectedFiles cannot be null or empty");if(!t)throw new Error("[files.copyMoveFiles] providerCode cannot be null or empty");if(!n)throw new Error("[files.copyMoveFiles] destinationFolder cannot be null or empty");if(!i)throw new Error("[files.copyMoveFiles] destinationProviderCode cannot be null or empty");if(!r)throw new Error("[files.copyMoveFiles] callback cannot be null");Rt("files.copyMoveFiles",[e,t,n,i,o],r)},e.getFileDownloads=function(e){if(Ie(ae,_.content),!e)throw new Error("[files.getFileDownloads] Callback cannot be null");Rt("files.getFileDownloads",[],e)},e.openDownloadFolder=function(e=void 0,t){if(Ie(ae,_.content),!t)throw new Error("[files.openDownloadFolder] Callback cannot be null");Rt("files.openDownloadFolder",[e],t)},e.addCloudStorageProvider=function(e){if(Ie(ae,_.content),!e)throw s(O.INVALID_ARGUMENTS,"[files.addCloudStorageProvider] callback cannot be null");Rt("files.addCloudStorageProvider",[],e)},e.removeCloudStorageProvider=function(e,t){if(Ie(ae,_.content),!t)throw s(O.INVALID_ARGUMENTS,"[files.removeCloudStorageProvider] callback cannot be null");if(!e||!e.content)throw s(O.INVALID_ARGUMENTS,"[files.removeCloudStorageProvider] 3P cloud storage provider request content is missing");Rt("files.removeCloudStorageProvider",[e],t)},e.addCloudStorageProviderFile=function(e,t){if(Ie(ae,_.content),!t)throw s(O.INVALID_ARGUMENTS,"[files.addCloudStorageProviderFile] callback cannot be null");if(!e||!e.content)throw s(O.INVALID_ARGUMENTS,"[files.addCloudStorageProviderFile] 3P cloud storage provider request content is missing");Rt("files.addCloudStorageProviderFile",[e],t)},e.renameCloudStorageProviderFile=function(e,t){if(Ie(ae,_.content),!t)throw s(O.INVALID_ARGUMENTS,"[files.renameCloudStorageProviderFile] callback cannot be null");if(!e||!e.content)throw s(O.INVALID_ARGUMENTS,"[files.renameCloudStorageProviderFile] 3P cloud storage provider request content is missing");Rt("files.renameCloudStorageProviderFile",[e],t)},e.deleteCloudStorageProviderFile=function(e,t){if(Ie(ae,_.content),!t)throw s(O.INVALID_ARGUMENTS,"[files.deleteCloudStorageProviderFile] callback cannot be null");if(!(e&&e.content&&e.content.itemList&&e.content.itemList.length>0))throw s(O.INVALID_ARGUMENTS,"[files.deleteCloudStorageProviderFile] 3P cloud storage provider request content details are missing");Rt("files.deleteCloudStorageProviderFile",[e],t)},e.downloadCloudStorageProviderFile=function(e,t){if(Ie(ae,_.content),!t)throw s(O.INVALID_ARGUMENTS,"[files.downloadCloudStorageProviderFile] callback cannot be null");if(!(e&&e.content&&e.content.itemList&&e.content.itemList.length>0))throw s(O.INVALID_ARGUMENTS,"[files.downloadCloudStorageProviderFile] 3P cloud storage provider request content details are missing");Rt("files.downloadCloudStorageProviderFile",[e],t)},e.uploadCloudStorageProviderFile=function(e,t){if(Ie(ae,_.content),!t)throw s(O.INVALID_ARGUMENTS,"[files.uploadCloudStorageProviderFile] callback cannot be null");if(!(e&&e.content&&e.content.itemList&&e.content.itemList.length>0))throw s(O.INVALID_ARGUMENTS,"[files.uploadCloudStorageProviderFile] 3P cloud storage provider request content details are missing");if(!e.content.destinationFolder)throw s(O.INVALID_ARGUMENTS,"[files.uploadCloudStorageProviderFile] Invalid destination folder details");Rt("files.uploadCloudStorageProviderFile",[e],t)},e.registerCloudStorageProviderListChangeHandler=function(e){if(Ie(ae),!e)throw new Error("[registerCloudStorageProviderListChangeHandler] Handler cannot be null");ct("files.cloudStorageProviderListChange",e)},e.registerCloudStorageProviderContentChangeHandler=function(e){if(Ie(ae),!e)throw new Error("[registerCloudStorageProviderContentChangeHandler] Handler cannot be null");ct("files.cloudStorageProviderContentChange",e)}}(Ki||(Ki={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.meetingRoom)}e.getPairedMeetingRoomInfo=function(){return new Promise((e=>{if(Ie(ae),!t())throw V;e(Nt("meetingRoom.getPairedMeetingRoomInfo"))}))},e.sendCommandToPairedMeetingRoom=function(e){return new Promise((n=>{if(!e||0==e.length)throw new Error("[meetingRoom.sendCommandToPairedMeetingRoom] Command name cannot be null or empty");if(Ie(ae),!t())throw V;n(Nt("meetingRoom.sendCommandToPairedMeetingRoom",e))}))},e.registerMeetingRoomCapabilitiesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomCapabilitiesUpdateHandler] Handler cannot be null");if(Ie(ae),!t())throw V;ct("meetingRoom.meetingRoomCapabilitiesUpdate",(t=>{Ie(ae),e(t)}))},e.registerMeetingRoomStatesUpdateHandler=function(e){if(!e)throw new Error("[meetingRoom.registerMeetingRoomStatesUpdateHandler] Handler cannot be null");if(Ie(ae),!t())throw V;ct("meetingRoom.meetingRoomStatesUpdate",(t=>{Ie(ae),e(t)}))},e.isSupported=t}(eo||(eo={})),function(e){function t(){return!(!Ie(ae)||!ae.supports.notifications)}e.showNotification=function(e){if(Ie(ae,_.content),!t())throw V;Rt("notifications.showNotification",[e])},e.isSupported=t}(to||(to={})),function(e){let t,n,i;function o(){return!(!Ie(ae)||!ae.supports.remoteCamera)}!function(e){e.Reset="Reset",e.ZoomIn="ZoomIn",e.ZoomOut="ZoomOut",e.PanLeft="PanLeft",e.PanRight="PanRight",e.TiltUp="TiltUp",e.TiltDown="TiltDown"}(t=e.ControlCommand||(e.ControlCommand={})),function(e){e[e.CommandResetError=0]="CommandResetError",e[e.CommandZoomInError=1]="CommandZoomInError",e[e.CommandZoomOutError=2]="CommandZoomOutError",e[e.CommandPanLeftError=3]="CommandPanLeftError",e[e.CommandPanRightError=4]="CommandPanRightError",e[e.CommandTiltUpError=5]="CommandTiltUpError",e[e.CommandTiltDownError=6]="CommandTiltDownError",e[e.SendDataError=7]="SendDataError"}(n=e.ErrorReason||(e.ErrorReason={})),function(e){e[e.None=0]="None",e[e.ControlDenied=1]="ControlDenied",e[e.ControlNoResponse=2]="ControlNoResponse",e[e.ControlBusy=3]="ControlBusy",e[e.AckTimeout=4]="AckTimeout",e[e.ControlTerminated=5]="ControlTerminated",e[e.ControllerTerminated=6]="ControllerTerminated",e[e.DataChannelError=7]="DataChannelError",e[e.ControllerCancelled=8]="ControllerCancelled",e[e.ControlDisabled=9]="ControlDisabled",e[e.ControlTerminatedToAllowOtherController=10]="ControlTerminatedToAllowOtherController"}(i=e.SessionTerminatedReason||(e.SessionTerminatedReason={})),e.getCapableParticipants=function(e){if(!e)throw new Error("[remoteCamera.getCapableParticipants] Callback cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;Rt("remoteCamera.getCapableParticipants",e)},e.requestControl=function(e,t){if(!e)throw new Error("[remoteCamera.requestControl] Participant cannot be null");if(!t)throw new Error("[remoteCamera.requestControl] Callback cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;Rt("remoteCamera.requestControl",[e],t)},e.sendControlCommand=function(e,t){if(!e)throw new Error("[remoteCamera.sendControlCommand] ControlCommand cannot be null");if(!t)throw new Error("[remoteCamera.sendControlCommand] Callback cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;Rt("remoteCamera.sendControlCommand",[e],t)},e.terminateSession=function(e){if(!e)throw new Error("[remoteCamera.terminateSession] Callback cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;Rt("remoteCamera.terminateSession",e)},e.registerOnCapableParticipantsChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnCapableParticipantsChangeHandler] Handler cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;ct("remoteCamera.capableParticipantsChange",e)},e.registerOnErrorHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnErrorHandler] Handler cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;ct("remoteCamera.handlerError",e)},e.registerOnDeviceStateChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnDeviceStateChangeHandler] Handler cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;ct("remoteCamera.deviceStateChange",e)},e.registerOnSessionStatusChangeHandler=function(e){if(!e)throw new Error("[remoteCamera.registerOnSessionStatusChangeHandler] Handler cannot be null");if(Ie(ae,_.sidePanel),!o())throw V;ct("remoteCamera.sessionStatusChange",e)},e.isSupported=o}(no||(no={}));const io=a.V_1;var oo,ro;!function(e){function t(){return!(!Ie(ae)||!ae.supports.appEntity)}e.selectAppEntity=function(e,n,i,r){if(Ie(ae,_.content),!t())throw V;if(!e||0==e.length)throw new Error("[appEntity.selectAppEntity] threadId name cannot be null or empty");if(!r)throw new Error("[appEntity.selectAppEntity] Callback cannot be null");kt(o(io,s.AppEntity_SelectAppEntity),"appEntity.selectAppEntity",[e,n,i],r)},e.isSupported=t}(oo||(oo={})),function(e){let t,n;function i(){return!(!Ie(ae)||!ae.supports.teams)}!function(e){e[e.Regular=0]="Regular",e[e.Private=1]="Private",e[e.Shared=2]="Shared"}(t=e.ChannelType||(e.ChannelType={})),e.getTeamChannels=function(e,t){if(Ie(ae,_.content),!i())throw V;if(!e)throw new Error("[teams.getTeamChannels] groupId cannot be null or empty");if(!t)throw new Error("[teams.getTeamChannels] Callback cannot be null");Rt("teams.getTeamChannels",[e],t)},e.refreshSiteUrl=function(e,t){if(Ie(ae),!i())throw V;if(!e)throw new Error("[teams.refreshSiteUrl] threadId cannot be null or empty");if(!t)throw new Error("[teams.refreshSiteUrl] Callback cannot be null");Rt("teams.refreshSiteUrl",[e],t)},e.isSupported=i,function(e){let t;function n(){return!(!Ie(ae)||!ae.supports.teams||!ae.supports.teams.fullTrust)}!function(e){function t(){return!!(Ie(ae)&&ae.supports.teams&&ae.supports.teams.fullTrust&&ae.supports.teams.fullTrust.joinedTeams)}e.getUserJoinedTeams=function(e){return new Promise((n=>{if(Ie(ae),!t())throw V;if((M.hostClientType===F.android||M.hostClientType===F.teamsRoomsAndroid||M.hostClientType===F.teamsPhones||M.hostClientType===F.teamsDisplays)&&!Te("2.0.1")){const e={errorCode:O.OLD_PLATFORM};throw new Error(JSON.stringify(e))}n(It("getUserJoinedTeams",e))}))},e.isSupported=t}(t=e.joinedTeams||(e.joinedTeams={})),e.getConfigSetting=function(e){return new Promise((t=>{if(Ie(ae),!n())throw V;t(It("getConfigSetting",e))}))},e.isSupported=n}(n=e.fullTrust||(e.fullTrust={}))}(ro||(ro={}));var ao,so=function(e,t,n,i){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function a(e){try{l(i.next(e))}catch(e){r(e)}}function s(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):o(e.value).then(a,s)}l((i=i.apply(e,t||[])).next())}))};!function(e){e.frameProcessingTimeoutInMs=2e3;const t=ee()?void 0:new Jn(Rt);let n;function i(){const t=setTimeout((()=>{a(`Frame not processed in ${e.frameProcessingTimeoutInMs}ms`,n.Warn)}),e.frameProcessingTimeoutInMs);return function(){clearTimeout(t)}}function o(e,t){return n=>so(this,void 0,void 0,(function*(){const o=n.videoFrame;t.reportStartFrameProcessing(o.codedWidth,o.codedHeight);const r=i(),a=yield e(n);return r(),t.reportFrameProcessed(),a}))}function r(){return Ie(ae),$n.isSupported()}function a(e,t=n.Warn){Rt("video.notifyError",[e,t])}!function(e){e.Fatal="fatal",e.Warn="warn"}(n=e.ErrorLevel||(e.ErrorLevel={})),e.registerForVideoFrame=function(e){var n,s;if(!r())throw V;if(!e.videoFrameHandler||!e.videoBufferHandler)throw new Error("Both videoFrameHandler and videoBufferHandler must be provided");if(Ie(ae,_.sidePanel)){if(ct("video.setFrameProcessTimeLimit",(e=>null==t?void 0:t.setFrameProcessTimeLimit(e)),!1),null===(n=ae.supports.video)||void 0===n?void 0:n.mediaStream)ct("video.startVideoExtensibilityVideoStream",(n=>so(this,void 0,void 0,(function*(){const{streamId:i,metadataInTexture:r}=n,s=t?o(e.videoFrameHandler,t):e.videoFrameHandler;r?yield function(e,t,n,i){var o,r;return jn(this,void 0,void 0,(function*(){const a=Hn();!ee()&&(null===(r=null===(o=window.chrome)||void 0===o?void 0:o.webview)||void 0===r||r.registerTextureStream(e,a)),Vn(yield zn(e,n,i),new qn(n,t),a.writable)}))}(i,s,a,t):yield Un(i,s,a,t)}))),!1),Rt("video.mediaStream.registerForVideoFrame",[e.config]);else{if(!(null===(s=ae.supports.video)||void 0===s?void 0:s.sharedFrame))throw V;ct("video.newVideoFrame",(n=>{if(n){null==t||t.reportStartFrameProcessing(n.width,n.height);const o=i(),r=n.timestamp;e.videoBufferHandler(function(e){return e.videoFrameBuffer=e.videoFrameBuffer||e.data,delete e.data,e}(n),(()=>{o(),null==t||t.reportFrameProcessed(),function(e){Rt("video.videoFrameProcessed",[e])}(r)}),a)}}),!1),Rt("video.registerForVideoFrame",[e.config])}null==t||t.startMonitorSlowFrameProcessing()}},e.notifySelectedVideoEffectChanged=function(e,t,n){if(Ie(ae,_.sidePanel),!r())throw V;Rt("video.videoEffectChanged",[e,t,n])},e.registerForVideoEffect=function(e){if(Ie(ae,_.sidePanel),!r())throw V;ct("video.effectParameterChange",Qn(e,t),!1),Rt("video.registerForVideoEffect")},e.updatePersonalizedEffects=function(e){if(Ie(ae,_.sidePanel),!$n.isSupported())throw V;Rt("video.personalizedEffectsChanged",[e])},e.isSupported=r,e.notifyFatalError=function(e){if(Ie(ae),!$n.isSupported())throw V;a(e,n.Fatal)}}(ao||(ao={}))})(),i})(),e.exports=t()},178:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initialize=void 0;const i=n(960),o=n(461),r=n(974);t.initialize=()=>{window.location.pathname.includes("navigation")?o.initializeNavigation():(i.initializeDCP(),r.printLog("init","initializeDCP"))}},960:function(e,t,n){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n),Object.defineProperty(e,i,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&i(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.initializeDCP=void 0;const a=r(n(303)),s=n(974);document.getElementById("share").onclick=()=>{console.log("shareToteams","share clicked"),a.sharing.shareWebContent({content:[{type:"URL",url:"https://www.youtube.com/watch?v=971YIvosuUk&t=7s",message:"Youtube URL",preview:!1}]})};var l=document.getElementById("the-canvas");if(console.log("canvas :- "+JSON.stringify(l)),null!=l)var c=null,u=1,d=!1,p=null,f=.8,g=l.getContext("2d");function m(e){document.querySelector("#pdfViewer").hidden=e}t.initializeDCP=()=>{const e="DCP";R("initializeDCP");const t={sources:[a.media.Source.Camera,a.media.Source.Gallery],startMode:a.media.CameraStartMode.Photo,ink:!0,cameraSwitcher:!0,textSticker:!0,enableFilter:!0,maxDuration:30},n={mediaType:a.media.MediaType.VideoAndImage,maxMediaCount:6,videoAndImageProps:t};let i={onRecordingStarted(){console.log("onRecordingStarted Callback Invoked"),R("onRecordingStarted Callback Invoked"),P.style.display="block"}};const o={maxDuration:30,isFullScreenMode:!1,isStopButtonVisible:!1,videoController:new a.media.VideoController(i)},r={mediaType:a.media.MediaType.Video,maxMediaCount:1,videoProps:o},h={sources:[a.media.Source.Camera,a.media.Source.Gallery],startMode:a.media.CameraStartMode.Photo,cameraSwitcher:!0,maxDuration:30},w={mediaType:a.media.MediaType.Video,maxMediaCount:6,videoProps:h},C={sources:[a.media.Source.Camera,a.media.Source.Gallery],startMode:a.media.CameraStartMode.Photo,ink:!0,cameraSwitcher:!0,textSticker:!0,enableFilter:!0},y={mediaType:a.media.MediaType.Image,maxMediaCount:6,imageProps:C},v={mediaType:a.media.MediaType.Audio,maxMediaCount:1,audioProps:{maxDuration:4}},M={sources:[a.media.Source.Camera,a.media.Source.Gallery],startMode:a.media.CameraStartMode.Photo,imageOutputFormats:[a.media.ImageOutputFormats.PDF],ink:!0,cameraSwitcher:!0,textSticker:!0,enableFilter:!0},S={mediaType:a.media.MediaType.Image,maxMediaCount:6,imageProps:M},I={id:"stop",title:"STOP",icon:null,viewData:null,enabled:!0,selected:!1};a.initialize();const T=document.querySelector("#apiType"),b=document.querySelector("#mediaType"),E=document.querySelector("#start"),A=document.querySelector("#inputTextArea"),N=document.querySelector("#blobs"),P=document.querySelector("#stopMedia");function D(){document.querySelector("#logs").innerText="",N.innerText=""}function O(e,t,n,i,o){var r,a=document.createElement("div"),s=document.createElement("p");if(s.innerText=e,s.style.overflow="auto",s.style.paddingLeft="10px",s.style.paddingRight="10px",a.appendChild(s),t.includes("video")){var l=document.createElement("video");l.controls=!0,l.preload="auto",i&&(l.poster=i),r=l}else if(t.includes("audio")){var d=document.createElement("audio");d.controls=!0,r=d,R("audio recieved")}else t.includes("application/pdf")?function(e){const t=document.querySelector("#prev"),n=document.querySelector("#next");t.onclick=()=>{u<=1||L(--u)},n.onclick=()=>{u>=c.numPages||L(++u)};var i=window["pdfjs-dist/build/pdf"];i.GlobalWorkerOptions.workerSrc="//mozilla.github.io/pdf.js/build/pdf.worker.js",i.getDocument(e).promise.then((function(e){m(!1),c=e,F(u)}))}(n):r=document.createElement("img");r.src=n,r.style.width="300px",r.style.height="400px",a.appendChild(r),a.className="blob",N.appendChild(a)}function k(e){return e.includes("video")?"image":e}function R(t){s.printLog(e,t)}function F(e){d=!0,c.getPage(e).then((function(e){var t=e.getViewport({scale:f});l.height=t.height,l.width=t.width;var n={canvasContext:g,viewport:t};e.render(n).promise.then((function(){d=!1,null!==p&&(F(p),p=null)}))})),document.querySelector("#page_num").innerText=e+"/"+c.numPages}function L(e){d?p=e:F(e)}P.style.display="none",P.onclick=()=>{(new a.media.VideoController).stop((e=>{e&&R(`[] Error occured while stopping the video - ${e.errorCode} : ${e.message}`),P.style.display="none",R("[] Video successfully stopped")}))},document.querySelector("#clearLogs").onclick=()=>{D()},A.value=JSON.stringify(r,void 0,4),A.style.width=A.scrollWidth+"px",A.style.height=A.scrollHeight+"px",b.onchange=()=>{m(!0);const e=b.options[b.selectedIndex].value;var t=JSON.stringify(r,void 0,4);"image"==e?t=JSON.stringify(y,void 0,4):"audio"==e?t=JSON.stringify(v,void 0,4):"videoAndImage"==e?t=JSON.stringify(n,void 0,4):"lensVideo"==e?t=JSON.stringify(w,void 0,4):"imageOutputFormats"==e&&(t=JSON.stringify(S,void 0,4)),A.value=t},T.onchange=()=>{var e;e=T.options[T.selectedIndex].value,document.querySelector("#mediaType").options[5].hidden="viewImages"==e,m(!0)},E.onclick=()=>{D(),m(!0);const e=JSON.parse(A.value),t=T.options[T.selectedIndex].value;var n;R(`${t} : ${JSON.stringify(e,void 0,4)}`),e.mediaType===a.media.MediaType.Video&&e.videoProps&&!1===e.videoProps.isFullScreenMode&&(e.videoProps.videoController&&(e.videoProps.videoController=o.videoController),P.style.display="block",a.menus.setNavBarMenu([I],(e=>("stop"===e&&(new a.media.VideoController).stop((e=>{e&&R(`Error occured while stopping the video - ${e.errorCode} : ${e.message}`),P.style.display="none",R("Video successfully stopped")})),!0)))),"getMedia"==t?(n=e,a.media.selectMedia(n,((e,t)=>{if(a.menus.setNavBarMenu([],(e=>!0)),P.style.display="none",e)R(e.errorCode+" "+e.message);else{var n=new Map;for(let e=0;e<t.length;e++){n.set(e,(new Date).getTime());const i=t[e];i.getMedia(((t,o)=>{if(t)R("MEDIA "+(e+1)+t.errorCode+" "+t.message);else{var r=new FileReader;r.readAsDataURL(o),r.onloadend=()=>{if(r.result){var t=(new Date).getTime()-n.get(e),a="MEDIA "+(e+1)+" - Received Blob : \n[size - "+s.formatFileSize(o.size)+" ("+o.size+"),\ntimeTaken - "+t+"]",l="data:"+k(i.mimeType)+";base64,"+i.preview;O(a,o.type,URL.createObjectURL(o),l)}else R("error occurred")}}}))}}}))):"viewImages"==t?function(e){a.media.selectMedia(e,((e,t)=>{if(e)return void R(e.errorCode+" "+e.message);const n=[];for(let e=0;e<t.length;e++){const i=t[e];n.push({value:i.content,type:a.media.ImageUriType.ID})}a.media.viewImages(n,(e=>{R(e?e.errorCode+" "+e.message:"Success")}))}))}(e):function(e){a.media.selectMedia(e,((e,t)=>{if(a.menus.setNavBarMenu([],(e=>!0)),P.style.display="none",e)R(e.errorCode+" "+e.message);else for(let e=0;e<t.length;e++){const o=t[e];let r="",a=20;o.preview&&(a=Math.min(a,o.preview.length),r=o.preview.substr(0,a));var n="MEDIA "+(e+1)+" - [format: "+o.format+",\n [size: "+s.formatFileSize(o.size)+" ("+o.size+")], \nmimeType: "+o.mimeType+", content: "+o.content+", \npreview: "+r+"]",i=k(o.mimeType);O(n,i,"data:"+i+";base64,"+o.preview)}}))}(e)}}},461:function(e,t,n){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n),Object.defineProperty(e,i,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&i(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.initializeNavigation=void 0;const a=r(n(303)),s=n(974);t.initializeNavigation=()=>{m("initializeNavigation"),a.initialize();const e={id:"filter",title:"Filter",viewData:null,enabled:!0,selected:!1,displayMode:a.menus.DisplayMode.ifRoom,icon:"PHN2ZyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSczMnB4JyBoZWlnaHQ9JzMycHgnIHZpZXdCb3g9JzAgMCAyOCAyOCcgdmVyc2lvbj0nMS4xJz48ZyBpZD0nUHJvZHVjdC1JY29ucycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9J2ljX2ZsdWVudF9maWx0ZXJfMjhfcmVndWxhcicgZmlsbD0nIzIxMjEyMScgZmlsbC1ydWxlPSdub256ZXJvJz48cGF0aCBkPSdNMTcuMjUsMTkgQzE3LjY2NDIxMzYsMTkgMTgsMTkuMzM1Nzg2NCAxOCwxOS43NSBDMTgsMjAuMTY0MjEzNiAxNy42NjQyMTM2LDIwLjUgMTcuMjUsMjAuNSBMMTAuNzUsMjAuNSBDMTAuMzM1Nzg2NCwyMC41IDEwLDIwLjE2NDIxMzYgMTAsMTkuNzUgQzEwLDE5LjMzNTc4NjQgMTAuMzM1Nzg2NCwxOSAxMC43NSwxOSBMMTcuMjUsMTkgWiBNMjEuMjUsMTMgQzIxLjY2NDIxMzYsMTMgMjIsMTMuMzM1Nzg2NCAyMiwxMy43NSBDMjIsMTQuMTY0MjEzNiAyMS42NjQyMTM2LDE0LjUgMjEuMjUsMTQuNSBMNi43NSwxNC41IEM2LjMzNTc4NjQ0LDE0LjUgNiwxNC4xNjQyMTM2IDYsMTMuNzUgQzYsMTMuMzM1Nzg2NCA2LjMzNTc4NjQ0LDEzIDYuNzUsMTMgTDIxLjI1LDEzIFogTTI0LjI1LDcgQzI0LjY2NDIxMzYsNyAyNSw3LjMzNTc4NjQ0IDI1LDcuNzUgQzI1LDguMTY0MjEzNTYgMjQuNjY0MjEzNiw4LjUgMjQuMjUsOC41IEwzLjc1LDguNSBDMy4zMzU3ODY0NCw4LjUgMyw4LjE2NDIxMzU2IDMsNy43NSBDMyw3LjMzNTc4NjQ0IDMuMzM1Nzg2NDQsNyAzLjc1LDcgTDI0LjI1LDcgWicgaWQ9J0NvbG9yJy8+PC9nPjwvZz48L3N2Zz4="},t={id:"newApproval",title:"New Approval Request",viewData:null,enabled:!0,selected:!1,displayMode:a.menus.DisplayMode.ifRoom,icon:"PHN2ZyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycgd2lkdGg9JzMycHgnIGhlaWdodD0nMzJweCcgdmlld0JveD0nMCAwIDI4IDI4Jz48ZyBpZD0nUHJvZHVjdC1JY29ucycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9J2ljX2ZsdWVudF9hZGRfMjhfcmVndWxhcicgZmlsbD0nIzIxMjEyMScgZmlsbC1ydWxlPSdub256ZXJvJz48cGF0aCBkPSdNMTQuNSwxMyBMMTQuNSwzLjc1Mzc4NTc3IEMxNC41LDMuMzM5Nzg1NzcgMTQuMTY0LDMuMDAzNzg1NzcgMTMuNzUsMy4wMDM3ODU3NyBDMTMuMzM2LDMuMDAzNzg1NzcgMTMsMy4zMzk3ODU3NyAxMywzLjc1Mzc4NTc3IEwxMywxMyBMMy43NTM4NzU3MywxMyBDMy4zMzk4NzU3MywxMyAzLjAwMzg3NTczLDEzLjMzNiAzLjAwMzg3NTczLDEzLjc1IEMzLjAwMzg3NTczLDE0LjE2NCAzLjMzOTg3NTczLDE0LjUgMy43NTM4NzU3MywxNC41IEwxMywxNC41IEwxMywyMy43NTIzNjUxIEMxMywyNC4xNjYzNjUxIDEzLjMzNiwyNC41MDIzNjUxIDEzLjc1LDI0LjUwMjM2NTEgQzE0LjE2NCwyNC41MDIzNjUxIDE0LjUsMjQuMTY2MzY1MSAxNC41LDIzLjc1MjM2NTEgTDE0LjUsMTQuNSBMMjMuNzQ5ODI2MiwxNC41MDMwNzU0IEMyNC4xNjM4MjYyLDE0LjUwMzA3NTQgMjQuNDk5ODI2MiwxNC4xNjcwNzU0IDI0LjQ5OTgyNjIsMTMuNzUzMDc1NCBDMjQuNDk5ODI2MiwxMy4zMzkwNzU0IDI0LjE2MzgyNjIsMTMuMDAzMDc1NCAyMy43NDk4MjYyLDEzLjAwMzA3NTQgTDE0LjUsMTMgWicgaWQ9J0NvbG9yJy8+PC9nPjwvZz48L3N2Zz4="},n={id:"changeApproval",title:"Change Approval Request",viewData:null,enabled:!0,selected:!1,displayMode:a.menus.DisplayMode.ifRoom,icon:"PHN2ZyB3aWR0aD0iNTAiIGhlaWdodD0iNTAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgIDxjaXJjbGUgY3g9IjI1IiBjeT0iMjUiIHI9IjIwIi8+Cjwvc3ZnPg=="},i={id:"copyLink",title:"Copy Link",viewData:null,enabled:!0,selected:!1,displayMode:a.menus.DisplayMode.ifRoom,icon:"PHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTkuMjUgN0M5LjY2NDIxIDcgMTAgNy4zMzU3OSAxMCA3Ljc1QzEwIDguMTI2NTYgOS43MjI0OSA4LjQzODMgOS4zNjA4MyA4LjQ5MTg3TDkuMjUgOC41SDdDNS4wNjcgOC41IDMuNSAxMC4wNjcgMy41IDEyQzMuNSAxMy44NjQgNC45NTcwNyAxNS4zODc2IDYuNzk0MzUgMTUuNDk0MUw3IDE1LjVIOS4yNUM5LjY2NDIxIDE1LjUgMTAgMTUuODM1OCAxMCAxNi4yNUMxMCAxNi42MjY2IDkuNzIyNDkgMTYuOTM4MyA5LjM2MDgzIDE2Ljk5MTlMOS4yNSAxN0g3QzQuMjM4NTggMTcgMiAxNC43NjE0IDIgMTJDMiA5LjMyMjI2IDQuMTA0OTYgNy4xMzYxNSA2Ljc1MDQ1IDcuMDA2MTJMNyA3SDkuMjVaTTE3IDdDMTkuNzYxNCA3IDIyIDkuMjM4NTggMjIgMTJDMjIgMTQuNjc3NyAxOS44OTUgMTYuODYzOCAxNy4yNDk1IDE2Ljk5MzlMMTcgMTdIMTQuNzVDMTQuMzM1OCAxNyAxNCAxNi42NjQyIDE0IDE2LjI1QzE0IDE1Ljg3MzQgMTQuMjc3NSAxNS41NjE3IDE0LjYzOTIgMTUuNTA4MUwxNC43NSAxNS41SDE3QzE4LjkzMyAxNS41IDIwLjUgMTMuOTMzIDIwLjUgMTJDMjAuNSAxMC4xMzYgMTkuMDQyOSA4LjYxMjQgMTcuMjA1NyA4LjUwNTk0TDE3IDguNUgxNC43NUMxNC4zMzU4IDguNSAxNCA4LjE2NDIxIDE0IDcuNzVDMTQgNy4zNzM0NCAxNC4yNzc1IDcuMDYxNyAxNC42MzkyIDcuMDA4MTNMMTQuNzUgN0gxN1pNNyAxMS4yNUgxN0MxNy40MTQyIDExLjI1IDE3Ljc1IDExLjU4NTggMTcuNzUgMTJDMTcuNzUgMTIuMzc5NyAxNy40Njc4IDEyLjY5MzUgMTcuMTAxOCAxMi43NDMyTDE3IDEyLjc1SDdDNi41ODU3OSAxMi43NSA2LjI1IDEyLjQxNDIgNi4yNSAxMkM2LjI1IDExLjYyMDMgNi41MzIxNSAxMS4zMDY1IDYuODk4MjMgMTEuMjU2OEw3IDExLjI1SDE3SDdaIiBmaWxsPSIjMjEyMTIxIi8+Cjwvc3ZnPgo="},o={id:"editInApp",title:"Edit In App",viewData:null,enabled:!0,selected:!1,displayMode:a.menus.DisplayMode.ifRoom,icon:"PHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik03LjAwMDEyIDE4SDMuMDAwMTJDMi40NTAxMiAxOCAyLjAwMDEyIDE3LjU1IDIuMDAwMTIgMTdWN0MyLjAwMDEyIDYuNDUgMi40NTAxMiA2IDMuMDAwMTIgNkg3LjAwMDEyVjMuODNDNy4wMDAxMiAzLjM3NCA3LjM3MzEyIDMgNy44MzAxMiAzSDIxLjE3MDFDMjEuNjI4MSAzIDIyLjAwMDEgMy4zNzIgMjIuMDAwMSAzLjgzVjIwLjE3QzIyLjAwMDEgMjAuNjI2IDIxLjYyNjEgMjEgMjEuMTcwMSAyMUg3LjgzMDEyQzcuMzcyMTIgMjEgNy4wMDAxMiAyMC42MjggNy4wMDAxMiAyMC4xN1YxOFpNMjEuMDAwMSAxMkgxOC4wMDAxVjlIMjEuMDAwMVYxMlpNMTguMDAwMSAxNkgyMS4wMDAxVjEzSDE4LjAwMDFWMTZaTTIxLjAwMDEgMjBIMTguMDAwMVYxN0gyMS4wMDAxVjIwWk04LjAwMDEyIDRIMjEuMDAwMVY4SDE3LjAwMDFWMjBIOC4wMDAxMlYxOEgxMy4wMDAxQzEzLjU1MDEgMTggMTQuMDAwMSAxNy41NSAxNC4wMDAxIDE3VjdDMTQuMDAwMSA2LjQ1IDEzLjU1MDEgNiAxMy4wMDAxIDZIOC4wMDAxMlY0Wk02LjY3MTEyIDExLjI3Nkw5LjMxMDEyIDE1Ljg3NUgxMS4xNTExVjguMTI1SDkuMzMzMTJWMTIuNTkzTDYuNzg5MTIgOC4xMjVINC44NDkxMlYxNS44NzVINi42NzExMlYxMS4yNzZaIiBmaWxsPSIjMjEyMTIxIi8+Cjwvc3ZnPgo="},r={id:"copyLink",title:"Copy Link 2",viewData:null,enabled:!0,selected:!1,displayMode:a.menus.DisplayMode.ifRoom,icon:"PHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTkuMjUgN0M5LjY2NDIxIDcgMTAgNy4zMzU3OSAxMCA3Ljc1QzEwIDguMTI2NTYgOS43MjI0OSA4LjQzODMgOS4zNjA4MyA4LjQ5MTg3TDkuMjUgOC41SDdDNS4wNjcgOC41IDMuNSAxMC4wNjcgMy41IDEyQzMuNSAxMy44NjQgNC45NTcwNyAxNS4zODc2IDYuNzk0MzUgMTUuNDk0MUw3IDE1LjVIOS4yNUM5LjY2NDIxIDE1LjUgMTAgMTUuODM1OCAxMCAxNi4yNUMxMCAxNi42MjY2IDkuNzIyNDkgMTYuOTM4MyA5LjM2MDgzIDE2Ljk5MTlMOS4yNSAxN0g3QzQuMjM4NTggMTcgMiAxNC43NjE0IDIgMTJDMiA5LjMyMjI2IDQuMTA0OTYgNy4xMzYxNSA2Ljc1MDQ1IDcuMDA2MTJMNyA3SDkuMjVaTTE3IDdDMTkuNzYxNCA3IDIyIDkuMjM4NTggMjIgMTJDMjIgMTQuNjc3NyAxOS44OTUgMTYuODYzOCAxNy4yNDk1IDE2Ljk5MzlMMTcgMTdIMTQuNzVDMTQuMzM1OCAxNyAxNCAxNi42NjQyIDE0IDE2LjI1QzE0IDE1Ljg3MzQgMTQuMjc3NSAxNS41NjE3IDE0LjYzOTIgMTUuNTA4MUwxNC43NSAxNS41SDE3QzE4LjkzMyAxNS41IDIwLjUgMTMuOTMzIDIwLjUgMTJDMjAuNSAxMC4xMzYgMTkuMDQyOSA4LjYxMjQgMTcuMjA1NyA4LjUwNTk0TDE3IDguNUgxNC43NUMxNC4zMzU4IDguNSAxNCA4LjE2NDIxIDE0IDcuNzVDMTQgNy4zNzM0NCAxNC4yNzc1IDcuMDYxNyAxNC42MzkyIDcuMDA4MTNMMTQuNzUgN0gxN1pNNyAxMS4yNUgxN0MxNy40MTQyIDExLjI1IDE3Ljc1IDExLjU4NTggMTcuNzUgMTJDMTcuNzUgMTIuMzc5NyAxNy40Njc4IDEyLjY5MzUgMTcuMTAxOCAxMi43NDMyTDE3IDEyLjc1SDdDNi41ODU3OSAxMi43NSA2LjI1IDEyLjQxNDIgNi4yNSAxMkM2LjI1IDExLjYyMDMgNi41MzIxNSAxMS4zMDY1IDYuODk4MjMgMTEuMjU2OEw3IDExLjI1SDE3SDdaIiBmaWxsPSIjMjEyMTIxIi8+Cjwvc3ZnPgo="},l=document.getElementById("registerBackButton"),c=document.querySelector("#registerBackReturn"),u=document.getElementById("setNavBarMenuButton"),d=document.getElementById("setNavBarMenuInput"),p=document.querySelector("#clearLogs"),f=document.querySelector("#blobs"),g=[e,t,n,i,o,r];function m(e){s.printLog("Navigation",e)}d.value=JSON.stringify(g,void 0,4),d.style.width=d.parentElement.scrollWidth+"px",d.style.height=d.scrollHeight+"px",u.onclick=()=>{const e=JSON.parse(d.value);a.menus.setNavBarMenu(e,(e=>(m(`Clicked ${e}`),!0)))},l.onclick=()=>{a.registerBackButtonHandler((()=>{var e=!1;return"true"==c.options[c.selectedIndex].value&&(e=!0),m(`onBack isHandled ${e}`),e}))},p.onclick=()=>{document.querySelector("#logs").innerText="",f.innerText=""}}},974:(e,t)=>{"use strict";function n(){var e=new Date;return e.getDate()+"/"+(e.getMonth()+1)+"/"+e.getFullYear()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds()}Object.defineProperty(t,"__esModule",{value:!0}),t.formatFileSize=t.printLog=t.getCurrentDateTime=void 0,t.getCurrentDateTime=n,t.printLog=function(e,t){var i="["+n()+"] "+t,o=document.getElementById("logs"),r=document.createElement("p");r.innerText=i,o.insertBefore(r,o.firstChild),console.log(e+": "+i)},t.formatFileSize=function(e,t=0){if(0==e)return"0 Bytes";var n=t<0?0:t,i=Math.floor(Math.log(e)/Math.log(1020));return parseFloat((e/Math.pow(1020,i)).toFixed(n))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][i]}}},t={};function n(i){var o=t[i];if(void 0!==o)return o.exports;var r=t[i]={exports:{}};return e[i].call(r.exports,r,r.exports,n),r.exports}(()=>{"use strict";n(178).initialize()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,